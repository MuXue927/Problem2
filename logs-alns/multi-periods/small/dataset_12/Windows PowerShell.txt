(base) PS D:\Gurobi_code\Problem2\ALNSCode> python main.py
0.0s 开始优化流程! / 2025-09-22 18:50:52.647730
0.0s Step 1: 加载数据...
0.0s Loading Data...
0.0s Data loading elapsed time: 0.04s
0.0s Step 1耗时: 0.04s
0.0s Step 2: 创建初始解...
0.0s Initializing the solution...
0.9s Initial Solution Objective: 4217.81
0.9s Vehicles Used in Initial Solution: 267
0.9s Initial Solution Cost: 411.18
0.9s Step 2耗时: 0.84s
0.9s Step 3: 设置ALNS算法...
0.9s 注册destroy算子...
0.9s 所有destroy算子注册完成
0.9s 注册repair算子...
0.9s 所有repair算子注册完成
0.9s Step 3耗时: 0.00s
0.9s Step 4: 配置算子选择机制...
0.9s Step 4耗时: 0.00s
0.9s Step 5: 配置接受准则...
0.9s Step 5耗时: 0.00s
0.9s Step 6: 配置停止准则...
0.9s 组合停止准则配置: 最大300次迭代 或 最大900秒运行时间
0.9s Step 6耗时: 0.00s
0.9s Step 7: 设置追踪器和回调函数...
0.9s Step 7耗时: 0.00s
0.9s Step 8: 运行ALNS算法...
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0080s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0623s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0095s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0803s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0100s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 正在构建特征和标签数据 ...
[OPLOG] tracker中无数据, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
构建训练数据: 特征长度 1, 标签长度 1, 目标函数改进 0.0000
3.0s Iteration 1: New best feasible solution found!
3.0s Objective: 4217.81, Gap: 0.00%, Time: 0.26s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0085s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 1 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 59 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0816s
[OPLOG] 已保存实际训练数据: 特征值长度=2, 标签长度=2, 改进=1000000.0000
1.3s Found feasible solution with cost: 397.40
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0110s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0100s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0132s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 2 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0901s
[OPLOG] 计算的实际特征: [74.0, 2.1891089108910893, 2.0, 109.58333333333333, 0.6591940329163378]
[OPLOG] 已保存实际训练数据: 特征值长度=3, 标签长度=3, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0104s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 3 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4564s
[OPLOG] local_search_repair: 0.5617s
[OPLOG] 计算的实际特征: [65.46987951807229, 1.9868064118372384, 2.0, 149.35555555555555, 0.744709562964136]
[OPLOG] 已保存实际训练数据: 特征值长度=4, 标签长度=4, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1569s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0104s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2588s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0107s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2302s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0107s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
4.7s Iteration 2: New best feasible solution found!
4.7s Objective: 3774.90, Gap: 0.00%, Time: 1.97s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0113s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 4 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2409s
[OPLOG] 计算的实际特征: [73.83333333333333, 1.4778801843317972, 2.0, 108.83333333333333, 0.8338689863616539]
[OPLOG] 已保存实际训练数据: 特征值长度=5, 标签长度=5, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0110s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0210s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 23 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0366s
3.3s Found feasible solution with cost: 393.50
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0228s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1006s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0141s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 5 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2216s
[OPLOG] local_search_repair: 0.4981s
[OPLOG] 计算的实际特征: [78.22222222222223, 2.0608620689655175, 2.0, 90.11666666666666, 0.6683120785188653]
[OPLOG] 已保存实际训练数据: 特征值长度=6, 标签长度=6, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0130s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0074s
5.9s Iteration 3: New best feasible solution found!
5.9s Objective: 3649.49, Gap: 0.00%, Time: 3.12s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0125s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0124s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0120s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2450s
[OPLOG] local_search_repair: 0.5142s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0134s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0231s
[OPLOG] local_search_repair: 0.3362s
5.0s Found feasible solution with cost: 370.63
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0134s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1932s
[OPLOG] local_search_repair: 0.2463s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0240s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1194s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0134s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0021s
7.4s Iteration 4: New best feasible solution found!
7.4s Objective: 3215.47, Gap: 0.00%, Time: 4.63s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0151s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 57 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0799s
5.7s Found feasible solution with cost: 367.04
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0149s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 6 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 已保存实际训练数据: 特征值长度=7, 标签长度=7, 改进=0.0000
7.6s Iteration 5: New best feasible solution found!
7.6s Objective: 3034.57, Gap: 0.00%, Time: 4.88s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0160s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2805s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0170s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 7 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2073s
[OPLOG] 计算的实际特征: [36.0, 1.2093457943925234, 2.0, 209.0, 0.8443374540050385]
[OPLOG] 已保存实际训练数据: 特征值长度=8, 标签长度=8, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0140s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 8 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2318s
[OPLOG] local_search_repair: 0.2832s
[OPLOG] 计算的实际特征: [61.483870967741936, 2.2353341584158413, 2.0, 159.7094017094017, 0.7194145806589644]
[OPLOG] 已保存实际训练数据: 特征值长度=9, 标签长度=9, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0160s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2464s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0150s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 31 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0468s
7.0s Found feasible solution with cost: 364.96
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0184s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 9 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0928s
[OPLOG] 已保存实际训练数据: 特征值长度=10, 标签长度=10, 改进=1000000.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0287s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0830s
[OPLOG] local_search_repair: 0.1738s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0198s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2592s
[OPLOG] local_search_repair: 0.3913s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0201s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 10 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0021s
[OPLOG] 已保存实际训练数据: 特征值长度=11, 标签长度=11, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0183s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2525s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0206s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0051s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0768s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 58 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0862s
8.4s Found feasible solution with cost: 363.98
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0226s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 68 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0984s
8.6s Found feasible solution with cost: 352.62
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0247s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0089s
[OPLOG] local_search_repair: 0.0500s
8.7s Found feasible solution with cost: 350.23
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0265s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0266s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2170s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0262s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 52 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0716s
11.1s Iteration 9: New best feasible solution found!
11.1s Objective: 2322.05, Gap: 0.00%, Time: 8.33s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0266s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2198s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0329s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 57 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0790s
9.6s Found feasible solution with cost: 349.75
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0289s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0148s
11.7s Iteration 10: New best feasible solution found!
11.7s Objective: 2251.35, Gap: 0.00%, Time: 8.93s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0314s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0042s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0346s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0783s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1028s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0847s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0317s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3075s
[OPLOG] local_search_repair: 0.4517s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0335s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0090s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0372s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0010s
[OPLOG] local_search_repair: 0.1576s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0346s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 11 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 59 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0863s
[OPLOG] 已保存实际训练数据: 特征值长度=12, 标签长度=12, 改进=1000000.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0270s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4526s
[OPLOG] local_search_repair: 0.5834s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0281s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0012s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0332s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2240s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0274s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 12 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0013s
[OPLOG] 计算的实际特征: [77.3125, 1.9966350301984472, 2.0, 299.6933333333333, 0.7773509389738514]
[OPLOG] 已保存实际训练数据: 特征值长度=13, 标签长度=13, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0286s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2407s
[OPLOG] local_search_repair: 0.3063s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0270s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0681s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0284s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2260s
[OPLOG] local_search_repair: 0.3192s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0279s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0045s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0277s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1864s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0283s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 13 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 49 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0728s
[OPLOG] 已保存实际训练数据: 特征值长度=14, 标签长度=14, 改进=1000000.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0323s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0010s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0302s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0288s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3769s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0958s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2079s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0282s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0293s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 14 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0030s
[OPLOG] 已保存实际训练数据: 特征值长度=15, 标签长度=15, 改进=1000000.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0337s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 58 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0836s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0329s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0169s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0317s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 15 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 计算的实际特征: [74.78709677419354, 1.9611306439674314, 2.0, 436.97750511247443, 0.8446564879339269]
[OPLOG] 已保存实际训练数据: 特征值长度=16, 标签长度=16, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0327s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0186s
[OPLOG] local_search_repair: 0.0979s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0335s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2156s
[OPLOG] local_search_repair: 0.3180s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0339s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2216s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0350s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3574s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0363s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 76 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1061s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0286s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0826s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0392s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0948s
[OPLOG] local_search_repair: 0.2435s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0384s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0555s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0320s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2428s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0332s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2281s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0304s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 16 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 计算的实际特征: [75.27741935483871, 1.9604223169314214, 2.0, 426.91718426501035, 0.8683020432178005]
[OPLOG] 已保存实际训练数据: 特征值长度=17, 标签长度=17, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0915s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 57 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0853s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0362s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0933s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0288s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 17 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 计算的实际特征: [79.43859649122807, 2.013331012878525, 2.0, 305.180790960452, 0.7577693598834483]
[OPLOG] 已保存实际训练数据: 特征值长度=18, 标签长度=18, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0391s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 16 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0294s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0292s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0289s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0023s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0279s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2119s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0314s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0065s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0300s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 53 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0771s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0318s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0352s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0020s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0356s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0086s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0349s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 18 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2118s
[OPLOG] 计算的实际特征: [67.5, 1.586086956521739, 2.0, 239.41666666666666, 0.7863562677312578]
[OPLOG] 已保存实际训练数据: 特征值长度=19, 标签长度=19, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0357s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0011s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0358s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2272s
[OPLOG] local_search_repair: 0.3936s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0332s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 17 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0275s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0348s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0160s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1017s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3347s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0381s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 19 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0715s
[OPLOG] 已保存实际训练数据: 特征值长度=20, 标签长度=20, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0419s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0328s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 20 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0015s
[OPLOG] 已保存实际训练数据: 特征值长度=21, 标签长度=21, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0330s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2140s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0417s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0951s
[OPLOG] local_search_repair: 0.2298s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0344s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2355s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0409s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0303s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0403s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0869s
[OPLOG] local_search_repair: 0.1519s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0386s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0365s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0014s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0348s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 53 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0773s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0315s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0274s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0032s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0287s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0308s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 21 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0010s
[OPLOG] 已保存实际训练数据: 特征值长度=22, 标签长度=22, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0276s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1029s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 22 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0022s
[OPLOG] 计算的实际特征: [98.83333333333333, 1.8012376237623762, 2.0, 257.5, 0.7633621154712718]
[OPLOG] 已保存实际训练数据: 特征值长度=23, 标签长度=23, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0408s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0298s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 23 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0131s
[OPLOG] 已保存实际训练数据: 特征值长度=24, 标签长度=24, 改进=1000000.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0314s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0294s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0055s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0303s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0011s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0304s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0303s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 24 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 58 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0837s
[OPLOG] 已保存实际训练数据: 特征值长度=25, 标签长度=25, 改进=1000000.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0316s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 无缓存模型，开始首次训练
[OPLOG] 自适应选择Ridge模型 (数据量: 25)
[Tracker] Cached ML model at iteration 36
[OPLOG] 模型训练完成, 已缓存到tracker
[OPLOG] 61 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2166s
[OPLOG] 计算的实际特征: [102.25, 2.2844444444444445, 2.0, 132.0, 0.7457719573609964]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=26, 标签长度=26, 改进=0.0000
[OPLOG] ML修复完成: 603次预测, 0次成功插入, 61个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3020s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0372s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1111s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0335s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 1 迭代
[OPLOG] 137 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4929s
[OPLOG] 计算的实际特征: [82.66666666666667, 1.9482185273159145, 2.0, 132.7906976744186, 0.7165379490210719]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=29, 标签长度=29, 改进=0.0000
[OPLOG] ML修复完成: 1287次预测, 2次成功插入, 137个需求使用greedy修复
[OPLOG] learning_based_repair: 0.6580s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0398s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1222s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0338s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0149s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0355s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0323s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0010s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0336s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 58 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0820s
24.3s Found feasible solution with cost: 359.06
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0341s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2073s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0371s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 3 迭代
[OPLOG] 59 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2207s
[OPLOG] 计算的实际特征: [77.0, 2.241007194244604, 2.0, 127.22222222222223, 0.7506132419014393]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=31, 标签长度=31, 改进=0.0000
[OPLOG] ML修复完成: 567次预测, 1次成功插入, 59个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3046s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1089s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0020s
27.1s Iteration 40: New best feasible solution found!
27.1s Objective: 2110.06, Gap: 0.00%, Time: 24.32s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0332s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0328s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0013s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0369s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1040s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0341s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 5 迭代
[OPLOG] 94 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3864s
[OPLOG] 计算的实际特征: [83.04545454545455, 2.0740049751243776, 2.0, 125.96153846153847, 0.7568954823782059]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=34, 标签长度=34, 改进=0.0000
[OPLOG] ML修复完成: 891次预测, 2次成功插入, 94个需求使用greedy修复
[OPLOG] learning_based_repair: 0.5101s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0397s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0097s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0389s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4546s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0511s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0020s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0483s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0515s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 7 迭代
[OPLOG] 58 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2749s
[OPLOG] 计算的实际特征: [78.0, 2.227272727272727, 2.0, 116.0, 0.7150554425117354]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=36, 标签长度=36, 改进=0.0000
[OPLOG] ML修复完成: 549次预测, 1次成功插入, 58个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3838s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1423s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 7 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0501s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0041s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0537s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0021s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0458s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0513s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2446s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0470s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0080s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=37, 标签长度=37, 改进=1000000.0000
[OPLOG] ML修复完成: 9次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0220s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0445s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0162s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0544s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0918s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0514s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2843s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0462s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0025s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0567s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0303s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0489s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2507s
[OPLOG] local_search_repair: 0.5059s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0453s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0040s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.1219s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 14 迭代
[OPLOG] 57 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2560s
[OPLOG] 计算的实际特征: [97.14285714285714, 2.61764705882353, 2.0, 124.52777777777777, 0.7244879477164586]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=38, 标签长度=38, 改进=0.0000
[OPLOG] ML修复完成: 576次预测, 0次成功插入, 57个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3468s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0477s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 76 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1192s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0499s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0846s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0511s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0504s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0635s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 15 迭代
[OPLOG] 21 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1103s
[OPLOG] 计算的实际特征: [110.0, 2.33125, 2.0, 83.33333333333333, 0.7230594175710172]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=40, 标签长度=40, 改进=0.0000
[OPLOG] ML修复完成: 207次预测, 1次成功插入, 21个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1597s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0465s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0526s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] local_search_repair: 0.2331s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0542s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 16 迭代
[OPLOG] 65 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3016s
[OPLOG] 计算的实际特征: [88.35714285714286, 2.19325, 2.0, 176.8095238095238, 0.7449481974857496]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=41, 标签长度=41, 改进=0.0000
[OPLOG] ML修复完成: 585次预测, 0次成功插入, 65个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3991s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0527s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.3019s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0503s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1598s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0592s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0040s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1288s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0422s
[OPLOG] local_search_repair: 0.0542s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0501s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0519s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 17 迭代
[OPLOG] 136 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5078s
[OPLOG] 计算的实际特征: [69.9622641509434, 1.8652173913043482, 2.0, 150.98275862068965, 0.7315351750456281]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=43, 标签长度=43, 改进=0.0000
[OPLOG] ML修复完成: 1278次预测, 1次成功插入, 136个需求使用greedy修复
[OPLOG] learning_based_repair: 0.6941s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0583s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1041s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0519s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0512s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2699s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0526s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0083s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0532s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 18 迭代
[OPLOG] 59 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2559s
[OPLOG] 计算的实际特征: [87.5, 2.7000000000000006, 2.0, 122.83333333333333, 0.7469504224454009]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=46, 标签长度=46, 改进=0.0000
[OPLOG] ML修复完成: 576次预测, 2次成功插入, 59个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3640s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0508s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0814s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0683s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0360s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1292s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0024s
[OPLOG] local_search_repair: 0.0760s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0582s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 20 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0549s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0054s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0576s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4119s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0663s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2202s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0579s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 22 迭代
[OPLOG] 56 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2646s
[OPLOG] 计算的实际特征: [104.0, 2.7399999999999998, 2.0, 138.22222222222223, 0.7505770329812141]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=47, 标签长度=47, 改进=0.0000
[OPLOG] ML修复完成: 540次预测, 0次成功插入, 56个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3527s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0657s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.3000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0666s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1130s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0593s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0823s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0579s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 23 迭代
[OPLOG] 24 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1219s
[OPLOG] 计算的实际特征: [107.0, 2.7999999999999994, 2.0, 134.33333333333334, 0.7441017029100274]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=48, 标签长度=48, 改进=0.0000
[OPLOG] ML修复完成: 225次预测, 0次成功插入, 24个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1643s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1325s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4773s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0608s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 23 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0515s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 24 迭代
[OPLOG] 63 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3040s
[OPLOG] 计算的实际特征: [74.33333333333333, 2.125777777777778, 2.0, 158.23809523809524, 0.7319044136346922]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=49, 标签长度=49, 改进=0.0000
[OPLOG] ML修复完成: 567次预测, 0次成功插入, 63个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3955s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0548s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2534s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0608s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 24 迭代
[OPLOG] 60 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2680s
[OPLOG] 计算的实际特征: [87.28571428571429, 1.8144329896907216, 2.0, 137.57142857142858, 0.7279168746219877]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=50, 标签长度=50, 改进=0.0000
[OPLOG] ML修复完成: 567次预测, 0次成功插入, 60个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3532s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0737s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1213s
[OPLOG] local_search_repair: 0.2289s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0550s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2770s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0684s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1061s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0533s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 84 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1470s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0600s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 25 迭代
[OPLOG] 92 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4150s
[OPLOG] 计算的实际特征: [77.53333333333333, 2.3509433962264152, 2.0, 120.59649122807018, 0.7537758404443549]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=53, 标签长度=53, 改进=0.0000
[OPLOG] ML修复完成: 882次预测, 2次成功插入, 92个需求使用greedy修复
[OPLOG] learning_based_repair: 0.5584s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.1275s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0189s
[OPLOG] local_search_repair: 0.0935s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0559s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1002s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0549s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4997s
[OPLOG] local_search_repair: 0.6012s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0653s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 18 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0426s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0549s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1013s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0600s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0700s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0070s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0710s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 23 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0531s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0598s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 29 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0584s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0031s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1327s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1282s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0588s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1017s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0643s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1066s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0552s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1089s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0595s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 10 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0260s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0580s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2673s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0614s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0015s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0583s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0568s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0954s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0587s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0033s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1369s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1029s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0478s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 57 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0993s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0292s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 87 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1359s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0378s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 37 迭代
[OPLOG] 19 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0902s
[OPLOG] 计算的实际特征: [103.33333333333333, 1.9000000000000001, 2.0, 99.33333333333333, 0.7333302458381726]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=54, 标签长度=54, 改进=0.0000
[OPLOG] ML修复完成: 171次预测, 0次成功插入, 19个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1247s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0285s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0090s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0304s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0745s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0311s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 39 迭代
[OPLOG] 6 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0288s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=56, 标签长度=56, 改进=1000000.0000
[OPLOG] ML修复完成: 54次预测, 1次成功插入, 6个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0588s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0460s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0310s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0422s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 16 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0337s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0381s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0395s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3692s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0458s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2497s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0467s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0406s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0181s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0453s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2719s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0424s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0013s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.1123s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0024s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0410s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2508s
[OPLOG] local_search_repair: 0.5398s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0401s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 44 迭代
[OPLOG] 53 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2821s
[OPLOG] 计算的实际特征: [64.52380952380952, 2.0528074866310164, 2.0, 89.52380952380952, 0.7033625810588463]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=57, 标签长度=57, 改进=0.0000
[OPLOG] ML修复完成: 477次预测, 0次成功插入, 53个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3610s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0483s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 23 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0427s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0445s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2580s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0436s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0097s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0496s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2086s
[OPLOG] local_search_repair: 0.4771s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0450s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0125s
[OPLOG] local_search_repair: 0.3200s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0429s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1763s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0451s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2883s
[OPLOG] local_search_repair: 0.3218s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0435s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 46 迭代
[OPLOG] 44 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1987s
[OPLOG] 计算的实际特征: [91.25, 2.271532846715328, 2.0, 119.0, 0.7429479946866397]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=59, 标签长度=59, 改进=0.0000
[OPLOG] ML修复完成: 432次预测, 1次成功插入, 44个需求使用greedy修复
[OPLOG] learning_based_repair: 0.2762s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0489s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0978s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0436s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0012s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1320s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1153s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0488s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0023s
[OPLOG] local_search_repair: 0.0627s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0580s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 60 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1142s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0501s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0022s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0498s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0021s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0422s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1512s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0571s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1089s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0479s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0020s
[OPLOG] local_search_repair: 0.1441s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0483s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2749s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0611s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1150s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0484s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 63 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1067s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0675s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 51 迭代
[OPLOG] 16 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0816s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=60, 标签长度=60, 改进=1000000.0000
[OPLOG] ML修复完成: 144次预测, 0次成功插入, 16个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1160s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0459s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0021s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.1125s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 94 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1721s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0762s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1278s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0506s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0144s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0440s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0070s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0534s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0691s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0020s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0552s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2506s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0461s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 129 个未满足需求
[OPLOG] 批次 1/9 处理成功
[OPLOG] 批次 2/9 处理成功
[OPLOG] 批次 3/9 处理成功
[OPLOG] 批次 4/9 处理成功
[OPLOG] 批次 5/9 处理成功
[OPLOG] 批次 6/9 处理成功
[OPLOG] 批次 7/9 处理成功
[OPLOG] 批次 8/9 处理成功
[OPLOG] 批次 9/9 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2126s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0692s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0022s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0541s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2848s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0468s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1045s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0396s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0948s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0401s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 54 迭代
[OPLOG] 60 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2430s
[OPLOG] 计算的实际特征: [90.0, 2.694736842105263, 2.0, 126.07407407407408, 0.724595867208672]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=62, 标签长度=62, 改进=0.0000
[OPLOG] ML修复完成: 594次预测, 1次成功插入, 60个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3535s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0460s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 54 迭代
[OPLOG] 23 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0982s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=63, 标签长度=63, 改进=1000000.0000
[OPLOG] ML修复完成: 207次预测, 0次成功插入, 23个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1378s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0997s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0060s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0477s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0924s
[OPLOG] local_search_repair: 0.2625s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0341s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 56 迭代
[OPLOG] 38 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1516s
[OPLOG] 计算的实际特征: [89.33333333333333, 2.1033898305084744, 2.0, 117.53333333333333, 0.7238360244658223]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=64, 标签长度=64, 改进=0.0000
[OPLOG] ML修复完成: 396次预测, 0次成功插入, 38个需求使用greedy修复
[OPLOG] learning_based_repair: 0.2141s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0358s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0173s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0401s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2948s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0422s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 56 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0070s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=65, 标签长度=65, 改进=1000000.0000
[OPLOG] ML修复完成: 9次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0187s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0495s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 57 迭代
[OPLOG] 63 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2736s
[OPLOG] 计算的实际特征: [77.75, 1.7792452830188676, 2.0, 162.31944444444446, 0.7232677429999134]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=66, 标签长度=66, 改进=0.0000
[OPLOG] ML修复完成: 567次预测, 0次成功插入, 63个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3729s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0494s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1656s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0450s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 19 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0354s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0517s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 57 迭代
[OPLOG] 21 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0958s
[OPLOG] 计算的实际特征: [43.333333333333336, 1.9000000000000001, 2.0, 140.66666666666666, 0.7328088559814169]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=67, 标签长度=67, 改进=0.0000
[OPLOG] ML修复完成: 189次预测, 0次成功插入, 21个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1297s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0459s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0217s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0448s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.3075s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0529s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2509s
[OPLOG] local_search_repair: 0.5148s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0465s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4120s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1236s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4338s
[OPLOG] local_search_repair: 0.5077s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0428s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0025s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0442s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 58 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0461s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 82 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1360s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0391s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 166 需求, 超时: 16.6s, 批次大小: 16
[OPLOG] 迭代 1: 剩余 59 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0921s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0335s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0864s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0390s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4239s
[OPLOG] local_search_repair: 0.7000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0307s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 60 迭代
[OPLOG] 76 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3673s
[OPLOG] 计算的实际特征: [79.15384615384616, 1.8708474576271186, 2.0, 175.82051282051282, 0.7447063484064592]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=70, 标签长度=70, 改进=0.0000
[OPLOG] ML修复完成: 711次预测, 2次成功插入, 76个需求使用greedy修复
[OPLOG] learning_based_repair: 0.4767s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0330s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0165s
[STOP] MaxIterations 触发停止条件 (运行时间: 62.76s)
63.7s Step 8耗时: 62.77s
63.7s 优化总耗时: 63.67s
63.7s Step 9: 处理结果...
63.7s Total iterations tracked: 96
63.7s Best objective found: 2110.0591
63.7s Final Gap: 16.68%
63.7s ALNS Final Gap: 16.68%
63.7s Best Heuristic Solution Objective: 2110.06
63.7s Vehicles Used in Best Solution: 265
63.7s Best Solution Cost: 359.06
63.7s ✓ 所有车辆的装载体积都满足容量约束
63.7s Step 9耗时: 0.05s
63.7s Step 10: 生成报告和图表...
64.7s Step 10耗时: 0.98s
***************************************************************************
                      优化完成! 2025-09-22 18:51:57.355025
***************************************************************************
====================================================================================================
***************************************************************************
                     The Vehicle Loading Plan is Done!
***************************************************************************
(base) PS D:\Gurobi_code\Problem2\ALNSCode> python check_solution.py
INFO:__main__:加载输入数据...
INFO:DataALNS:配置参数加载成功
INFO:DataALNS:成功加载 订单需求信息: 166 行数据
INFO:DataALNS:成功加载 生产基地库存容量上限: 2 行数据
INFO:DataALNS:成功加载 SKU体积信息: 16 行数据
INFO:DataALNS:成功加载 车辆类型信息: 3 行数据
INFO:DataALNS:成功加载 生产基地生产计划: 46 行数据
INFO:DataALNS:成功加载 生产基地期初库存: 16 行数据
INFO:DataALNS:数据完整性验证通过
INFO:DataALNS:数据加载和处理完成
INFO:__main__:加载输出数据...
INFO:OutputDataALNS:开始加载数据集: dataset_12
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_12\opt_result.csv, 形状: (278, 7)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_12\opt_details.csv, 形状: (278, 11)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_12\opt_summary.csv, 形状: (265, 9)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_12\non_fulfill.csv, 形状: (0, 3)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_12\sku_inv_left.csv, 形状: (96, 4)
INFO:OutputDataALNS:字典索引生成完成
INFO:OutputDataALNS:数据验证通过
INFO:OutputDataALNS:数据加载完成

数据统计:
输入数据 - 工厂: 2, 经销商: 19, SKU: 16
输出数据统计: {'total_deliveries': 219, 'total_vehicles_used': 265, 'unfulfilled_demands': 0, 'inventory_records': 96, 'total_quantity_shipped': 12968, 'unique_vehicles': 265}
INFO:__main__:开始解决方案验证...
INFO:__main__:检查订单满足情况...
INFO:__main__:经销商 Y4031572 的 SKU V0798153624 配送超量: 需求 44, 实际配送 47, 超出 3
INFO:__main__:经销商 Y4031572 的 SKU C0967421385 配送超量: 需求 100, 实际配送 322, 超出 222
INFO:__main__:经销商 Y4031572 的 SKU Z7032169854 配送超量: 需求 94, 实际配送 136, 超出 42
INFO:__main__:经销商 S5614832 的 SKU P9016382547 配送超量: 需求 114, 实际配送 200, 超出 86
INFO:__main__:经销商 F0718542 的 SKU P5697832041 配送超量: 需求 66, 实际配送 132, 超出 66
INFO:__main__:经销商 T2861905 的 SKU P5697832041 配送超量: 需求 99, 实际配送 142, 超出 43
INFO:__main__:经销商 Q1893674 的 SKU W2756904138 配送超量: 需求 98, 实际配送 112, 超出 14
INFO:__main__:经销商 Q1893674 的 SKU Z7032169854 配送超量: 需求 47, 实际配送 94, 超出 47
INFO:__main__:检查生产基地库存上限约束...
INFO:__main__:检查车辆容量约束...
INFO:__main__:车辆 94 (类型: 17.4) 在第 1 天未达到最小起运量: 最小起运量 83, 实际装载 81.7
INFO:__main__:车辆 90 (类型: 17.4) 在第 1 天未达到最小起运量: 最小起运量 83, 实际装载 65.60000000000001
INFO:__main__:车辆 89 (类型: 17.4) 在第 1 天未达到最小起运量: 最小起运量 83, 实际装载 67.2
INFO:__main__:车辆 252 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 52.7
INFO:__main__:车辆 73 (类型: 17.4) 在第 1 天未达到最小起运量: 最小起运量 83, 实际装载 33.0
INFO:__main__:车辆 79 (类型: 17.4) 在第 1 天未达到最小起运量: 最小起运量 83, 实际装载 27.2
INFO:__main__:车辆 52 (类型: 17.4) 在第 1 天未达到最小起运量: 最小起运量 83, 实际装载 2.8
INFO:__main__:车辆 70 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 16.799999999999997
INFO:__main__:车辆 253 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 57.0
INFO:__main__:车辆 34 (类型: 17.4) 在第 1 天未达到最小起运量: 最小起运量 83, 实际装载 16.099999999999998
INFO:__main__:车辆 251 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 56.1
INFO:__main__:车辆 256 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 32.3
INFO:__main__:车辆 264 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 14.0
INFO:__main__:车辆 33 (类型: 17.4) 在第 1 天未达到最小起运量: 最小起运量 83, 实际装载 50.6
INFO:__main__:车辆 258 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 42.0
INFO:__main__:车辆 197 (类型: 14.3) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 28.0
INFO:__main__:车辆 205 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 42.5
INFO:__main__:车辆 196 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 28.5
INFO:__main__:车辆 168 (类型: 9.6) 在第 1 天未达到最小起运量: 最小起运量 58, 实际装载 1.7
INFO:__main__:车辆 9 (类型: 17.4) 在第 2 天未达到最小起运量: 最小起运量 83, 实际装载 32.400000000000006
INFO:__main__:车辆 23 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 57.0
INFO:__main__:车辆 263 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 13.5
INFO:__main__:车辆 91 (类型: 17.4) 在第 2 天未达到最小起运量: 最小起运量 83, 实际装载 58.9
INFO:__main__:车辆 260 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 24.3
INFO:__main__:车辆 261 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 18.9
INFO:__main__:车辆 164 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 33.6
INFO:__main__:车辆 18 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 15.2
INFO:__main__:车辆 198 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 32.3
INFO:__main__:车辆 65 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 41.8
INFO:__main__:车辆 96 (类型: 17.4) 在第 2 天未达到最小起运量: 最小起运量 83, 实际装载 39.2
INFO:__main__:车辆 257 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 27.2
INFO:__main__:车辆 176 (类型: 17.4) 在第 2 天未达到最小起运量: 最小起运量 83, 实际装载 73.6
INFO:__main__:车辆 167 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 22.8
INFO:__main__:车辆 259 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 39.2
INFO:__main__:车辆 41 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 36.8
INFO:__main__:车辆 209 (类型: 17.4) 在第 2 天未达到最小起运量: 最小起运量 83, 实际装载 40.8
INFO:__main__:车辆 239 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 44.0
INFO:__main__:车辆 43 (类型: 17.4) 在第 2 天未达到最小起运量: 最小起运量 83, 实际装载 13.6
INFO:__main__:车辆 51 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 23.8
INFO:__main__:车辆 179 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 24.7
INFO:__main__:车辆 172 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 36.1
INFO:__main__:车辆 58 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 54.4
INFO:__main__:车辆 63 (类型: 9.6) 在第 2 天未达到最小起运量: 最小起运量 58, 实际装载 43.0
INFO:__main__:车辆 4 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 24.7
INFO:__main__:车辆 8 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 5.699999999999999
INFO:__main__:车辆 24 (类型: 9.6) 在第 3 天未达到最小起运量: 最小起运量 58, 实际装载 3.0
INFO:__main__:车辆 82 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 38.400000000000006
INFO:__main__:车辆 265 (类型: 9.6) 在第 3 天未达到最小起运量: 最小起运量 58, 实际装载 2.7
INFO:__main__:车辆 110 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 34.2
INFO:__main__:车辆 120 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 27.6
INFO:__main__:车辆 166 (类型: 9.6) 在第 3 天未达到最小起运量: 最小起运量 58, 实际装载 22.8
INFO:__main__:车辆 122 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 25.3
INFO:__main__:车辆 107 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 39.1
INFO:__main__:车辆 165 (类型: 9.6) 在第 3 天未达到最小起运量: 最小起运量 58, 实际装载 29.9
INFO:__main__:车辆 262 (类型: 9.6) 在第 3 天未达到最小起运量: 最小起运量 58, 实际装载 7.800000000000001
INFO:__main__:车辆 102 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 70.3
INFO:__main__:车辆 193 (类型: 9.6) 在第 3 天未达到最小起运量: 最小起运量 58, 实际装载 34.2
INFO:__main__:车辆 144 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 20.7
INFO:__main__:车辆 188 (类型: 9.6) 在第 3 天未达到最小起运量: 最小起运量 58, 实际装载 36.1
INFO:__main__:车辆 98 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 74.1
INFO:__main__:车辆 113 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 11.4
INFO:__main__:车辆 114 (类型: 17.4) 在第 3 天未达到最小起运量: 最小起运量 83, 实际装载 78.39999999999999
INFO:__main__:检查库存流转约束...

============================================================
解决方案验证结果摘要
============================================================
需求满足约束: ✅ 通过

生产基地库存上限约束: ✅ 通过

车辆容量约束: ✅ 通过

库存流转约束: ✅ 通过

总违反数量: 0
解决方案状态: 可行
============================================================
(base) PS D:\Gurobi_code\Problem2\ALNSCode>
