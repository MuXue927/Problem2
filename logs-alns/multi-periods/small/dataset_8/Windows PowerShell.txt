(base) PS D:\Gurobi_code\Problem2\ALNSCode> python main.py
0.0s 开始优化流程! / 2025-09-22 18:07:17.375346
0.0s Step 1: 加载数据...
0.0s Loading Data...
0.0s Data loading elapsed time: 0.04s
0.0s Step 1耗时: 0.04s
0.0s Step 2: 创建初始解...
0.0s Initializing the solution...
0.1s Initial Solution Objective: 3949.47
0.1s Vehicles Used in Initial Solution: 56
0.1s Initial Solution Cost: 66.64
0.1s Step 2耗时: 0.07s
0.1s Step 3: 设置ALNS算法...
0.1s 注册destroy算子...
0.1s 所有destroy算子注册完成
0.1s 注册repair算子...
0.1s 所有repair算子注册完成
0.1s Step 3耗时: 0.00s
0.1s Step 4: 配置算子选择机制...
0.1s Step 4耗时: 0.00s
0.1s Step 5: 配置接受准则...
0.1s Step 5耗时: 0.00s
0.1s Step 6: 配置停止准则...
0.1s 组合停止准则配置: 最大300次迭代 或 最大900秒运行时间
0.1s Step 6耗时: 0.00s
0.1s Step 7: 设置追踪器和回调函数...
0.1s Step 7耗时: 0.00s
0.1s Step 8: 运行ALNS算法...
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0000s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0102s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0025s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0257s
[OPLOG] local_search_repair: 0.0362s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0008s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0053s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0035s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0117s
0.2s Found feasible solution with cost: 62.55
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0058s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0053s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0956s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0134s
1.6s Iteration 1: New best feasible solution found!
1.6s Objective: 3446.16, Gap: 0.00%, Time: 0.26s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0051s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0050s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 正在构建特征和标签数据 ...
[OPLOG] tracker中无数据, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0147s
构建训练数据: 特征长度 1, 标签长度 1, 目标函数改进 0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0103s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0075s
0.5s Found feasible solution with cost: 56.84
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0051s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0055s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0112s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0093s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0081s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0063s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0142s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0070s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0079s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0043s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0259s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0104s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0054s
1.8s Iteration 3: New best feasible solution found!
1.8s Objective: 2813.96, Gap: 0.00%, Time: 0.52s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0053s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0110s
0.7s Found feasible solution with cost: 55.70
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0104s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0052s
[OPLOG] local_search_repair: 0.0103s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0669s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0091s
0.8s Found feasible solution with cost: 54.94
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0102s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0054s
2.0s Iteration 4: New best feasible solution found!
2.0s Objective: 2559.95, Gap: 0.00%, Time: 0.72s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0148s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0110s
0.9s Found feasible solution with cost: 50.42
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0184s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0054s
2.1s Iteration 5: New best feasible solution found!
2.1s Objective: 1947.75, Gap: 0.00%, Time: 0.82s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0160s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 1 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0051s
[OPLOG] 已保存实际训练数据: 特征值长度=2, 标签长度=2, 改进=1000000.0000
1.0s Found feasible solution with cost: 49.23
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0154s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0106s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 2 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] 已保存实际训练数据: 特征值长度=3, 标签长度=3, 改进=0.0000
2.3s Iteration 6: New best feasible solution found!
2.3s Objective: 1825.35, Gap: 0.00%, Time: 0.96s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0105s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0128s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 10 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0082s
1.1s Found feasible solution with cost: 48.42
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0210s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0022s
2.4s Iteration 7: New best feasible solution found!
2.4s Objective: 1743.15, Gap: 0.00%, Time: 1.10s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0137s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 3 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0032s
[OPLOG] 已保存实际训练数据: 特征值长度=4, 标签长度=4, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0150s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 10 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0084s
1.3s Found feasible solution with cost: 46.47
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0152s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 4 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 已保存实际训练数据: 特征值长度=5, 标签长度=5, 改进=0.0000
2.6s Iteration 9: New best feasible solution found!
2.6s Objective: 1447.95, Gap: 0.00%, Time: 1.27s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0152s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0122s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0183s
[OPLOG] local_search_repair: 0.0204s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0155s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0157s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 5 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0158s
[OPLOG] 计算的实际特征: [110.0, 2.5, 2.0, 34.666666666666664, 0.7344670338298636]
[OPLOG] 已保存实际训练数据: 特征值长度=6, 标签长度=6, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0162s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0156s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 8 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
1.6s Found feasible solution with cost: 44.47
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0156s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0051s
1.6s Found feasible solution with cost: 44.28
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0130s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 10 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0124s
3.0s Iteration 11: New best feasible solution found!
3.0s Objective: 1249.14, Gap: 0.00%, Time: 1.68s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0121s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0424s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0106s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0109s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0163s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0080s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0142s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0016s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0149s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0135s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0154s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0104s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0153s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0064s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0198s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0158s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0161s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 9 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0057s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0155s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0051s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0157s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0152s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0159s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0154s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0205s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0158s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0362s
[OPLOG] local_search_repair: 0.0362s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0169s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0157s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 6 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 9 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0053s
[OPLOG] 已保存实际训练数据: 特征值长度=7, 标签长度=7, 改进=1000000.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0201s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0258s
[OPLOG] local_search_repair: 0.0310s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0154s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0101s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0156s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0185s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0066s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0159s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 7 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] local_search_repair: 0.0070s
[OPLOG] 已保存实际训练数据: 特征值长度=8, 标签长度=8, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0207s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0154s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 8 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0052s
[OPLOG] local_search_repair: 0.0052s
[OPLOG] 已保存实际训练数据: 特征值长度=9, 标签长度=9, 改进=1000000.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0263s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0155s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0167s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0154s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0312s
[OPLOG] local_search_repair: 0.0396s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0207s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 9 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 计算的实际特征: [78.5, 1.8147582697201012, 2.0, 38.878787878787875, 0.5950926983401857]
[OPLOG] 已保存实际训练数据: 特征值长度=10, 标签长度=10, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0203s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0150s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0153s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0052s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0213s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 10 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0051s
[OPLOG] local_search_repair: 0.0051s
[OPLOG] 计算的实际特征: [69.0, 1.8, 2.0, 15.333333333333334, 0.5749863647505822]
[OPLOG] 已保存实际训练数据: 特征值长度=11, 标签长度=11, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0225s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 10 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0078s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0208s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0204s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 13 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0102s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0205s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 11 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 计算的实际特征: [90.5, 1.919889502762431, 2.0, 40.55555555555556, 0.573029125892621]
[OPLOG] 已保存实际训练数据: 特征值长度=12, 标签长度=12, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0204s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 12 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 已保存实际训练数据: 特征值长度=13, 标签长度=13, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0206s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0761s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0018s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0156s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 16 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0105s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0155s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0054s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0162s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0053s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0148s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0093s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0107s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0050s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0148s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0053s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0159s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 13 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0018s
[OPLOG] 已保存实际训练数据: 特征值长度=14, 标签长度=14, 改进=0.0000
4.7s Iteration 22: New best feasible solution found!
4.7s Objective: 1188.04, Gap: 0.00%, Time: 3.40s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0141s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0134s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0079s
[OPLOG] local_search_repair: 0.0079s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0156s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0258s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0156s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0158s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0144s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0107s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0184s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 14 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 计算的实际特征: [85.0, 1.8864864864864868, 2.0, 44.0, 0.5844399629727585]
[OPLOG] 已保存实际训练数据: 特征值长度=15, 标签长度=15, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0155s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0257s
[OPLOG] local_search_repair: 0.0257s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0152s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0051s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0155s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 15 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 已保存实际训练数据: 特征值长度=16, 标签长度=16, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0155s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0054s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0161s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0224s
[OPLOG] local_search_repair: 0.0263s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0161s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0246s
[OPLOG] local_search_repair: 0.0261s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0157s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0157s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0160s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0155s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0141s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0012s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0210s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0149s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 9 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0108s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0155s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 8 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0139s
4.2s Found feasible solution with cost: 39.66
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0156s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0107s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 26 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0141s
4.2s Found feasible solution with cost: 36.85
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0081s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 7 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0052s
5.6s Iteration 28: New best feasible solution found!
5.6s Objective: 691.74, Gap: 0.00%, Time: 4.29s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0085s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0050s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0152s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0050s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 8 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0087s
4.5s Found feasible solution with cost: 36.47
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0105s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0060s
5.8s Iteration 29: New best feasible solution found!
5.8s Objective: 649.74, Gap: 0.00%, Time: 4.51s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0095s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0055s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0104s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0039s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0093s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
4.7s Found feasible solution with cost: 36.47
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0054s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0052s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0097s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0050s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0121s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 16 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0013s
[OPLOG] 已保存实际训练数据: 特征值长度=17, 标签长度=17, 改进=1000000.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0088s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0019s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0105s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0121s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0171s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0087s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0066s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0155s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0102s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0054s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0280s
[OPLOG] local_search_repair: 0.0318s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0099s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0053s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0135s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 16 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0081s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0105s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0084s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0302s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0093s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0108s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0067s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0119s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0011s
6.4s Iteration 32: New best feasible solution found!
6.5s Objective: 607.74, Gap: 0.00%, Time: 5.12s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0054s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0102s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0127s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0131s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0017s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0098s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 17 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0078s
[OPLOG] 已保存实际训练数据: 特征值长度=18, 标签长度=18, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0133s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0038s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0101s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0316s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0071s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0102s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0054s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0105s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0108s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0106s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0104s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0032s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0103s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0052s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0122s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0125s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0155s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 18 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0177s
[OPLOG] 计算的实际特征: [91.4, 1.9976923076923077, 2.0, 19.19047619047619, 0.6211486898779612]
[OPLOG] 已保存实际训练数据: 特征值长度=19, 标签长度=19, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0151s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0712s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0030s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0141s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0104s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0105s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0066s
[OPLOG] local_search_repair: 0.0107s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0108s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0105s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 19 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 9 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 已保存实际训练数据: 特征值长度=20, 标签长度=20, 改进=1000000.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0153s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 20 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0424s
[OPLOG] 计算的实际特征: [74.625, 1.6718832891246682, 2.0, 20.257575757575758, 0.48935768368871396]
[OPLOG] 已保存实际训练数据: 特征值长度=21, 标签长度=21, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0160s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0053s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0142s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 21 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0051s
[OPLOG] 计算的实际特征: [74.33333333333333, 2.2217557251908397, 2.0, 17.547619047619047, 0.5676664572864321]
[OPLOG] 已保存实际训练数据: 特征值长度=22, 标签长度=22, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0156s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0152s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0155s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0374s
[OPLOG] local_search_repair: 0.0410s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0109s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0101s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0160s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0053s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0158s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 27 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0097s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0051s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0033s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0051s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] local_search_repair: 0.0110s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0052s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 22 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0252s
[OPLOG] local_search_repair: 0.0320s
[OPLOG] 计算的实际特征: [70.38461538461539, 1.9463829787234042, 2.0, 17.88235294117647, 0.5714704958616613]
[OPLOG] 已保存实际训练数据: 特征值长度=23, 标签长度=23, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0052s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 23 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0193s
[OPLOG] 计算的实际特征: [102.14285714285714, 1.9386617100371748, 2.0, 26.87878787878788, 0.6150010469011725]
[OPLOG] 已保存实际训练数据: 特征值长度=24, 标签长度=24, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0000s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0055s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0024s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0383s
[OPLOG] local_search_repair: 0.0442s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0037s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0314s
[OPLOG] local_search_repair: 0.0368s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0034s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0010s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0077s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0051s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 22 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0119s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0052s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0106s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0054s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0054s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0053s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0153s
[OPLOG] local_search_repair: 0.0213s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0087s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 24 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0055s
[OPLOG] 计算的实际特征: [105.25, 2.340740740740741, 2.0, 22.72222222222222, 0.6768094378140703]
[OPLOG] 已保存实际训练数据: 特征值长度=25, 标签长度=25, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0055s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0014s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0158s
[OPLOG] local_search_repair: 0.0209s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0052s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 无缓存模型，开始首次训练
[OPLOG] 自适应选择Ridge模型 (数据量: 25)
[Tracker] Cached ML model at iteration 46
[OPLOG] 模型训练完成, 已缓存到tracker
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0054s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0059s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0054s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 9 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0099s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0105s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0054s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0055s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0053s
[OPLOG] local_search_repair: 0.0053s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0052s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0096s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0163s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0062s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 3 迭代
[OPLOG] 5 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0102s
[OPLOG] 计算的实际特征: [91.5, 1.4, 2.0, 39.77777777777778, 0.6446925699928212]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=26, 标签长度=26, 改进=0.0000
[OPLOG] ML修复完成: 36次预测, 0次成功插入, 5个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0159s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0050s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0054s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0069s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 4 迭代
[OPLOG] 8 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0190s
[OPLOG] 计算的实际特征: [92.33333333333333, 1.6192660550458715, 2.0, 20.333333333333332, 0.621958273510409]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=27, 标签长度=27, 改进=0.0000
[OPLOG] ML修复完成: 54次预测, 0次成功插入, 8个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0246s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0054s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0037s
[OPLOG] local_search_repair: 0.0054s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0082s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0128s
[OPLOG] local_search_repair: 0.0128s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0097s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0010s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0103s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 9 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0064s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0072s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0130s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0117s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0139s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0119s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0041s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0105s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 8 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0102s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0101s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0107s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0154s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0120s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0037s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0105s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0053s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0169s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0041s
[OPLOG] local_search_repair: 0.0079s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0139s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0304s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0118s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0017s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0155s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 10 迭代
[OPLOG] 25 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0469s
[OPLOG] 计算的实际特征: [80.57142857142857, 1.8133056133056134, 2.0, 21.93103448275862, 0.47753320172290026]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=28, 标签长度=28, 改进=0.0000
[OPLOG] ML修复完成: 198次预测, 0次成功插入, 25个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0674s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0153s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 10 迭代
[OPLOG] 2 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 计算的实际特征: [84.5, 1.4142857142857141, 2.0, 25.5, 0.6780765962163758]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=29, 标签长度=29, 改进=0.0000
[OPLOG] ML修复完成: 12次预测, 0次成功插入, 2个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0104s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0103s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0148s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0102s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0123s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0054s
[OPLOG] local_search_repair: 0.0054s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0204s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 10 迭代
[OPLOG] 5 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0103s
[OPLOG] 计算的实际特征: [99.0, 1.9939024390243902, 2.0, 18.916666666666668, 0.6547527157848063]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=30, 标签长度=30, 改进=0.0000
[OPLOG] ML修复完成: 36次预测, 0次成功插入, 5个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0154s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0141s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 10 迭代
[OPLOG] 11 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0259s
[OPLOG] 计算的实际特征: [90.375, 1.8464864864864865, 2.0, 21.696969696969695, 0.5870389272752652]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=31, 标签长度=31, 改进=0.0000
[OPLOG] ML修复完成: 90次预测, 0次成功插入, 11个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0415s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0211s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0018s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0099s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0105s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0161s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0089s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0159s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0051s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0119s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 2 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=32, 标签长度=32, 改进=1000000.0000
[OPLOG] ML修复完成: 18次预测, 0次成功插入, 2个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0051s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0147s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0094s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0206s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0051s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0108s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 13 迭代
[OPLOG] 2 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0068s
[OPLOG] 计算的实际特征: [75.0, 2.4833333333333334, 2.0, 15.25, 0.6402080940416368]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=33, 标签长度=33, 改进=0.0000
[OPLOG] ML修复完成: 24次预测, 0次成功插入, 2个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0205s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0155s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0154s
[OPLOG] local_search_repair: 0.0154s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0203s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0025s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0201s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 13 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0158s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0108s
7.9s Found feasible solution with cost: 36.66
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0105s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0000s
9.2s Iteration 61: New best feasible solution found!
9.2s Objective: 442.64, Gap: 0.00%, Time: 7.91s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0744s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0053s
8.1s Found feasible solution with cost: 34.28
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0153s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 8 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0054s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0106s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0055s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0156s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 7 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0054s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0151s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0109s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0151s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0156s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0052s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0152s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 18 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0205s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0036s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0154s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 20 迭代
[OPLOG] 6 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0161s
[OPLOG] 计算的实际特征: [96.25, 2.5873684210526315, 2.0, 18.857142857142858, 0.6018155812848024]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=34, 标签长度=34, 改进=0.0000
[OPLOG] ML修复完成: 60次预测, 0次成功插入, 6个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0340s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0161s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0204s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0201s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 20 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0057s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=35, 标签长度=35, 改进=1000000.0000
[OPLOG] ML修复完成: 6次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0057s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0160s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 21 迭代
[OPLOG] 14 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0237s
[OPLOG] 计算的实际特征: [77.33333333333333, 2.1984126984126986, 2.0, 18.05128205128205, 0.5855790559942571]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=36, 标签长度=36, 改进=0.0000
[OPLOG] ML修复完成: 114次预测, 0次成功插入, 14个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0484s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0199s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0003s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0159s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0307s
[OPLOG] local_search_repair: 0.0359s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0160s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0038s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0211s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0149s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0156s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0208s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0166s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0160s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0158s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0206s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0225s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0204s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0207s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0159s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0154s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 24 迭代
[OPLOG] 7 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0180s
[OPLOG] 计算的实际特征: [74.5, 2.0237410071942445, 2.0, 17.0, 0.6043907907593523]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=37, 标签长度=37, 改进=0.0000
[OPLOG] ML修复完成: 60次预测, 0次成功插入, 7个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0300s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0212s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0059s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0159s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0368s
[OPLOG] local_search_repair: 0.0468s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0209s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0160s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0153s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0051s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0175s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0293s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0171s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0207s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0210s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0311s
[OPLOG] local_search_repair: 0.0364s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0148s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0050s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0157s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0063s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0168s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0035s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0159s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0232s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0154s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0158s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0218s
[OPLOG] local_search_repair: 0.0218s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0155s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0464s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0155s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0837s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0346s
[OPLOG] local_search_repair: 0.0372s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0197s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0153s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0204s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 28 迭代
[OPLOG] 10 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0312s
[OPLOG] 计算的实际特征: [83.4, 1.9495145631067963, 2.0, 17.622222222222224, 0.5481690524993388]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=38, 标签长度=38, 改进=0.0000
[OPLOG] ML修复完成: 90次预测, 0次成功插入, 10个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0417s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0209s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0135s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0156s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0200s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0155s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0169s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0156s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0156s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0196s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0045s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0158s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0160s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 30 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0209s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0156s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0055s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0168s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0206s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 33 迭代
[OPLOG] 3 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0035s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=39, 标签长度=39, 改进=1000000.0000
[OPLOG] ML修复完成: 18次预测, 0次成功插入, 3个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0051s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0205s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0028s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0214s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0199s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0107s
[OPLOG] local_search_repair: 0.0160s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0154s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0012s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0200s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0316s
[OPLOG] local_search_repair: 0.0367s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0205s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0158s
[OPLOG] local_search_repair: 0.0260s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0200s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0018s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0204s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0052s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0219s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0258s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] local_search_repair: 0.0078s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0255s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 38 迭代
[OPLOG] 10 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0265s
[OPLOG] 计算的实际特征: [83.4, 1.9495145631067963, 2.0, 17.622222222222224, 0.5238716015977322]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=40, 标签长度=40, 改进=0.0000
[OPLOG] ML修复完成: 90次预测, 0次成功插入, 10个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0450s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0210s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0165s
[OPLOG] local_search_repair: 0.0218s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0209s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0309s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0206s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 38 迭代
[OPLOG] 7 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0158s
[OPLOG] 计算的实际特征: [99.4, 1.9376712328767123, 2.0, 24.041666666666668, 0.5789400550047535]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=41, 标签长度=41, 改进=0.0000
[OPLOG] ML修复完成: 66次预测, 0次成功插入, 7个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0342s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0201s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 27 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0078s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0789s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0204s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 38 迭代
[OPLOG] 2 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 计算的实际特征: [119.0, 2.7, 2.0, 33.666666666666664, 0.6544530689160086]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=42, 标签长度=42, 改进=0.0000
[OPLOG] ML修复完成: 24次预测, 0次成功插入, 2个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0153s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0248s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0050s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0232s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0196s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0150s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0248s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0043s
[STOP] MaxIterations 触发停止条件 (运行时间: 11.03s)
11.2s Step 8耗时: 11.03s
11.2s 优化总耗时: 11.15s
11.2s Step 9: 处理结果...
11.2s Total iterations tracked: 85
11.2s Best objective found: 442.6367
11.2s Final Gap: 52.69%
11.2s ALNS Final Gap: 63.68%
11.2s Best Heuristic Solution Objective: 339.83
11.2s Vehicles Used in Best Solution: 32
11.2s Best Solution Cost: 34.28
11.2s ✓ 所有车辆的装载体积都满足容量约束
11.2s Step 9耗时: 0.05s
11.2s Step 10: 生成报告和图表...
12.1s Step 10耗时: 0.85s
***************************************************************************
                      优化完成! 2025-09-22 18:07:29.427321
***************************************************************************
====================================================================================================
***************************************************************************
                     The Vehicle Loading Plan is Done!
***************************************************************************
(base) PS D:\Gurobi_code\Problem2\ALNSCode> python check_solution.py
INFO:__main__:加载输入数据...
INFO:DataALNS:配置参数加载成功
INFO:DataALNS:成功加载 订单需求信息: 27 行数据
INFO:DataALNS:成功加载 生产基地库存容量上限: 3 行数据
INFO:DataALNS:成功加载 SKU体积信息: 26 行数据
INFO:DataALNS:成功加载 车辆类型信息: 2 行数据
INFO:DataALNS:成功加载 生产基地生产计划: 75 行数据
INFO:DataALNS:成功加载 生产基地期初库存: 26 行数据
INFO:DataALNS:数据完整性验证通过
INFO:DataALNS:数据加载和处理完成
INFO:__main__:加载输出数据...
INFO:OutputDataALNS:开始加载数据集: dataset_8
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_8\opt_result.csv, 形状: (38, 7)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_8\opt_details.csv, 形状: (38, 11)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_8\opt_summary.csv, 形状: (32, 9)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_8\non_fulfill.csv, 形状: (0, 3)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_8\sku_inv_left.csv, 形状: (234, 4)
INFO:OutputDataALNS:字典索引生成完成
INFO:OutputDataALNS:数据验证通过
INFO:OutputDataALNS:数据加载完成

数据统计:
输入数据 - 工厂: 3, 经销商: 2, SKU: 26
输出数据统计: {'total_deliveries': 33, 'total_vehicles_used': 32, 'unfulfilled_demands': 0, 'inventory_records': 234, 'total_quantity_shipped': 2132, 'unique_vehicles': 32}
INFO:__main__:开始解决方案验证...
INFO:__main__:检查订单满足情况...
INFO:__main__:经销商 F2850946 的 SKU T6039824715 配送超量: 需求 43, 实际配送 86, 超出 43
INFO:__main__:经销商 F2850946 的 SKU F5839721046 配送超量: 需求 97, 实际配送 111, 超出 14
INFO:__main__:检查生产基地库存上限约束...
INFO:__main__:检查车辆容量约束...
INFO:__main__:车辆 32 (类型: 14.0) 在第 2 天未达到最小起运量: 最小起运量 100, 实际装载 63.8
INFO:__main__:车辆 25 (类型: 14.0) 在第 3 天未达到最小起运量: 最小起运量 100, 实际装载 59.8
INFO:__main__:车辆 26 (类型: 14.0) 在第 3 天未达到最小起运量: 最小起运量 100, 实际装载 57.8
INFO:__main__:车辆 30 (类型: 14.0) 在第 3 天未达到最小起运量: 最小起运量 100, 实际装载 96.6
INFO:__main__:车辆 1 (类型: 19.9) 在第 3 天未达到最小起运量: 最小起运量 142, 实际装载 77.5
INFO:__main__:车辆 6 (类型: 14.0) 在第 3 天未达到最小起运量: 最小起运量 100, 实际装载 58.9
INFO:__main__:车辆 17 (类型: 14.0) 在第 3 天未达到最小起运量: 最小起运量 100, 实际装载 85.8
INFO:__main__:车辆 22 (类型: 19.9) 在第 3 天未达到最小起运量: 最小起运量 142, 实际装载 44.0
INFO:__main__:检查库存流转约束...

============================================================
解决方案验证结果摘要
============================================================
需求满足约束: ✅ 通过

生产基地库存上限约束: ✅ 通过

车辆容量约束: ✅ 通过

库存流转约束: ✅ 通过

总违反数量: 0
解决方案状态: 可行
============================================================
(base) PS D:\Gurobi_code\Problem2\ALNSCode>
