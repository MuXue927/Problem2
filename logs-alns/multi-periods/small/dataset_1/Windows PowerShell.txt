(base) PS D:\Gurobi_code\Problem2\ALNSCode> python main.py
0.0s 开始优化流程! / 2025-09-22 15:19:42.187436
0.0s Step 1: 加载数据...
0.0s Loading Data...
0.1s Data loading elapsed time: 0.07s
0.1s Step 1耗时: 0.07s
0.1s Step 2: 创建初始解...
0.1s Initializing the solution...
0.1s Initial Solution Objective: 1267.39
0.1s Vehicles Used in Initial Solution: 71
0.1s Initial Solution Cost: 92.30
0.1s Step 2耗时: 0.06s
0.1s Step 3: 设置ALNS算法...
0.1s 注册destroy算子...
0.1s 所有destroy算子注册完成
0.1s 注册repair算子...
0.1s 所有repair算子注册完成
0.1s Step 3耗时: 0.00s
0.1s Step 4: 配置算子选择机制...
0.1s Step 4耗时: 0.00s
0.1s Step 5: 配置接受准则...
0.1s Step 5耗时: 0.00s
0.1s Step 6: 配置停止准则...
0.2s 组合停止准则配置: 最大300次迭代 或 最大900秒运行时间
0.2s Step 6耗时: 0.00s
0.2s Step 7: 设置追踪器和回调函数...
0.2s Step 7耗时: 0.00s
0.2s Step 8: 运行ALNS算法...
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0052s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0023s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0071s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0026s
0.2s Found feasible solution with cost: 91.00
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1395s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 正在构建特征和标签数据 ...
[OPLOG] tracker中无数据, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0082s
构建训练数据: 特征长度 1, 标签长度 1, 目标函数改进 1000000.0000
3.0s Iteration 1: New best feasible solution found!
3.0s Objective: 1264.60, Gap: 0.00%, Time: 0.20s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0030s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0012s
[OPLOG] local_search_repair: 0.0205s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0054s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0050s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0050s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0159s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0053s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 1 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0250s
[OPLOG] 计算的实际特征: [69.75, 2.6, 2.0, 22.4, 0.6314185546667994]
[OPLOG] 已保存实际训练数据: 特征值长度=2, 标签长度=2, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0054s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0052s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 2 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 已保存实际训练数据: 特征值长度=3, 标签长度=3, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0051s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 3 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0200s
[OPLOG] 计算的实际特征: [69.25, 2.60875, 2.0, 27.333333333333332, 0.6238223355045786]
[OPLOG] 已保存实际训练数据: 特征值长度=4, 标签长度=4, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0107s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0057s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0059s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
3.2s Iteration 4: New best feasible solution found!
3.2s Objective: 1237.59, Gap: 0.00%, Time: 0.43s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0610s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 4 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0220s
[OPLOG] 计算的实际特征: [66.1, 2.407725321888412, 2.0, 32.64705882352941, 0.616966312791858]
[OPLOG] 已保存实际训练数据: 特征值长度=5, 标签长度=5, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0070s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0103s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 13 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0106s
0.7s Found feasible solution with cost: 88.78
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0104s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0064s
0.7s Found feasible solution with cost: 87.70
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0099s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
3.4s Iteration 5: New best feasible solution found!
3.4s Objective: 1071.89, Gap: 0.00%, Time: 0.63s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0094s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 5 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0046s
[OPLOG] 已保存实际训练数据: 特征值长度=6, 标签长度=6, 改进=1000000.0000
0.8s Found feasible solution with cost: 87.40
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0106s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0309s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0157s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 6 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0203s
[OPLOG] 已保存实际训练数据: 特征值长度=7, 标签长度=7, 改进=1000000.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0109s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0261s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0059s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0156s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0113s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0104s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0107s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0102s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0154s
[OPLOG] local_search_repair: 0.0309s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0101s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0101s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0051s
[OPLOG] local_search_repair: 0.0157s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0108s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 7 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0081s
[OPLOG] 已保存实际训练数据: 特征值长度=8, 标签长度=8, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0104s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0156s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0142s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0054s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0149s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0146s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0104s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0127s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0031s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0105s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 13 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0105s
1.3s Found feasible solution with cost: 85.48
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0111s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0025s
4.1s Iteration 10: New best feasible solution found!
4.1s Objective: 942.79, Gap: 0.00%, Time: 1.25s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0110s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0156s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0118s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 7 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0040s
1.5s Found feasible solution with cost: 83.88
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0096s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 8 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 计算的实际特征: [65.64285714285714, 2.175922671353251, 2.0, 79.01754385964912, 0.6539904200396979]
[OPLOG] 已保存实际训练数据: 特征值长度=9, 标签长度=9, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0108s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 9 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0051s
[OPLOG] 已保存实际训练数据: 特征值长度=10, 标签长度=10, 改进=1000000.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0111s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0144s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0142s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0259s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0155s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0205s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0110s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0195s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0053s
[OPLOG] local_search_repair: 0.0108s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0677s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0156s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0065s
1.8s Found feasible solution with cost: 82.80
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0192s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 14 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0088s
1.8s Found feasible solution with cost: 82.50
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0136s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0123s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 10 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0101s
[OPLOG] 已保存实际训练数据: 特征值长度=11, 标签长度=11, 改进=91.1013
1.9s Found feasible solution with cost: 81.16
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0126s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0274s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0171s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0031s
4.7s Iteration 14: New best feasible solution found!
4.7s Objective: 855.78, Gap: 0.00%, Time: 1.87s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0125s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0164s
[OPLOG] local_search_repair: 0.0257s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0157s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 11 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0145s
[OPLOG] local_search_repair: 0.0145s
[OPLOG] 计算的实际特征: [50.333333333333336, 2.565760869565217, 2.0, 31.488888888888887, 0.7298755014104292]
[OPLOG] 已保存实际训练数据: 特征值长度=12, 标签长度=12, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0153s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0206s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0151s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 12 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0047s
[OPLOG] local_search_repair: 0.0047s
[OPLOG] 已保存实际训练数据: 特征值长度=13, 标签长度=13, 改进=5.5003
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0170s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0043s
4.9s Iteration 15: New best feasible solution found!
4.9s Objective: 850.28, Gap: 0.00%, Time: 2.13s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0156s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 13 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 已保存实际训练数据: 特征值长度=14, 标签长度=14, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0203s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0104s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0164s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0063s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0156s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0068s
2.4s Found feasible solution with cost: 80.78
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0154s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0317s
[OPLOG] local_search_repair: 0.0368s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0154s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0061s
2.5s Found feasible solution with cost: 78.04
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0205s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0071s
[OPLOG] local_search_repair: 0.0161s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0727s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0112s
2.6s Found feasible solution with cost: 76.32
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0159s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0247s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0156s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0051s
5.4s Iteration 18: New best feasible solution found!
5.4s Objective: 586.88, Gap: 0.00%, Time: 2.63s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0206s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0154s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 14 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0019s
[OPLOG] local_search_repair: 0.0090s
[OPLOG] 已保存实际训练数据: 特征值长度=15, 标签长度=15, 改进=1000000.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0207s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0018s
[OPLOG] local_search_repair: 0.0018s
5.6s Iteration 20: New best feasible solution found!
5.6s Objective: 581.38, Gap: 0.00%, Time: 2.82s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0187s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 15 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 已保存实际训练数据: 特征值长度=16, 标签长度=16, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0202s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0262s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0209s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0051s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0207s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 16 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0051s
[OPLOG] 计算的实际特征: [64.0, 2.9, 2.0, 27.333333333333332, 0.7537164767292394]
[OPLOG] 已保存实际训练数据: 特征值长度=17, 标签长度=17, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0205s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0050s
3.2s Found feasible solution with cost: 73.72
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0172s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0040s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0811s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0025s
3.3s Found feasible solution with cost: 73.42
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0195s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0081s
6.1s Iteration 22: New best feasible solution found!
6.1s Objective: 453.27, Gap: 0.00%, Time: 3.28s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0191s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0211s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0217s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0019s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0156s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 14 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0096s
3.6s Found feasible solution with cost: 72.42
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0234s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
6.5s Iteration 24: New best feasible solution found!
6.5s Objective: 403.07, Gap: 0.00%, Time: 3.64s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0213s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 13 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0102s
3.8s Found feasible solution with cost: 71.08
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0206s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0115s
[OPLOG] local_search_repair: 0.0199s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0205s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0203s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0053s
[OPLOG] local_search_repair: 0.0105s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0212s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
6.8s Iteration 25: New best feasible solution found!
6.8s Objective: 345.87, Gap: 0.00%, Time: 3.99s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0180s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0061s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0210s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0011s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0203s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0156s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0012s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0132s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0843s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0039s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0247s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0181s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
4.4s Found feasible solution with cost: 71.24
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0108s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 13 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0108s
7.3s Iteration 29: New best feasible solution found!
7.3s Objective: 333.57, Gap: 0.00%, Time: 4.49s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0143s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0137s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0113s
[OPLOG] local_search_repair: 0.0178s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0114s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0322s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0124s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 17 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0031s
[OPLOG] 已保存实际训练数据: 特征值长度=18, 标签长度=18, 改进=1000000.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0163s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0102s
[OPLOG] local_search_repair: 0.0242s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0156s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 18 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0052s
[OPLOG] 计算的实际特征: [60.0, 2.9, 2.0, 12.666666666666666, 0.7830484197333484]
[OPLOG] 已保存实际训练数据: 特征值长度=19, 标签长度=19, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0179s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 19 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0031s
[OPLOG] 已保存实际训练数据: 特征值长度=20, 标签长度=20, 改进=1000000.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0156s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0187s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0142s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0156s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0105s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0155s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0051s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0823s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0077s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0101s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 19 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0108s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0161s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0208s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0142s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0102s
[OPLOG] local_search_repair: 0.0209s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0155s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0132s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0026s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0159s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0255s
[OPLOG] local_search_repair: 0.0360s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0160s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0154s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 20 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0053s
[OPLOG] local_search_repair: 0.0158s
[OPLOG] 已保存实际训练数据: 特征值长度=21, 标签长度=21, 改进=1000000.0000
5.3s Found feasible solution with cost: 69.46
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0123s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 22 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0091s
8.2s Iteration 35: New best feasible solution found!
8.2s Objective: 305.57, Gap: 0.00%, Time: 5.42s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0156s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0051s
[OPLOG] local_search_repair: 0.0126s
5.6s Found feasible solution with cost: 68.86
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0155s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] local_search_repair: 0.0055s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0151s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 21 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0149s
[OPLOG] local_search_repair: 0.0253s
[OPLOG] 计算的实际特征: [94.75, 2.4803278688524593, 2.0, 42.4, 0.7875487490451694]
[OPLOG] 已保存实际训练数据: 特征值长度=22, 标签长度=22, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0106s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 14 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0104s
8.6s Iteration 36: New best feasible solution found!
8.7s Objective: 269.77, Gap: 0.00%, Time: 5.84s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0175s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 22 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0217s
[OPLOG] 已保存实际训练数据: 特征值长度=23, 标签长度=23, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0165s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0217s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0167s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0156s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0259s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0206s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0179s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0206s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0206s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0155s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0271s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0155s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0174s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0082s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0874s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0066s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0158s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0158s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0271s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0160s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0054s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0166s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 23 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0094s
[OPLOG] 已保存实际训练数据: 特征值长度=24, 标签长度=24, 改进=1000000.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0231s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 24 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0054s
[OPLOG] 计算的实际特征: [47.0, 2.5, 2.0, 50.166666666666664, 0.8268911998047922]
[OPLOG] 已保存实际训练数据: 特征值长度=25, 标签长度=25, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0157s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0206s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0162s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0044s
[OPLOG] local_search_repair: 0.0051s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0206s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0018s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0207s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0054s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0146s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 无缓存模型，开始首次训练
[OPLOG] 自适应选择Ridge模型 (数据量: 25)
[Tracker] Cached ML model at iteration 43
[OPLOG] 模型训练完成, 已缓存到tracker
[OPLOG] 14 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0098s
[OPLOG] 计算的实际特征: [87.0, 2.3, 2.0, 42.333333333333336, 0.7908213267889719]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=27, 标签长度=27, 改进=0.0000
[OPLOG] ML修复完成: 189次预测, 1次成功插入, 14个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0617s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0136s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0068s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0108s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0155s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0069s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0153s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 2 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0018s
[OPLOG] 计算的实际特征: [116.0, 2.5, 2.0, 55.5, 0.7861371150270969]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=28, 标签长度=28, 改进=0.0000
[OPLOG] ML修复完成: 18次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0071s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0154s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0066s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0123s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0158s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0013s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0158s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0016s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0149s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0271s
[OPLOG] local_search_repair: 0.0323s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0154s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 17 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0101s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0142s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 13 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0054s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0104s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0208s
[OPLOG] local_search_repair: 0.0311s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0121s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0044s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0106s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0020s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0154s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0049s
[OPLOG] local_search_repair: 0.0151s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0051s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0156s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0084s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 8 迭代
[OPLOG] 16 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0173s
[OPLOG] 计算的实际特征: [71.0, 2.6999999999999997, 2.0, 32.833333333333336, 0.7992841688451994]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=29, 标签长度=29, 改进=0.0000
[OPLOG] ML修复完成: 189次预测, 0次成功插入, 16个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0423s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0104s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0041s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0083s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0051s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0112s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0036s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0792s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0050s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0155s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 12 迭代
[OPLOG] 19 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0209s
[OPLOG] 计算的实际特征: [63.833333333333336, 2.5, 2.0, 36.06060606060606, 0.7491283048009187]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=31, 标签长度=31, 改进=0.0000
[OPLOG] ML修复完成: 243次预测, 1次成功插入, 19个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0528s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0115s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0149s
[OPLOG] local_search_repair: 0.0200s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0145s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0027s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0139s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 13 迭代
[OPLOG] 9 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0127s
[OPLOG] 计算的实际特征: [73.66666666666667, 1.7151162790697674, 2.0, 44.583333333333336, 0.8102872372398408]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=32, 标签长度=32, 改进=0.0000
[OPLOG] ML修复完成: 99次预测, 0次成功插入, 9个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0270s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0137s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0068s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0157s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0052s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0223s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0151s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0020s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0159s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0158s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 30 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0123s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0103s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0053s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0103s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0082s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0065s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0037s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0086s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 18 迭代
[OPLOG] 13 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0076s
[OPLOG] 计算的实际特征: [116.0, 2.5, 2.0, 41.5, 0.7759888218154412]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=34, 标签长度=34, 改进=0.0000
[OPLOG] ML修复完成: 153次预测, 1次成功插入, 13个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0378s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0088s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0084s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 18 迭代
[OPLOG] 11 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0187s
[OPLOG] 计算的实际特征: [91.6, 2.39922480620155, 2.0, 50.76190476190476, 0.7740228353212332]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=35, 标签长度=35, 改进=0.0000
[OPLOG] ML修复完成: 126次预测, 0次成功插入, 11个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0338s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0088s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0090s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0082s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0208s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0066s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0209s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0107s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0149s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0055s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 22 迭代
[OPLOG] 3 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0036s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=36, 标签长度=36, 改进=1000000.0000
[OPLOG] ML修复完成: 36次预测, 0次成功插入, 3个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0152s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0106s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0051s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0118s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0219s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0138s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0112s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0104s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0155s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0101s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0107s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0050s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0123s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0101s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 24 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=37, 标签长度=37, 改进=1000000.0000
[OPLOG] ML修复完成: 18次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0051s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0087s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 25 迭代
[OPLOG] 10 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0153s
[OPLOG] 计算的实际特征: [77.66666666666667, 2.37991452991453, 2.0, 40.833333333333336, 0.776833252063958]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=38, 标签长度=38, 改进=0.0000
[OPLOG] ML修复完成: 108次预测, 0次成功插入, 10个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0309s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0088s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0155s
[OPLOG] local_search_repair: 0.0208s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0101s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0072s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0104s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0067s
[OPLOG] local_search_repair: 0.0107s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0180s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0120s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 26 迭代
[OPLOG] 13 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0160s
[OPLOG] 计算的实际特征: [64.66666666666667, 2.2172413793103454, 2.0, 34.44444444444444, 0.7903536913757169]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=40, 标签长度=40, 改进=0.0000
[OPLOG] ML修复完成: 171次预测, 1次成功插入, 13个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0374s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0102s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0051s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0104s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0155s
[OPLOG] local_search_repair: 0.0264s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0100s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0103s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0105s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0722s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0051s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0119s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0189s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0154s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 27 迭代
[OPLOG] 14 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0096s
[OPLOG] 计算的实际特征: [116.0, 2.5, 2.0, 58.666666666666664, 0.7760714103666501]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=41, 标签长度=41, 改进=0.0000
[OPLOG] ML修复完成: 162次预测, 0次成功插入, 14个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0358s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0105s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 27 迭代
[OPLOG] 12 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0147s
[OPLOG] 计算的实际特征: [49.5, 2.6655367231638416, 2.0, 26.19047619047619, 0.7770709285074117]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=42, 标签长度=42, 改进=0.0000
[OPLOG] ML修复完成: 171次预测, 0次成功插入, 12个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0408s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0107s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0062s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0103s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0206s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0107s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0060s
[OPLOG] local_search_repair: 0.0157s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0111s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 27 迭代
[OPLOG] 14 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0102s
[OPLOG] 计算的实际特征: [116.0, 2.5, 2.0, 57.833333333333336, 0.7508282648469564]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=45, 标签长度=45, 改进=0.0000
[OPLOG] ML修复完成: 180次预测, 2次成功插入, 14个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0412s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0104s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0266s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0107s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0147s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0099s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0070s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0013s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0105s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0013s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0123s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0163s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0044s
[OPLOG] local_search_repair: 0.0161s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0153s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0107s
[OPLOG] local_search_repair: 0.0163s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0136s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0126s
[OPLOG] local_search_repair: 0.0189s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0149s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 29 迭代
[OPLOG] 无未满足需求, 直接返回当前解
12.3s Iteration 73: New best feasible solution found!
12.3s Objective: 266.57, Gap: 0.00%, Time: 9.52s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0110s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0110s
[OPLOG] local_search_repair: 0.0162s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0170s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0087s
[OPLOG] local_search_repair: 0.0162s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0183s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0002s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0107s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 31 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0154s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0107s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0153s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 32 迭代
[OPLOG] 14 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0136s
[OPLOG] 计算的实际特征: [96.66666666666667, 2.4054054054054053, 2.0, 42.77777777777778, 0.794644090683254]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=46, 标签长度=46, 改进=0.0000
[OPLOG] ML修复完成: 171次预测, 0次成功插入, 14个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0364s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0154s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0205s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0158s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0155s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0154s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0194s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0018s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0207s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0158s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0050s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0157s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 36 迭代
[OPLOG] 28 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0231s
[OPLOG] 计算的实际特征: [74.2, 2.3561983471074384, 2.0, 30.875, 0.7465000333995251]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=49, 标签长度=49, 改进=0.0000
[OPLOG] ML修复完成: 333次预测, 2次成功插入, 28个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0713s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0159s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0279s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0154s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0054s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0166s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 36 迭代
[OPLOG] 12 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0109s
[OPLOG] 计算的实际特征: [57.375, 2.490495867768595, 2.0, 31.928571428571427, 0.783032264262794]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=50, 标签长度=50, 改进=0.0000
[OPLOG] ML修复完成: 171次预测, 0次成功插入, 12个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0393s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0160s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0240s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0158s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0052s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0124s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 36 迭代
[OPLOG] 13 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0138s
[OPLOG] 计算的实际特征: [78.0, 2.1999999999999997, 2.0, 29.333333333333332, 0.8105353366391069]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=51, 标签长度=51, 改进=0.0000
[OPLOG] ML修复完成: 153次预测, 0次成功插入, 13个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0354s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0108s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0071s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0097s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0228s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0156s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 37 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0159s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0054s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0105s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0156s
[OPLOG] local_search_repair: 0.0207s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0108s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 38 迭代
[OPLOG] 12 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0103s
[OPLOG] 计算的实际特征: [87.0, 2.3, 2.0, 42.666666666666664, 0.7957839362769134]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=53, 标签长度=53, 改进=0.0000
[OPLOG] ML修复完成: 162次预测, 1次成功插入, 12个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0412s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0102s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0209s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0173s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 38 迭代
[OPLOG] 3 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0059s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=54, 标签长度=54, 改进=1000000.0000
[OPLOG] ML修复完成: 36次预测, 0次成功插入, 3个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0157s
10.7s Found feasible solution with cost: 68.56
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0176s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0068s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0154s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
13.8s Iteration 82: New best feasible solution found!
13.8s Objective: 232.47, Gap: 0.00%, Time: 10.96s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0206s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] local_search_repair: 0.0107s
11.2s Found feasible solution with cost: 68.00
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0159s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 14 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0086s
11.2s Found feasible solution with cost: 67.70
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0168s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
14.2s Iteration 83: New best feasible solution found!
14.2s Objective: 197.47, Gap: 0.00%, Time: 11.40s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0183s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 13 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0042s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0133s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0256s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0179s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0209s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0171s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0207s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0178s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0002s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0154s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0061s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0207s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0026s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0161s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0152s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0156s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0181s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0209s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0053s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0204s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0884s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0159s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0152s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0252s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0156s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0222s
[OPLOG] local_search_repair: 0.0260s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0200s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0054s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0229s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0064s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0156s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0135s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0133s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0151s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 50 迭代
[OPLOG] 14 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0101s
[OPLOG] 计算的实际特征: [64.0, 2.9, 2.0, 27.333333333333332, 0.7861320673652824]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=56, 标签长度=56, 改进=0.0000
[OPLOG] ML修复完成: 180次预测, 1次成功插入, 14个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0407s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0104s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0055s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0154s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0205s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0179s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0135s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0160s
[OPLOG] local_search_repair: 0.0210s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0155s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 51 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0141s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0102s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0153s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 52 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0015s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=57, 标签长度=57, 改进=1000000.0000
[OPLOG] ML修复完成: 9次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0060s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0153s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0272s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0155s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0045s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0204s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0014s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0156s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0157s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 55 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0156s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0051s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0243s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 31 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0040s
15.5s Iteration: 100     Current Obj: 287.4695   Best Obj: 197.4677      Gap: 31.31%
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0171s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0107s
[STOP] MaxIterations 触发停止条件 (运行时间: 12.68s)
12.8s Step 8耗时: 12.68s
12.8s 优化总耗时: 12.83s
12.8s Step 9: 处理结果...
12.8s Total iterations tracked: 101
12.8s Best objective found: 197.4677
12.8s Final Gap: 38.86%
12.8s ALNS Final Gap: 38.86%
12.8s Best Heuristic Solution Objective: 197.47
12.8s Vehicles Used in Best Solution: 57
12.8s Best Solution Cost: 67.70
12.9s ✓ 所有车辆的装载体积都满足容量约束
12.9s Step 9耗时: 0.05s
12.9s Step 10: 生成报告和图表...
14.0s Step 10耗时: 1.08s
***************************************************************************
                      优化完成! 2025-09-22 15:19:56.158011
***************************************************************************
====================================================================================================
***************************************************************************
                     The Vehicle Loading Plan is Done!
***************************************************************************
(base) PS D:\Gurobi_code\Problem2\ALNSCode> python check_solution.py
INFO:__main__:加载输入数据...
INFO:DataALNS:配置参数加载成功
INFO:DataALNS:成功加载 订单需求信息: 31 行数据
INFO:DataALNS:成功加载 生产基地库存容量上限: 3 行数据
INFO:DataALNS:成功加载 SKU体积信息: 12 行数据
INFO:DataALNS:成功加载 车辆类型信息: 3 行数据
INFO:DataALNS:成功加载 生产基地生产计划: 36 行数据
INFO:DataALNS:成功加载 生产基地期初库存: 12 行数据
INFO:DataALNS:数据完整性验证通过
INFO:DataALNS:数据加载和处理完成
INFO:__main__:加载输出数据...
INFO:OutputDataALNS:开始加载数据集: dataset_1
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_1\opt_result.csv, 形状: (57, 7)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_1\opt_details.csv, 形状: (57, 11)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_1\opt_summary.csv, 形状: (57, 9)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_1\non_fulfill.csv, 形状: (0, 3)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_1\sku_inv_left.csv, 形状: (108, 4)
INFO:OutputDataALNS:字典索引生成完成
INFO:OutputDataALNS:数据验证通过
INFO:OutputDataALNS:数据加载完成

数据统计:
输入数据 - 工厂: 3, 经销商: 7, SKU: 12
输出数据统计: {'total_deliveries': 44, 'total_vehicles_used': 57, 'unfulfilled_demands': 0, 'inventory_records': 108, 'total_quantity_shipped': 2067, 'unique_vehicles': 57}
INFO:__main__:开始解决方案验证...
INFO:__main__:检查订单满足情况...
INFO:__main__:检查生产基地库存上限约束...
INFO:__main__:检查车辆容量约束...
INFO:__main__:车辆 24 (类型: 7.7) 在第 1 天未达到最小起运量: 最小起运量 54, 实际装载 6.4
INFO:__main__:车辆 39 (类型: 8.6) 在第 1 天未达到最小起运量: 最小起运量 42, 实际装载 9.2
INFO:__main__:车辆 57 (类型: 7.7) 在第 2 天未达到最小起运量: 最小起运量 54, 实际装载 21.6
INFO:__main__:车辆 22 (类型: 7.7) 在第 2 天未达到最小起运量: 最小起运量 54, 实际装载 35.0
INFO:__main__:车辆 35 (类型: 7.7) 在第 2 天未达到最小起运量: 最小起运量 54, 实际装载 43.7
INFO:__main__:车辆 19 (类型: 7.7) 在第 3 天未达到最小起运量: 最小起运量 54, 实际装载 51.0
INFO:__main__:车辆 21 (类型: 7.7) 在第 3 天未达到最小起运量: 最小起运量 54, 实际装载 43.2
INFO:__main__:车辆 23 (类型: 7.7) 在第 3 天未达到最小起运量: 最小起运量 54, 实际装载 12.5
INFO:__main__:检查库存流转约束...

============================================================
解决方案验证结果摘要
============================================================
需求满足约束: ✅ 通过

生产基地库存上限约束: ✅ 通过

车辆容量约束: ✅ 通过

库存流转约束: ✅ 通过

总违反数量: 0
解决方案状态: 可行
============================================================
(base) PS D:\Gurobi_code\Problem2\ALNSCode>
