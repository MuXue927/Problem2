(base) PS D:\Gurobi_code\Problem2\ALNSCode> python main.py
0.0s 开始优化流程! / 2025-09-22 16:21:36.998792
0.0s Step 1: 加载数据...
0.0s Loading Data...
0.0s Data loading elapsed time: 0.04s
0.0s Step 1耗时: 0.04s
0.0s Step 2: 创建初始解...
0.0s Initializing the solution...
4.1s Initial Solution Objective: 5195.89
4.1s Vehicles Used in Initial Solution: 380
4.1s Initial Solution Cost: 490.20
4.1s Step 2耗时: 4.08s
4.1s Step 3: 设置ALNS算法...
4.1s 注册destroy算子...
4.1s 所有destroy算子注册完成
4.1s 注册repair算子...
4.1s 所有repair算子注册完成
4.1s Step 3耗时: 0.00s
4.1s Step 4: 配置算子选择机制...
4.1s Step 4耗时: 0.00s
4.1s Step 5: 配置接受准则...
4.1s Step 5耗时: 0.00s
4.1s Step 6: 配置停止准则...
4.1s 组合停止准则配置: 最大300次迭代 或 最大900秒运行时间
4.1s Step 6耗时: 0.00s
4.1s Step 7: 设置追踪器和回调函数...
4.1s Step 7耗时: 0.00s
4.1s Step 8: 运行ALNS算法...
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0156s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2689s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0106s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0156s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0014s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0151s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.6320s
5.4s Found feasible solution with cost: 471.06
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0203s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.4218s
[OPLOG] local_search_repair: 1.5163s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0671s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0206s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3524s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0208s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 正在构建特征和标签数据 ...
[OPLOG] tracker中无数据, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0053s
构建训练数据: 特征长度 1, 标签长度 1, 目标函数改进 0.0000
8.9s Iteration 1: New best feasible solution found!
8.9s Objective: 5195.37, Gap: 0.00%, Time: 3.50s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0207s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0052s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0133s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6670s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0208s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0037s
[OPLOG] local_search_repair: 0.0133s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0175s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 1 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0021s
[OPLOG] 计算的实际特征: [74.59060402684564, 2.065499231950844, 2.0, 144.35365853658536, 0.8085414673351449]
[OPLOG] 已保存实际训练数据: 特征值长度=2, 标签长度=2, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0177s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0038s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0173s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0593s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0158s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3442s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0177s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9167s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0180s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0169s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 72 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3074s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0201s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0016s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0166s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0051s
[OPLOG] local_search_repair: 0.0190s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0206s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 2 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3234s
[OPLOG] 计算的实际特征: [85.0, 2.299, 2.0, 63.03703703703704, 0.6538317588375623]
[OPLOG] 已保存实际训练数据: 特征值长度=3, 标签长度=3, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0221s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3364s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0182s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 223 个未满足需求
[OPLOG] 批次 1/12 处理成功
[OPLOG] 批次 2/12 处理成功
[OPLOG] 批次 3/12 处理成功
[OPLOG] 批次 4/12 处理成功
[OPLOG] 批次 5/12 处理成功
[OPLOG] 批次 6/12 处理成功
[OPLOG] 批次 7/12 处理成功
[OPLOG] 批次 8/12 处理成功
[OPLOG] 批次 9/12 处理成功
[OPLOG] 批次 10/12 处理成功
[OPLOG] 批次 11/12 处理成功
[OPLOG] 批次 12/12 处理成功
[OPLOG] 迭代 2: 剩余 7 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.4925s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0194s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 83 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3606s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1248s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0216s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 3 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0190s
[OPLOG] 已保存实际训练数据: 特征值长度=4, 标签长度=4, 改进=1000000.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0206s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 4 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 计算的实际特征: [79.16216216216216, 2.095704057279236, 2.0, 85.94029850746269, 0.6631442788537674]
[OPLOG] 已保存实际训练数据: 特征值长度=5, 标签长度=5, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0155s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.4535s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0346s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 5 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1017s
[OPLOG] 计算的实际特征: [95.0, 2.0135135135135136, 2.0, 53.733333333333334, 0.6547822672918583]
[OPLOG] 已保存实际训练数据: 特征值长度=6, 标签长度=6, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0209s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0030s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0214s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0055s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0201s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0344s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4774s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0206s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 6 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1801s
[OPLOG] 计算的实际特征: [76.36, 1.9677795031055898, 2.0, 82.73333333333333, 0.6556961343192931]
[OPLOG] 已保存实际训练数据: 特征值长度=7, 标签长度=7, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0209s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 70 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2913s
17.3s Found feasible solution with cost: 456.49
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0257s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 71 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2883s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0237s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9606s
[OPLOG] local_search_repair: 1.1158s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0363s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3987s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0258s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0039s
20.8s Iteration 11: New best feasible solution found!
20.8s Objective: 4982.06, Gap: 0.00%, Time: 15.39s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0204s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0244s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0212s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0209s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 7 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] 已保存实际训练数据: 特征值长度=8, 标签长度=8, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0213s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0477s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0361s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6705s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0756s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1765s
[OPLOG] local_search_repair: 1.3388s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0262s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0174s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0313s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 8 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0051s
[OPLOG] local_search_repair: 0.0593s
[OPLOG] 已保存实际训练数据: 特征值长度=9, 标签长度=9, 改进=0.0012
23.5s Found feasible solution with cost: 455.33
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0301s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0570s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0314s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] local_search_repair: 0.0154s
25.0s Iteration 15: New best feasible solution found!
25.0s Objective: 4982.06, Gap: 0.00%, Time: 19.66s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0264s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9755s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0314s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9980s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0287s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.8058s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0270s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.5269s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0419s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2581s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0318s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9154s
[OPLOG] local_search_repair: 1.0552s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0308s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0272s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2963s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0310s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0922s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0264s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 101 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 迭代 2: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.4286s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0307s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0106s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0266s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0314s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 86 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 5: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 6: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 7: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 8: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 9: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 10: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 1 个需求
[OPLOG] Smart Batch Repair 完成: 0.4222s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0261s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 9 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7997s
[OPLOG] 计算的实际特征: [79.375, 1.5635346756152124, 2.0, 81.1969696969697, 0.8669601017696587]
[OPLOG] 已保存实际训练数据: 特征值长度=10, 标签长度=10, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0289s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.3592s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0306s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1054s
[OPLOG] local_search_repair: 0.1207s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0286s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 75 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2990s
34.7s Found feasible solution with cost: 449.88
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0848s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0015s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0296s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0012s
36.3s Iteration 19: New best feasible solution found!
36.3s Objective: 4791.05, Gap: 0.00%, Time: 30.93s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0320s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0397s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0374s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9556s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0375s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0033s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0411s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0126s
[OPLOG] local_search_repair: 1.1650s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0405s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7231s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0422s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7312s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0498s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 33 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1622s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0481s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0106s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0412s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0051s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0373s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] local_search_repair: 0.0413s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0469s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0532s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0371s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0418s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 10 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0061s
[OPLOG] 已保存实际训练数据: 特征值长度=11, 标签长度=11, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0422s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 11 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0101s
[OPLOG] 计算的实际特征: [76.0, 2.2, 2.0, 161.66666666666666, 0.6820087042149501]
[OPLOG] 已保存实际训练数据: 特征值长度=12, 标签长度=12, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0982s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4652s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0432s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9843s
[OPLOG] local_search_repair: 1.0426s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0405s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 95 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.4049s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0569s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4514s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0413s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9999s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0350s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0101s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0458s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.8320s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0407s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 12 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9990s
[OPLOG] 计算的实际特征: [83.51724137931035, 2.26651904340124, 2.0, 71.51149425287356, 0.6657703113086373]
[OPLOG] 已保存实际训练数据: 特征值长度=13, 标签长度=13, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0474s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0411s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.7269s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0463s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0512s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0419s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0543s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0715s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 13 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 88 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 迭代 2: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 5: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 6: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.4787s
[OPLOG] 已保存实际训练数据: 特征值长度=14, 标签长度=14, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0654s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 14 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 45 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2103s
[OPLOG] 已保存实际训练数据: 特征值长度=15, 标签长度=15, 改进=1000000.0000
50.7s Found feasible solution with cost: 447.72
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0498s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0489s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0294s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1076s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0511s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6609s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0446s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.5511s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0502s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 15 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0418s
[OPLOG] 已保存实际训练数据: 特征值长度=16, 标签长度=16, 改进=1000000.0000
54.0s Iteration 25: New best feasible solution found!
54.0s Objective: 4728.85, Gap: 0.00%, Time: 48.66s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0560s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 16 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.8133s
[OPLOG] 计算的实际特征: [74.5, 1.977974683544304, 2.0, 88.64444444444445, 0.7960077918953423]
[OPLOG] 已保存实际训练数据: 特征值长度=17, 标签长度=17, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0536s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.6900s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0458s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2206s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0536s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 17 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.5464s
[OPLOG] 计算的实际特征: [88.4, 1.572916666666667, 2.0, 58.8, 0.6741961990963239]
[OPLOG] 已保存实际训练数据: 特征值长度=18, 标签长度=18, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0496s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2258s
[OPLOG] local_search_repair: 1.3053s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0469s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 60 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2782s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0488s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.5806s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.1184s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7685s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0548s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0859s
[OPLOG] local_search_repair: 0.1114s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0677s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4991s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0548s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1542s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0518s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2011s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0745s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5677s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0691s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0529s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0375s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0544s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0152s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0557s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3427s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0580s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7873s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0541s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0051s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0536s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7282s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.1225s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2126s
[OPLOG] local_search_repair: 0.2216s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0511s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0038s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0539s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6538s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0544s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6053s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0550s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.8633s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0531s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3845s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0613s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.8432s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0543s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0042s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0554s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0200s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0695s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 30 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1397s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0596s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7523s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0695s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2121s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0576s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0016s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.1221s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0919s
[OPLOG] local_search_repair: 1.2484s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0700s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0565s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0620s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 18 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0010s
[OPLOG] 已保存实际训练数据: 特征值长度=19, 标签长度=19, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0577s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2529s
[OPLOG] local_search_repair: 1.3799s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0573s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 106 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.4794s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0598s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 74 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3393s
76.4s Found feasible solution with cost: 446.88
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0600s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 19 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0404s
[OPLOG] 已保存实际训练数据: 特征值长度=20, 标签长度=20, 改进=1000000.0000
76.6s Found feasible solution with cost: 446.59
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0576s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0422s
76.8s Found feasible solution with cost: 445.59
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0594s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 80 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3596s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0567s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0195s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0679s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5019s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0573s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0046s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1229s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2077s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0557s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 78 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3292s
81.0s Found feasible solution with cost: 436.79
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0590s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0022s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0583s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 43 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2029s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0565s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.8114s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0545s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3537s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0567s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1831s
[OPLOG] local_search_repair: 1.3244s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0556s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6957s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0614s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7517s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0509s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0050s
87.5s Iteration 32: New best feasible solution found!
87.5s Objective: 4357.14, Gap: 0.00%, Time: 82.16s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0526s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2454s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0535s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7098s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0677s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0896s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0530s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2874s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0519s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7386s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0529s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0414s
[OPLOG] local_search_repair: 0.1158s
90.1s Found feasible solution with cost: 435.05
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0563s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9649s
[OPLOG] local_search_repair: 0.9806s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0569s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3527s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0729s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0963s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0667s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 32 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1499s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0662s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3920s
[OPLOG] local_search_repair: 0.4333s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1175s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.5401s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0568s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2663s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0714s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0019s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0564s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 20 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 114 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 迭代 2: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.4893s
[OPLOG] 已保存实际训练数据: 特征值长度=21, 标签长度=21, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0581s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0160s
[OPLOG] local_search_repair: 0.0279s
96.2s Iteration 33: New best feasible solution found!
96.2s Objective: 4357.14, Gap: 0.00%, Time: 90.80s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0650s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0155s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0574s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6603s
[OPLOG] local_search_repair: 0.7681s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.1307s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0013s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0702s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0088s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0752s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 21 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4038s
[OPLOG] local_search_repair: 0.4434s
[OPLOG] 计算的实际特征: [71.8695652173913, 2.3957600827300936, 2.0, 63.5, 0.6921679850243696]
[OPLOG] 已保存实际训练数据: 特征值长度=22, 标签长度=22, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0564s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 97 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.4501s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0719s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 22 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0052s
[OPLOG] local_search_repair: 1.0852s
[OPLOG] 计算的实际特征: [81.11538461538461, 2.1650561797752808, 2.0, 67.4625850340136, 0.6857545944009127]
[OPLOG] 已保存实际训练数据: 特征值长度=23, 标签长度=23, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0614s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3696s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0568s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0306s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0778s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.3726s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0616s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 162 个未满足需求
[OPLOG] 批次 1/9 处理成功
[OPLOG] 批次 2/9 处理成功
[OPLOG] 批次 3/9 处理成功
[OPLOG] 批次 4/9 处理成功
[OPLOG] 批次 5/9 处理成功
[OPLOG] 批次 6/9 处理成功
[OPLOG] 批次 7/9 处理成功
[OPLOG] 批次 8/9 处理成功
[OPLOG] 批次 9/9 处理成功
[OPLOG] 迭代 2: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7312s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0624s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 23 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0191s
[OPLOG] 已保存实际训练数据: 特征值长度=24, 标签长度=24, 改进=1000000.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0609s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0031s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1243s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0065s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0623s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0052s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0636s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0057s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0613s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0054s
[OPLOG] local_search_repair: 0.0194s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0662s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9611s
[OPLOG] local_search_repair: 1.0556s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0676s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 24 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 188 个未满足需求
[OPLOG] 批次 1/10 处理成功
[OPLOG] 批次 2/10 处理成功
[OPLOG] 批次 3/10 处理成功
[OPLOG] 批次 4/10 处理成功
[OPLOG] 批次 5/10 处理成功
[OPLOG] 批次 6/10 处理成功
[OPLOG] 批次 7/10 处理成功
[OPLOG] 批次 8/10 处理成功
[OPLOG] 批次 9/10 处理成功
[OPLOG] 批次 10/10 处理成功
[OPLOG] 迭代 2: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.6508s
[OPLOG] 已保存实际训练数据: 特征值长度=25, 标签长度=25, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0630s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1424s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0760s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.8017s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0619s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1578s
[OPLOG] local_search_repair: 1.2744s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0669s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7636s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0640s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0025s
[OPLOG] local_search_repair: 0.0133s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1337s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0040s
[OPLOG] local_search_repair: 0.0141s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0656s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4527s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0668s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 71 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2965s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0837s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3552s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0680s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.8242s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0830s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 无缓存模型，开始首次训练
[OPLOG] 自适应选择Ridge模型 (数据量: 25)
[Tracker] Cached ML model at iteration 41
[OPLOG] 模型训练完成, 已缓存到tracker
[OPLOG] 33 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4387s
[OPLOG] 计算的实际特征: [58.857142857142854, 2.213768115942029, 2.0, 62.0, 0.7006398901990599]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=26, 标签长度=26, 改进=0.0000
[OPLOG] ML修复完成: 294次预测, 0次成功插入, 33个需求使用greedy修复
[OPLOG] learning_based_repair: 0.5050s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0622s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0031s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0797s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 27 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1284s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0669s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7385s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0618s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.5726s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1417s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 0 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0644s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 1 迭代
[OPLOG] 118 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.3616s
[OPLOG] 计算的实际特征: [73.62264150943396, 2.1960405601158866, 2.0, 93.23492063492064, 0.6815853665998373]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=28, 标签长度=28, 改进=0.0000
[OPLOG] ML修复完成: 1170次预测, 1次成功插入, 118个需求使用greedy修复
[OPLOG] learning_based_repair: 1.5451s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0621s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 78 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3216s
114.6s Found feasible solution with cost: 428.76
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0670s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0410s
116.3s Iteration 43: New best feasible solution found!
116.3s Objective: 4138.03, Gap: 0.00%, Time: 110.94s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0691s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0037s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1545s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3846s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0724s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1625s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0778s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0050s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0668s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9928s
[OPLOG] local_search_repair: 1.0187s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0617s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6888s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0667s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7504s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0777s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 24 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1227s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0678s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 2 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0631s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9258s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0682s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7867s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1395s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0784s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4215s
[OPLOG] local_search_repair: 0.5455s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0684s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 4 迭代
[OPLOG] 82 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9694s
[OPLOG] 计算的实际特征: [74.62068965517241, 2.1563456345634564, 2.0, 91.06896551724138, 0.6844920341963349]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=32, 标签长度=32, 改进=0.0000
[OPLOG] ML修复完成: 810次预测, 3次成功插入, 82个需求使用greedy修复
[OPLOG] learning_based_repair: 1.1468s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0665s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2614s
[OPLOG] local_search_repair: 1.4553s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0687s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2724s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0823s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4604s
[OPLOG] local_search_repair: 0.5818s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0702s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 4 迭代
[OPLOG] 76 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0793s
[OPLOG] 计算的实际特征: [69.16129032258064, 1.997240085744909, 2.0, 121.7316384180791, 0.6840819281789923]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=34, 标签长度=34, 改进=0.0000
[OPLOG] ML修复完成: 822次预测, 1次成功插入, 76个需求使用greedy修复
[OPLOG] learning_based_repair: 1.2213s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0673s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2958s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0656s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7236s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0658s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0040s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0701s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0032s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1400s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0218s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0725s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0826s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0785s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.8548s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0700s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0531s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0743s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3249s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0758s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9842s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0722s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2597s
[OPLOG] local_search_repair: 1.3397s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0716s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.6191s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.2184s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1302s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0749s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 6 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0193s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=35, 标签长度=35, 改进=1000000.0000
[OPLOG] ML修复完成: 12次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0439s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0751s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0397s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0869s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0040s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0860s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 80 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3462s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0718s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0124s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0773s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3494s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0832s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 8 迭代
[OPLOG] 136 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.6045s
[OPLOG] 计算的实际特征: [70.38805970149254, 2.1179646936656282, 2.0, 103.32569974554707, 0.7149086965950986]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=39, 标签长度=39, 改进=0.0000
[OPLOG] ML修复完成: 1326次预测, 3次成功插入, 136个需求使用greedy修复
[OPLOG] learning_based_repair: 1.8285s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0832s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9937s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0939s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3364s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1650s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0035s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0789s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0059s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0829s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0090s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0823s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3539s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0880s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 9 迭代
[OPLOG] 24 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3392s
[OPLOG] 计算的实际特征: [52.2, 2.555121951219512, 2.0, 66.96666666666667, 0.6994342921550121]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=40, 标签长度=40, 改进=0.0000
[OPLOG] ML修复完成: 216次预测, 0次成功插入, 24个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3965s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0770s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0225s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0751s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0812s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0011s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0799s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 70 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3135s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.1697s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0280s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0770s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0306s
[OPLOG] local_search_repair: 1.1933s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0870s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.5318s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0916s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1103s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0817s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0046s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0790s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 24 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2961s
[OPLOG] 计算的实际特征: [82.75, 2.195811518324607, 2.0, 117.0, 0.695350518203561]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=41, 标签长度=41, 改进=0.0000
[OPLOG] ML修复完成: 228次预测, 0次成功插入, 24个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3514s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0975s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 33 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4639s
[OPLOG] 计算的实际特征: [76.22727272727273, 2.290410958904109, 2.0, 64.24242424242425, 0.6925780694005347]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=44, 标签长度=44, 改进=0.0000
[OPLOG] ML修复完成: 366次预测, 2次成功插入, 33个需求使用greedy修复
[OPLOG] learning_based_repair: 0.5782s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0823s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6546s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0798s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 70 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3036s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1665s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2934s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0809s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0040s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0777s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 223 个未满足需求
[OPLOG] 批次 1/12 处理成功
[OPLOG] 批次 2/12 处理成功
[OPLOG] 批次 3/12 处理成功
[OPLOG] 批次 4/12 处理成功
[OPLOG] 批次 5/12 处理成功
[OPLOG] 批次 6/12 处理成功
[OPLOG] 批次 7/12 处理成功
[OPLOG] 批次 8/12 处理成功
[OPLOG] 批次 9/12 处理成功
[OPLOG] 批次 10/12 处理成功
[OPLOG] 批次 11/12 处理成功
[OPLOG] 批次 12/12 处理成功
[OPLOG] 迭代 2: 剩余 7 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.5159s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0853s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 79 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0333s
[OPLOG] 计算的实际特征: [69.0, 1.9767248545303406, 2.0, 111.92372881355932, 0.6857822672918583]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=46, 标签长度=46, 改进=0.0000
[OPLOG] ML修复完成: 840次预测, 1次成功插入, 79个需求使用greedy修复
[OPLOG] learning_based_repair: 1.1789s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0796s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 74 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1600s
[OPLOG] 计算的实际特征: [71.43478260869566, 2.178731343283582, 2.0, 68.86111111111111, 0.683206768652442]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=49, 标签长度=49, 改进=0.0000
[OPLOG] ML修复完成: 660次预测, 2次成功插入, 74个需求使用greedy修复
[OPLOG] learning_based_repair: 1.3005s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0827s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 39 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1829s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0789s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.8103s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0789s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0038s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1540s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2743s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0782s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0099s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0827s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 12 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0155s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=50, 标签长度=50, 改进=1000000.0000
[OPLOG] ML修复完成: 12次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0416s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0836s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6366s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0858s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0052s
[OPLOG] local_search_repair: 1.2364s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0858s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 13 迭代
[OPLOG] 49 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5942s
[OPLOG] 计算的实际特征: [92.71428571428571, 2.500425531914894, 2.0, 79.23809523809524, 0.6909814619663328]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=51, 标签长度=51, 改进=0.0000
[OPLOG] ML修复完成: 474次预测, 0次成功插入, 49个需求使用greedy修复
[OPLOG] learning_based_repair: 0.6794s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0835s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7578s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0853s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0556s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0841s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7589s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1524s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0143s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0800s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.3219s
[OPLOG] local_search_repair: 1.5217s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0817s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0141s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0880s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3451s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0816s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0737s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0850s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9995s
[OPLOG] local_search_repair: 1.2016s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0874s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0041s
[OPLOG] local_search_repair: 0.1728s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0905s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0024s
[OPLOG] local_search_repair: 1.0262s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1548s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0052s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0894s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7610s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0977s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0883s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0415s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0922s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 223 需求, 超时: 22.3s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 79 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3286s
[STOP] MaxIterations 触发停止条件 (运行时间: 164.23s)
168.4s Step 8耗时: 164.22s
168.4s 优化总耗时: 168.35s
168.4s Step 9: 处理结果...
168.4s Total iterations tracked: 58
168.4s Best objective found: 4138.0308
168.4s Final Gap: 1.10%
168.4s ALNS Final Gap: 1.15%
168.4s Best Heuristic Solution Objective: 4136.03
168.4s Vehicles Used in Best Solution: 358
168.4s Best Solution Cost: 428.76
168.4s ✓ 所有车辆的装载体积都满足容量约束
168.4s Step 9耗时: 0.07s
168.4s Step 10: 生成报告和图表...
169.3s Step 10耗时: 0.89s
***************************************************************************
                      优化完成! 2025-09-22 16:24:26.325863
***************************************************************************
====================================================================================================
***************************************************************************
                     The Vehicle Loading Plan is Done!
***************************************************************************
(base) PS D:\Gurobi_code\Problem2\ALNSCode> python check_solution.py
INFO:__main__:加载输入数据...
INFO:DataALNS:配置参数加载成功
INFO:DataALNS:成功加载 订单需求信息: 223 行数据
INFO:DataALNS:成功加载 生产基地库存容量上限: 3 行数据
INFO:DataALNS:成功加载 SKU体积信息: 31 行数据
INFO:DataALNS:成功加载 车辆类型信息: 2 行数据
INFO:DataALNS:成功加载 生产基地生产计划: 80 行数据
INFO:DataALNS:成功加载 生产基地期初库存: 31 行数据
INFO:DataALNS:数据完整性验证通过
INFO:DataALNS:数据加载和处理完成
INFO:__main__:加载输出数据...
INFO:OutputDataALNS:开始加载数据集: dataset_4
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_4\opt_result.csv, 形状: (358, 7)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_4\opt_details.csv, 形状: (358, 11)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_4\opt_summary.csv, 形状: (358, 9)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_4\non_fulfill.csv, 形状: (0, 3)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_4\sku_inv_left.csv, 形状: (279, 4)
INFO:OutputDataALNS:字典索引生成完成
INFO:OutputDataALNS:数据验证通过
INFO:OutputDataALNS:数据加载完成

数据统计:
输入数据 - 工厂: 3, 经销商: 12, SKU: 31
输出数据统计: {'total_deliveries': 267, 'total_vehicles_used': 358, 'unfulfilled_demands': 0, 'inventory_records': 279, 'total_quantity_shipped': 16617, 'unique_vehicles': 358}
INFO:__main__:开始解决方案验证...
INFO:__main__:检查订单满足情况...
INFO:__main__:检查生产基地库存上限约束...
INFO:__main__:检查车辆容量约束...
INFO:__main__:车辆 23 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 40.3
INFO:__main__:车辆 1 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 68.4
INFO:__main__:车辆 39 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 5.6
INFO:__main__:车辆 4 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 66.0
INFO:__main__:车辆 251 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 68.0
INFO:__main__:车辆 17 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 63.8
INFO:__main__:车辆 12 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 15.0
INFO:__main__:车辆 24 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 12.0
INFO:__main__:车辆 11 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 45.0
INFO:__main__:车辆 253 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 63.0
INFO:__main__:车辆 6 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 63.8
INFO:__main__:车辆 249 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 46.0
INFO:__main__:车辆 54 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 61.60000000000001
INFO:__main__:车辆 55 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 9.6
INFO:__main__:车辆 245 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 8.399999999999999
INFO:__main__:车辆 173 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 24.200000000000003
INFO:__main__:车辆 53 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 56.0
INFO:__main__:车辆 58 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 35.1
INFO:__main__:车辆 135 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 13.3
INFO:__main__:车辆 74 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 54.0
INFO:__main__:车辆 76 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 67.5
INFO:__main__:车辆 60 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 27.0
INFO:__main__:车辆 175 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 48.0
INFO:__main__:车辆 71 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 31.2
INFO:__main__:车辆 347 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 66.0
INFO:__main__:车辆 353 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 35.1
INFO:__main__:车辆 357 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 5.1
INFO:__main__:车辆 238 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 48.400000000000006
INFO:__main__:车辆 318 (类型: 12.2) 在第 1 天未达到最小起运量: 最小起运量 72, 实际装载 39.0
INFO:__main__:车辆 345 (类型: 8.9) 在第 1 天未达到最小起运量: 最小起运量 71, 实际装载 46.2
INFO:__main__:车辆 28 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 69.0
INFO:__main__:车辆 44 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 4.199999999999999
INFO:__main__:车辆 16 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 6.0
INFO:__main__:车辆 212 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 70.8
INFO:__main__:车辆 26 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 57.0
INFO:__main__:车辆 30 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 22.1
INFO:__main__:车辆 22 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 12.0
INFO:__main__:车辆 229 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 42.0
INFO:__main__:车辆 247 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 2.4
INFO:__main__:车辆 122 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 34.2
INFO:__main__:车辆 157 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 16.799999999999997
INFO:__main__:车辆 170 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 40.7
INFO:__main__:车辆 94 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 24.3
INFO:__main__:车辆 242 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 21.6
INFO:__main__:车辆 243 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 14.4
INFO:__main__:车辆 246 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 3.9
INFO:__main__:车辆 139 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 52.0
INFO:__main__:车辆 230 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 49.0
INFO:__main__:车辆 241 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 43.5
INFO:__main__:车辆 244 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 9.6
INFO:__main__:车辆 299 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 22.0
INFO:__main__:车辆 356 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 4.800000000000001
INFO:__main__:车辆 275 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 53.2
INFO:__main__:车辆 310 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 14.4
INFO:__main__:车辆 354 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 27.0
INFO:__main__:车辆 313 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 12.0
INFO:__main__:车辆 349 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 55.1
INFO:__main__:车辆 257 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 21.0
INFO:__main__:车辆 259 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 43.2
INFO:__main__:车辆 289 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 46.2
INFO:__main__:车辆 323 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 14.5
INFO:__main__:车辆 358 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 2.4
INFO:__main__:车辆 293 (类型: 12.2) 在第 2 天未达到最小起运量: 最小起运量 72, 实际装载 40.8
INFO:__main__:车辆 336 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 57.2
INFO:__main__:车辆 341 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 44.0
INFO:__main__:车辆 355 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 17.6
INFO:__main__:车辆 325 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 70.2
INFO:__main__:车辆 332 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 51.7
INFO:__main__:车辆 350 (类型: 8.9) 在第 2 天未达到最小起运量: 最小起运量 71, 实际装载 39.6
INFO:__main__:车辆 80 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 46.8
INFO:__main__:车辆 237 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 66.0
INFO:__main__:车辆 240 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 45.0
INFO:__main__:车辆 63 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 59.5
INFO:__main__:车辆 181 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 9.0
INFO:__main__:车辆 187 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 32.4
INFO:__main__:车辆 352 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 39.0
INFO:__main__:车辆 87 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 36.0
INFO:__main__:车辆 56 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 63.6
INFO:__main__:车辆 351 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 51.0
INFO:__main__:车辆 96 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 40.6
INFO:__main__:车辆 112 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 1.4
INFO:__main__:车辆 142 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 55.1
INFO:__main__:车辆 144 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 31.200000000000003
INFO:__main__:车辆 91 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 55.1
INFO:__main__:车辆 145 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 6.9
INFO:__main__:车辆 163 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 67.19999999999999
INFO:__main__:车辆 167 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 44.0
INFO:__main__:车辆 100 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 2.6
INFO:__main__:车辆 64 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 42.0
INFO:__main__:车辆 77 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 61.2
INFO:__main__:车辆 50 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 55.00000000000001
INFO:__main__:车辆 88 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 21.6
INFO:__main__:车辆 235 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 52.2
INFO:__main__:车辆 83 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 18.4
INFO:__main__:车辆 128 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 10.8
INFO:__main__:车辆 137 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 43.2
INFO:__main__:车辆 51 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 57.4
INFO:__main__:车辆 98 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 59.4
INFO:__main__:车辆 151 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 30.8
INFO:__main__:车辆 85 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 6.9
INFO:__main__:车辆 116 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 1.4
INFO:__main__:车辆 236 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 62.4
INFO:__main__:车辆 66 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 28.8
INFO:__main__:车辆 68 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 46.0
INFO:__main__:车辆 69 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 23.4
INFO:__main__:车辆 282 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 12.8
INFO:__main__:车辆 297 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 38.4
INFO:__main__:车辆 326 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 68.9
INFO:__main__:车辆 328 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 67.19999999999999
INFO:__main__:车辆 295 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 24.200000000000003
INFO:__main__:车辆 266 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 34.8
INFO:__main__:车辆 232 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 58.9
INFO:__main__:车辆 233 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 34.1
INFO:__main__:车辆 306 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 16.8
INFO:__main__:车辆 202 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 26.4
INFO:__main__:车辆 301 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 36.0
INFO:__main__:车辆 348 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 53.2
INFO:__main__:车辆 329 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 67.19999999999999
INFO:__main__:车辆 239 (类型: 8.9) 在第 3 天未达到最小起运量: 最小起运量 71, 实际装载 39.6
INFO:__main__:车辆 303 (类型: 12.2) 在第 3 天未达到最小起运量: 最小起运量 72, 实际装载 33.6
INFO:__main__:检查库存流转约束...

============================================================
解决方案验证结果摘要
============================================================
需求满足约束: ✅ 通过

生产基地库存上限约束: ✅ 通过

车辆容量约束: ✅ 通过

库存流转约束: ✅ 通过

总违反数量: 0
解决方案状态: 可行
============================================================
(base) PS D:\Gurobi_code\Problem2\ALNSCode>
