(Problem2) PS D:\Gurobi_code\Problem2\ALNSCode> python main.py
0.0s 开始优化流程! / 2025-09-23 00:35:20.441159
0.0s Step 1: 加载数据...
0.0s Loading Data...
0.0s Data loading elapsed time: 0.03s
0.2s Step 1耗时: 0.20s
0.2s Step 2: 创建初始解...
0.2s Initializing the solution...
5.3s Initial Solution Objective: 8379.71
5.3s Vehicles Used in Initial Solution: 556
5.3s Initial Solution Cost: 1011.92
5.3s Step 2耗时: 5.08s
5.3s Step 3: 设置ALNS算法...
5.3s 注册destroy算子...
5.3s 所有destroy算子注册完成
5.3s 注册repair算子...
5.3s 所有repair算子注册完成
5.3s Step 3耗时: 0.00s
5.3s Step 4: 配置算子选择机制...
5.3s Step 4耗时: 0.00s
5.3s Step 5: 配置接受准则...
5.3s Step 5耗时: 0.00s
5.3s Step 6: 配置停止准则...
5.3s 组合停止准则配置: 最大300次迭代 或 最大900秒运行时间
5.3s Step 6耗时: 0.00s
5.3s Step 7: 设置追踪器和回调函数...
5.3s Step 7耗时: 0.00s
5.3s Step 8: 运行ALNS算法...
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0164s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.5021s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0794s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6915s
[OPLOG] local_search_repair: 2.8604s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0150s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.1163s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0116s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.4194s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0165s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0069s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0156s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.5162s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0329s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 正在构建特征和标签数据 ...
[OPLOG] tracker中无数据, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7193s
[OPLOG] local_search_repair: 2.9097s
构建训练数据: 特征长度 1, 标签长度 1, 目标函数改进 0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0157s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.2398s
[OPLOG] local_search_repair: 4.0648s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0119s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0003s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0175s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0088s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0184s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0070s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0190s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0253s
21.6s Iteration 1: New best feasible solution found!
21.6s Objective: 8379.71, Gap: 0.00%, Time: 14.68s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0129s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 1 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.4788s
[OPLOG] local_search_repair: 4.7776s
[OPLOG] 计算的实际特征: [57.25555555555555, 1.9983239619377167, 2.0, np.float64(158.8495145631068), np.float64(0.7737420867902153)]
[OPLOG] 已保存实际训练数据: 特征值长度=2, 标签长度=2, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0169s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.1818s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0488s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.4430s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0177s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.7636s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0191s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3168s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0189s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 120 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7587s
28.9s Found feasible solution with cost: 977.18
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0200s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1244s
30.7s Iteration 2: New best feasible solution found!
30.7s Objective: 6889.08, Gap: 0.00%, Time: 23.86s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0420s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.9434s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0168s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 1.3911s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0226s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0867s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0182s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 304 个未满足需求
[OPLOG] 批次 1/16 处理成功
[OPLOG] 批次 2/16 处理成功
[OPLOG] 批次 3/16 处理成功
[OPLOG] 批次 4/16 处理成功
[OPLOG] 批次 5/16 处理成功
[OPLOG] 批次 6/16 处理成功
[OPLOG] 批次 7/16 处理成功
[OPLOG] 批次 8/16 处理成功
[OPLOG] 批次 9/16 处理成功
[OPLOG] 批次 10/16 处理成功
[OPLOG] 批次 11/16 处理成功
[OPLOG] 批次 12/16 处理成功
[OPLOG] 批次 13/16 处理成功
[OPLOG] 批次 14/16 处理成功
[OPLOG] 批次 15/16 处理成功
[OPLOG] 批次 16/16 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 1.2258s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0209s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.0885s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0424s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.4290s
[OPLOG] local_search_repair: 2.9845s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0431s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 2 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6256s
[OPLOG] 计算的实际特征: [75.22222222222223, 1.9574642126789366, 2.0, np.float64(125.0), np.float64(0.7851833800186742)]
[OPLOG] 已保存实际训练数据: 特征值长度=3, 标签长度=3, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0185s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 93 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.5696s
39.0s Found feasible solution with cost: 971.30
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0220s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.3313s
[OPLOG] local_search_repair: 4.1476s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0224s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0355s
45.0s Iteration 3: New best feasible solution found!
45.0s Objective: 6563.37, Gap: 0.00%, Time: 38.13s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0241s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 3 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.2816s
[OPLOG] 计算的实际特征: [89.0625, 1.5047954866008464, 2.0, np.float64(257.1041666666667), np.float64(0.8149447679127798)]
[OPLOG] 已保存实际训练数据: 特征值长度=4, 标签长度=4, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0261s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6638s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0513s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: -0.5152s
[OPLOG] local_search_repair: 1.0708s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0492s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.4081s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0231s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0049s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0241s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.1612s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0552s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 4 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2913s
[OPLOG] 已保存实际训练数据: 特征值长度=5, 标签长度=5, 改进=1000000.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0489s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1695s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0303s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0645s
[OPLOG] local_search_repair: 1.9442s
54.6s Found feasible solution with cost: 909.76
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0301s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0821s
56.5s Iteration 5: New best feasible solution found!
56.5s Objective: 4120.41, Gap: 0.00%, Time: 49.62s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0315s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0076s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0314s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 5 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.9507s
[OPLOG] local_search_repair: 3.3467s
[OPLOG] 计算的实际特征: [71.55172413793103, 2.0017241379310344, 2.0, np.float64(100.15384615384616), np.float64(0.785185662669201)]
[OPLOG] 已保存实际训练数据: 特征值长度=6, 标签长度=6, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0338s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0078s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0505s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6471s
[OPLOG] local_search_repair: 0.7383s
59.6s Found feasible solution with cost: 907.38
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0306s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 91 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.5773s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0282s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0003s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0318s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0076s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0324s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4533s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0365s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 6 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.7648s
[OPLOG] 已保存实际训练数据: 特征值长度=7, 标签长度=7, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0343s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0272s
[OPLOG] local_search_repair: 0.4886s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0334s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 7 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 304 个未满足需求
[OPLOG] 批次 1/16 处理成功
[OPLOG] 批次 2/16 处理成功
[OPLOG] 批次 3/16 处理成功
[OPLOG] 批次 4/16 处理成功
[OPLOG] 批次 5/16 处理成功
[OPLOG] 批次 6/16 处理成功
[OPLOG] 批次 7/16 处理成功
[OPLOG] 批次 8/16 处理成功
[OPLOG] 批次 9/16 处理成功
[OPLOG] 批次 10/16 处理成功
[OPLOG] 批次 11/16 处理成功
[OPLOG] 批次 12/16 处理成功
[OPLOG] 批次 13/16 处理成功
[OPLOG] 批次 14/16 处理成功
[OPLOG] 批次 15/16 处理成功
[OPLOG] 批次 16/16 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 1.2507s
[OPLOG] 已保存实际训练数据: 特征值长度=8, 标签长度=8, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0418s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 121 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.8382s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0394s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0055s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1154s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6961s
[OPLOG] local_search_repair: 3.2320s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0364s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.3292s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0319s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 304 个未满足需求
[OPLOG] 批次 1/16 处理成功
[OPLOG] 批次 2/16 处理成功
[OPLOG] 批次 3/16 处理成功
[OPLOG] 批次 4/16 处理成功
[OPLOG] 批次 5/16 处理成功
[OPLOG] 批次 6/16 处理成功
[OPLOG] 批次 7/16 处理成功
[OPLOG] 批次 8/16 处理成功
[OPLOG] 批次 9/16 处理成功
[OPLOG] 批次 10/16 处理成功
[OPLOG] 批次 11/16 处理成功
[OPLOG] 批次 12/16 处理成功
[OPLOG] 批次 13/16 处理成功
[OPLOG] 批次 14/16 处理成功
[OPLOG] 批次 15/16 处理成功
[OPLOG] 批次 16/16 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 1.2190s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0403s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0740s
74.3s Iteration 9: New best feasible solution found!
74.3s Objective: 3945.11, Gap: 0.00%, Time: 67.40s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0385s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0008s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0397s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 121 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7946s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0390s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0007s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0387s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0217s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0365s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.8160s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0402s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.3619s
[OPLOG] local_search_repair: 3.1543s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0653s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0066s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0582s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0062s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0372s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 8 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0010s
[OPLOG] 已保存实际训练数据: 特征值长度=9, 标签长度=9, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0393s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 9 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1430s
[OPLOG] local_search_repair: 0.5308s
[OPLOG] 已保存实际训练数据: 特征值长度=10, 标签长度=10, 改进=1000000.0000
81.6s Found feasible solution with cost: 901.84
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0661s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3542s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0409s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 119 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7522s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0409s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0588s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0633s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7273s
[OPLOG] local_search_repair: 0.8536s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0406s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.3421s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0383s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0064s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0690s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3572s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0584s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 10 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0077s
[OPLOG] 计算的实际特征: [85.36, 2.134659090909091, 2.0, np.float64(385.53333333333336), np.float64(0.8039117963927652)]
[OPLOG] 已保存实际训练数据: 特征值长度=11, 标签长度=11, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0381s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 11 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.6184s
[OPLOG] local_search_repair: 5.3006s
[OPLOG] 计算的实际特征: [66.74489795918367, 2.002312138728324, 2.0, np.float64(139.51977401129943), np.float64(0.7777598536980518)]
[OPLOG] 已保存实际训练数据: 特征值长度=12, 标签长度=12, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0648s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 53 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3673s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0429s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 9 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0860s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0475s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0075s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0432s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.9680s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0444s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0036s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0439s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 12 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6317s
[OPLOG] 已保存实际训练数据: 特征值长度=13, 标签长度=13, 改进=1000000.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0438s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0055s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0423s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.4497s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0489s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0088s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0422s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.9444s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0419s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.5200s
[OPLOG] local_search_repair: 5.0718s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0657s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 13 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.7232s
[OPLOG] 计算的实际特征: [73.81818181818181, 1.7647540983606558, 2.0, np.float64(126.6969696969697), np.float64(0.8114834477162387)]
[OPLOG] 已保存实际训练数据: 特征值长度=14, 标签长度=14, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0428s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 113 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7494s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0625s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 14 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0087s
[OPLOG] 计算的实际特征: [70.02857142857142, 1.917071908949819, 2.0, np.float64(239.30232558139534), np.float64(0.788333421853403)]
[OPLOG] 已保存实际训练数据: 特征值长度=15, 标签长度=15, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0475s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 125 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.8217s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0420s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.7715s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0435s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 107 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.6930s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0405s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.5096s
[OPLOG] local_search_repair: 5.1837s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0488s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0070s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1188s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6903s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0428s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0059s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0607s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0064s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0453s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 110 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.6878s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0431s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 125 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7943s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0421s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 15 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0216s
[OPLOG] 已保存实际训练数据: 特征值长度=16, 标签长度=16, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0413s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.5024s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0444s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6751s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0681s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0768s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0410s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.4081s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0422s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 16 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.2688s
[OPLOG] local_search_repair: 3.4841s
[OPLOG] 计算的实际特征: [108.2, 1.4000000000000004, 2.0, np.float64(125.625), np.float64(0.7691265322257014)]
[OPLOG] 已保存实际训练数据: 特征值长度=17, 标签长度=17, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0627s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5087s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0364s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 1.3796s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0584s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0061s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0424s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0223s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0666s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0071s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0402s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 17 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0060s
[OPLOG] 计算的实际特征: [77.38532110091744, 2.0301819732726756, 2.0, np.float64(339.95628415300547), np.float64(0.784453652573959)]
[OPLOG] 已保存实际训练数据: 特征值长度=18, 标签长度=18, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0432s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 18 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.2274s
[OPLOG] 计算的实际特征: [88.33333333333333, 1.5418947368421052, 2.0, np.float64(226.56410256410257), np.float64(0.8414440179583954)]
[OPLOG] 已保存实际训练数据: 特征值长度=19, 标签长度=19, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0413s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0222s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0426s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0082s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0418s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 19 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0036s
[OPLOG] 已保存实际训练数据: 特征值长度=20, 标签长度=20, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0745s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0058s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0415s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0070s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0460s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0075s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0376s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.9792s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0366s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.4292s
[OPLOG] local_search_repair: 4.7249s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0425s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.0541s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0430s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0083s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0587s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2921s
[OPLOG] local_search_repair: 2.3031s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0602s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7131s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0428s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 99 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.6259s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0478s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.3025s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0418s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 1.2004s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0455s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0690s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0435s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6224s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0410s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 117 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7721s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0496s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0061s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0397s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 1.1814s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0643s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 20 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2377s
[OPLOG] local_search_repair: 2.6344s
[OPLOG] 计算的实际特征: [67.57142857142857, 1.7620320855614973, 2.0, np.float64(94.26666666666667), np.float64(0.7685494699176126)]
[OPLOG] 已保存实际训练数据: 特征值长度=21, 标签长度=21, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0426s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0314s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0460s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0078s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0436s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0691s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0418s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.3061s
[OPLOG] local_search_repair: 3.8307s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1242s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0089s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0598s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0083s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0448s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0036s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0378s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.4002s
[OPLOG] local_search_repair: 4.6985s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0475s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 21 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0696s
[OPLOG] 计算的实际特征: [87.66666666666667, 1.8238297872340425, 2.0, np.float64(300.44444444444446), np.float64(0.7838399002612962)]
[OPLOG] 已保存实际训练数据: 特征值长度=22, 标签长度=22, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0441s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0004s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0452s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 22 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 1.0411s
[OPLOG] 计算的实际特征: [87.0, 2.0, 2.0, np.float64(86.0), np.float64(0.7591711603404843)]
[OPLOG] 已保存实际训练数据: 特征值长度=23, 标签长度=23, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0651s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0085s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0459s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 114 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7504s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0417s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 23 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.1866s
[OPLOG] 计算的实际特征: [86.92, 1.6798490127758419, 2.0, np.float64(297.44), np.float64(0.8500494776953785)]
[OPLOG] 已保存实际训练数据: 特征值长度=24, 标签长度=24, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0381s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.4339s
[OPLOG] local_search_repair: 4.7272s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0417s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 104 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.6712s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0689s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1351s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0439s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 24 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 13 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1127s
[OPLOG] 已保存实际训练数据: 特征值长度=25, 标签长度=25, 改进=1000000.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0719s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6331s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0494s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 无缓存模型，开始首次训练
[OPLOG] 自适应选择Ridge模型 (数据量: 25)
[Tracker] Cached ML model at iteration 35
[OPLOG] 模型训练完成, 已缓存到tracker
[OPLOG] 116 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.2986s
[OPLOG] 计算的实际特征: [106.2, 1.7368421052631582, 2.0, np.float64(165.33333333333334), np.float64(0.7634387753379193)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=26, 标签长度=26, 改进=0.0000
[OPLOG] ML修复完成: 1161次预测, 0次成功插入, 116个需求使用greedy修复
[OPLOG] learning_based_repair: 2.4647s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0461s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5903s
[OPLOG] local_search_repair: 1.9196s
185.0s Found feasible solution with cost: 885.92
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0486s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0089s
186.9s Iteration 36: New best feasible solution found!
186.9s Objective: 3221.39, Gap: 0.00%, Time: 179.98s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0680s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0059s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0458s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0064s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0459s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 115 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7305s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0440s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.4219s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0488s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6159s
[OPLOG] local_search_repair: 3.1371s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0475s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0085s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0466s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0095s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0726s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0058s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0445s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 158 个未满足需求
[OPLOG] 批次 1/8 处理成功
[OPLOG] 批次 2/8 处理成功
[OPLOG] 批次 3/8 处理成功
[OPLOG] 批次 4/8 处理成功
[OPLOG] 批次 5/8 处理成功
[OPLOG] 批次 6/8 处理成功
[OPLOG] 批次 7/8 处理成功
[OPLOG] 批次 8/8 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.9384s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0466s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 4 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0524s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2001s
[OPLOG] local_search_repair: 0.3868s
193.6s Found feasible solution with cost: 883.46
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0474s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6854s
[OPLOG] local_search_repair: 3.0663s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0492s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5524s
[OPLOG] local_search_repair: 0.6410s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0529s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0032s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0516s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0034s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0479s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0003s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1331s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2131s
[OPLOG] local_search_repair: 0.3018s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0483s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 304 个未满足需求
[OPLOG] 批次 1/16 处理成功
[OPLOG] 批次 2/16 处理成功
[OPLOG] 批次 3/16 处理成功
[OPLOG] 批次 4/16 处理成功
[OPLOG] 批次 5/16 处理成功
[OPLOG] 批次 6/16 处理成功
[OPLOG] 批次 7/16 处理成功
[OPLOG] 批次 8/16 处理成功
[OPLOG] 批次 9/16 处理成功
[OPLOG] 批次 10/16 处理成功
[OPLOG] 批次 11/16 处理成功
[OPLOG] 批次 12/16 处理成功
[OPLOG] 批次 13/16 处理成功
[OPLOG] 批次 14/16 处理成功
[OPLOG] 批次 15/16 处理成功
[OPLOG] 批次 16/16 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 1.2403s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0541s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.9727s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0529s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 7 迭代
[OPLOG] 无未满足需求, 直接返回当前解
202.9s Iteration 43: New best feasible solution found!
202.9s Objective: 3199.99, Gap: 0.00%, Time: 196.03s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0770s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2979s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0520s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 116 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7162s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0519s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 9 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0517s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0083s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0543s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6991s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0560s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0617s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0550s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 86 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.9831s
[OPLOG] 计算的实际特征: [52.5, 1.3, 2.0, np.float64(147.0), np.float64(0.8031727504670831)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=29, 标签长度=29, 改进=0.0000
[OPLOG] ML修复完成: 864次预测, 2次成功插入, 86个需求使用greedy修复
[OPLOG] learning_based_repair: 2.1840s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0753s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 42 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0842s
[OPLOG] 计算的实际特征: [85.25, 2.3804878048780487, 2.0, np.float64(147.08333333333334), np.float64(0.80480604069433)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=30, 标签长度=30, 改进=0.0000
[OPLOG] ML修复完成: 378次预测, 0次成功插入, 42个需求使用greedy修复
[OPLOG] learning_based_repair: 1.1666s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0522s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 3.6391s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0533s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6818s
[OPLOG] local_search_repair: 3.2935s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0741s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5789s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0541s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.2669s
[OPLOG] local_search_repair: 2.7820s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0557s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0510s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0044s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0520s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0083s
[OPLOG] local_search_repair: 0.2270s
219.2s Found feasible solution with cost: 884.22
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0777s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1933s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0594s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 13 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0544s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 14 迭代
[OPLOG] 101 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6765s
[OPLOG] 计算的实际特征: [69.75, 1.9732222934016654, 2.0, np.float64(130.50757575757575), np.float64(0.7983640202100778)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=31, 标签长度=31, 改进=0.0000
[OPLOG] ML修复完成: 1044次预测, 0次成功插入, 101个需求使用greedy修复
[OPLOG] learning_based_repair: 2.8298s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0610s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0032s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0553s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.1326s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0720s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0038s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0564s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0038s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0568s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0232s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1463s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6599s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0562s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0059s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0802s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 18 迭代
[OPLOG] 41 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9847s
[OPLOG] 计算的实际特征: [69.5, 1.1071005917159764, 2.0, np.float64(127.75), np.float64(0.8103864932307259)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=32, 标签长度=32, 改进=0.0000
[OPLOG] ML修复完成: 369次预测, 0次成功插入, 41个需求使用greedy修复
[OPLOG] learning_based_repair: 1.0652s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0790s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1807s
[OPLOG] local_search_repair: 1.5245s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0561s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.2215s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0667s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0093s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0560s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.7751s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0613s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6370s
[OPLOG] local_search_repair: 3.1030s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0545s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 199 个未满足需求
[OPLOG] 批次 1/10 处理成功
[OPLOG] 批次 2/10 处理成功
[OPLOG] 批次 3/10 处理成功
[OPLOG] 批次 4/10 处理成功
[OPLOG] 批次 5/10 处理成功
[OPLOG] 批次 6/10 处理成功
[OPLOG] 批次 7/10 处理成功
[OPLOG] 批次 8/10 处理成功
[OPLOG] 批次 9/10 处理成功
[OPLOG] 批次 10/10 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 1.1531s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0598s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0023s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0569s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 20 迭代
[OPLOG] 304 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.4606s
[OPLOG] 计算的实际特征: [57.25555555555555, 1.9983239619377167, 2.0, np.float64(158.8495145631068), np.float64(0.7737420867902153)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=33, 标签长度=33, 改进=0.0000
[OPLOG] ML修复完成: 3060次预测, 0次成功插入, 304个需求使用greedy修复
[OPLOG] learning_based_repair: 4.8161s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0787s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0061s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0816s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 20 迭代
[OPLOG] 46 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1843s
[OPLOG] 计算的实际特征: [86.25, 2.5, 2.0, np.float64(185.33333333333334), np.float64(0.8027492255643517)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=34, 标签长度=34, 改进=0.0000
[OPLOG] ML修复完成: 414次预测, 0次成功插入, 46个需求使用greedy修复
[OPLOG] learning_based_repair: 1.2697s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0593s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0269s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0604s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 21 迭代
[OPLOG] 7 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2231s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=35, 标签长度=35, 改进=1000000.0000
[OPLOG] ML修复完成: 63次预测, 0次成功插入, 7个需求使用greedy修复
[OPLOG] learning_based_repair: 0.2723s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0627s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 21 迭代
[OPLOG] 7 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1942s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=36, 标签长度=36, 改进=1000000.0000
[OPLOG] ML修复完成: 72次预测, 0次成功插入, 7个需求使用greedy修复
[OPLOG] learning_based_repair: 0.2418s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0645s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0712s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0671s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.2278s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0807s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4970s
[OPLOG] local_search_repair: 0.7288s
247.0s Found feasible solution with cost: 885.58
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0677s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 22 迭代
[OPLOG] 无未满足需求, 直接返回当前解
249.0s Iteration 58: New best feasible solution found!
249.0s Objective: 3017.79, Gap: 0.00%, Time: 242.16s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1005s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1955s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0645s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 124 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7936s
249.8s Found feasible solution with cost: 883.08
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1547s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0077s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0683s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 123 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7898s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0687s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0066s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0647s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 23 迭代
[OPLOG] 113 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6282s
[OPLOG] 计算的实际特征: [86.25, 2.020752688172043, 2.0, np.float64(103.16129032258064), np.float64(0.7964956427461914)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=38, 标签长度=38, 改进=0.0000
[OPLOG] ML修复完成: 1116次预测, 1次成功插入, 113个需求使用greedy修复
[OPLOG] learning_based_repair: 2.8192s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0709s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.7761s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0697s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1279s
257.2s Iteration 59: New best feasible solution found!
257.2s Objective: 2882.08, Gap: 0.00%, Time: 250.36s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0638s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.2565s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0665s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0647s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0717s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 43 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3150s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0671s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 25 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0690s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 26 迭代
[OPLOG] 121 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.7004s
[OPLOG] 计算的实际特征: [85.95454545454545, 2.145654345654346, 2.0, np.float64(127.33333333333333), np.float64(0.7868545704734247)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=41, 标签长度=41, 改进=0.0000
[OPLOG] ML修复完成: 1233次预测, 2次成功插入, 121个需求使用greedy修复
[OPLOG] learning_based_repair: 2.9233s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0657s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 3.1964s
[OPLOG] local_search_repair: 3.7969s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0690s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0593s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0710s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0748s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0743s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 117 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.7292s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0909s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 47 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3261s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0687s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0004s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0712s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0263s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1669s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6805s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0844s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0676s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1030s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 30 迭代
[OPLOG] 61 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.6270s
[OPLOG] 计算的实际特征: [74.6086956521739, 2.2651162790697676, 2.0, np.float64(105.35714285714286), np.float64(0.7978119183353481)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=42, 标签长度=42, 改进=0.0000
[OPLOG] ML修复完成: 630次预测, 0次成功插入, 61个需求使用greedy修复
[OPLOG] learning_based_repair: 1.7360s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0705s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6819s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0789s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.3316s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0741s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.4347s
[OPLOG] local_search_repair: 4.8157s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0720s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.4201s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0721s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 30 迭代
[OPLOG] 184 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 3.8475s
[OPLOG] 计算的实际特征: [65.70731707317073, 2.0071774193548384, 2.0, np.float64(131.08771929824562), np.float64(0.7821696467967978)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=44, 标签长度=44, 改进=0.0000
[OPLOG] ML修复完成: 1890次预测, 1次成功插入, 184个需求使用greedy修复
[OPLOG] learning_based_repair: 4.1065s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0916s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 15 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1218s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0704s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6630s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0764s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0208s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0690s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 31 迭代
[OPLOG] 304 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.4570s
[OPLOG] 计算的实际特征: [57.25555555555555, 1.9959409190371993, 2.0, np.float64(157.45145631067962), np.float64(0.7749726470145487)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=45, 标签长度=45, 改进=0.0000
[OPLOG] ML修复完成: 3060次预测, 0次成功插入, 304个需求使用greedy修复
[OPLOG] learning_based_repair: 4.8114s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0728s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.9540s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0741s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.1570s
[OPLOG] local_search_repair: 5.1227s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0745s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.9172s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0719s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.8118s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0739s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.1264s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0734s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0065s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0766s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6603s
[OPLOG] local_search_repair: 3.7515s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0985s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.9566s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0941s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.6928s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0724s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 31 迭代
[OPLOG] 3 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0798s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=46, 标签长度=46, 改进=0.0000
[OPLOG] ML修复完成: 36次预测, 0次成功插入, 3个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1252s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1711s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0077s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0748s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.6793s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0805s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 118 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.8648s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1079s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.9636s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0807s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 117 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.8232s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0998s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2380s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0972s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.4802s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0969s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 1.0181s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0759s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 127 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.9663s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0901s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.6634s
[OPLOG] local_search_repair: 3.5802s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.1028s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3560s
[OPLOG] local_search_repair: 1.1283s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1124s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0104s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.1048s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0070s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1171s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0193s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1195s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0098s
[OPLOG] local_search_repair: 0.7783s
328.4s Found feasible solution with cost: 877.12
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0900s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 112 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.9194s
329.6s Found feasible solution with cost: 876.36
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1078s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 34 迭代
[OPLOG] 117 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 3.4656s
[OPLOG] 计算的实际特征: [86.7, 1.5653061224489795, 2.0, np.float64(128.28571428571428), np.float64(0.7995241442165101)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=47, 标签长度=47, 改进=0.0000
[OPLOG] ML修复完成: 1152次预测, 0次成功插入, 117个需求使用greedy修复
[OPLOG] learning_based_repair: 3.6511s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0810s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 142 个未满足需求
[OPLOG] 批次 1/8 处理成功
[OPLOG] 批次 2/8 处理成功
[OPLOG] 批次 3/8 处理成功
[OPLOG] 批次 4/8 处理成功
[OPLOG] 批次 5/8 处理成功
[OPLOG] 批次 6/8 处理成功
[OPLOG] 批次 7/8 处理成功
[OPLOG] 批次 8/8 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.9480s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1009s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 2.2044s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0939s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.7815s
[OPLOG] local_search_repair: 5.9441s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1307s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 59 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.5478s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0901s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 304 个未满足需求
[OPLOG] 批次 1/16 处理成功
[OPLOG] 批次 2/16 处理成功
[OPLOG] 批次 3/16 处理成功
[OPLOG] 批次 4/16 处理成功
[OPLOG] 批次 5/16 处理成功
[OPLOG] 批次 6/16 处理成功
[OPLOG] 批次 7/16 处理成功
[OPLOG] 批次 8/16 处理成功
[OPLOG] 批次 9/16 处理成功
[OPLOG] 批次 10/16 处理成功
[OPLOG] 批次 11/16 处理成功
[OPLOG] 批次 12/16 处理成功
[OPLOG] 批次 13/16 处理成功
[OPLOG] 批次 14/16 处理成功
[OPLOG] 批次 15/16 处理成功
[OPLOG] 批次 16/16 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 1.6043s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1862s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0375s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0845s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0056s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.1090s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.3629s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0733s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0078s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0773s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 2.2691s
[OPLOG] local_search_repair: 3.0426s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1009s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 37 迭代
[OPLOG] 50 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1393s
[OPLOG] 计算的实际特征: [82.0, 2.5, 2.0, np.float64(47.0), np.float64(0.8148082949463501)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=48, 标签长度=48, 改进=0.0000
[OPLOG] ML修复完成: 450次预测, 0次成功插入, 50个需求使用greedy修复
[OPLOG] learning_based_repair: 1.2257s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0790s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0063s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0735s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0067s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0775s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 37 迭代
[OPLOG] 261 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 4.2500s
[OPLOG] 计算的实际特征: [73.70866141732283, 1.9196850393700788, 2.0, np.float64(142.89912280701753), np.float64(0.8025298367210133)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=49, 标签长度=49, 改进=0.0000
[OPLOG] ML修复完成: 2637次预测, 0次成功插入, 261个需求使用greedy修复
[OPLOG] learning_based_repair: 4.5699s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0977s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0062s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0760s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0063s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0695s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0002s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0741s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0059s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0732s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0081s
[OPLOG] local_search_repair: 0.0285s
361.5s Iteration 73: New best feasible solution found!
361.5s Objective: 2702.58, Gap: 0.00%, Time: 354.62s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0714s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 3.0865s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0775s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0215s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1885s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 39 迭代
[OPLOG] 51 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.2033s
[OPLOG] 计算的实际特征: [84.13636363636364, 2.315986769570011, 2.0, np.float64(110.48484848484848), np.float64(0.8149366132686344)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=50, 标签长度=50, 改进=0.0000
[OPLOG] ML修复完成: 459次预测, 0次成功插入, 51个需求使用greedy修复
[OPLOG] learning_based_repair: 1.2906s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0778s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 304 需求, 超时: 30.400000000000002s, 批次大小: 20
[OPLOG] 迭代 1: 剩余 21 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1650s
[STOP] MaxIterations 触发停止条件 (运行时间: 361.98s)
365.3s Step 8耗时: 360.01s
365.3s 优化总耗时: 365.31s
365.3s Step 9: 处理结果...
365.3s Total iterations tracked: 75
365.3s Best objective found: 2702.5780
365.3s Final Gap: 3.04%
365.3s ALNS Final Gap: 6.16%
365.3s Best Heuristic Solution Objective: 2615.58
365.4s Vehicles Used in Best Solution: 537
365.4s Best Solution Cost: 876.36
365.4s ✓ 所有车辆的装载体积都满足容量约束
365.4s Step 9耗时: 0.09s
365.4s Step 10: 生成报告和图表...
367.2s Step 10耗时: 1.77s
***************************************************************************
                      优化完成! 2025-09-23 00:41:27.606189
***************************************************************************
====================================================================================================
***************************************************************************
                     The Vehicle Loading Plan is Done!
***************************************************************************
(Problem2) PS D:\Gurobi_code\Problem2\ALNSCode> python check_solution.py
INFO:__main__:加载输入数据...
INFO:DataALNS:配置参数加载成功
INFO:DataALNS:成功加载 订单需求信息: 304 行数据
INFO:DataALNS:成功加载 生产基地库存容量上限: 2 行数据
INFO:DataALNS:成功加载 SKU体积信息: 27 行数据
INFO:DataALNS:成功加载 车辆类型信息: 3 行数据
INFO:DataALNS:成功加载 生产基地生产计划: 75 行数据
INFO:DataALNS:成功加载 生产基地期初库存: 27 行数据
INFO:DataALNS:数据完整性验证通过
INFO:DataALNS:数据加载和处理完成
INFO:__main__:加载输出数据...
INFO:OutputDataALNS:开始加载数据集: dataset_20
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_20\opt_result.csv, 形状: (537, 7)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_20\opt_details.csv, 形状: (537, 11)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_20\opt_summary.csv, 形状: (537, 9)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_20\non_fulfill.csv, 形状: (0, 3)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_20\sku_inv_left.csv, 形状: (162, 4)
INFO:OutputDataALNS:字典索引生成完成
INFO:OutputDataALNS:数据验证通过
INFO:OutputDataALNS:数据加载完成

数据统计:
输入数据 - 工厂: 2, 经销商: 20, SKU: 27
输出数据统计: {'total_deliveries': 404, 'total_vehicles_used': 537, 'unfulfilled_demands': 0, 'inventory_records': 162, 'total_quantity_shipped': 22684, 'unique_vehicles': 537}
INFO:__main__:开始解决方案验证...
INFO:__main__:检查订单满足情况...
INFO:__main__:检查生产基地库存上限约束...
INFO:__main__:检查车辆容量约束...
INFO:__main__:车辆 12 (类型: 7.4) 在第 1 天未达到最小起运量: 最小起运量 52, 实际装载 28.5
INFO:__main__:车辆 452 (类型: 15.0) 在第 1 天未达到最小起运量: 最小起运量 80, 实际装载 40.0
INFO:__main__:车辆 530 (类型: 6.1) 在第 1 天未达到最小起运量: 最小起运量 35, 实际装载 25.0
INFO:__main__:车辆 535 (类型: 6.1) 在第 1 天未达到最小起运量: 最小起运量 35, 实际装载 15.0
INFO:__main__:车辆 104 (类型: 15.0) 在第 1 天未达到最小起运量: 最小起运量 80, 实际装载 20.4
INFO:__main__:车辆 528 (类型: 6.1) 在第 1 天未达到最小起运量: 最小起运量 35, 实际装载 30.6
INFO:__main__:车辆 48 (类型: 6.1) 在第 1 天未达到最小起运量: 最小起运量 35, 实际装载 5.0
INFO:__main__:车辆 271 (类型: 6.1) 在第 1 天未达到最小起运量: 最小起运量 35, 实际装载 16.799999999999997
INFO:__main__:车辆 25 (类型: 15.0) 在第 1 天未达到最小起运量: 最小起运量 80, 实际装载 32.5
INFO:__main__:车辆 20 (类型: 15.0) 在第 1 天未达到最小起运量: 最小起运量 80, 实际装载 32.0
INFO:__main__:车辆 299 (类型: 15.0) 在第 1 天未达到最小起运量: 最小起运量 80, 实际装载 5.8
INFO:__main__:车辆 523 (类型: 6.1) 在第 1 天未达到最小起运量: 最小起运量 35, 实际装载 34.0
INFO:__main__:车辆 51 (类型: 6.1) 在第 1 天未达到最小起运量: 最小起运量 35, 实际装载 30.0
INFO:__main__:车辆 60 (类型: 15.0) 在第 1 天未达到最小起运量: 最小起运量 80, 实际装载 22.4
INFO:__main__:车辆 15 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 19.8
INFO:__main__:车辆 529 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 24.200000000000003
INFO:__main__:车辆 11 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 30.0
INFO:__main__:车辆 396 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 19.8
INFO:__main__:车辆 411 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 60.0
INFO:__main__:车辆 408 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 24.0
INFO:__main__:车辆 303 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 24.0
INFO:__main__:车辆 402 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 5.4
INFO:__main__:车辆 413 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 78.2
INFO:__main__:车辆 454 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 53.2
INFO:__main__:车辆 532 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 9.9
INFO:__main__:车辆 441 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 13.3
INFO:__main__:车辆 281 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 29.0
INFO:__main__:车辆 270 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 20.0
INFO:__main__:车辆 428 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 40.0
INFO:__main__:车辆 395 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 30.8
INFO:__main__:车辆 434 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 75.0
INFO:__main__:车辆 348 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 16.799999999999997
INFO:__main__:车辆 456 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 55.1
INFO:__main__:车辆 466 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 44.8
INFO:__main__:车辆 534 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 16.8
INFO:__main__:车辆 364 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 5.6
INFO:__main__:车辆 398 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 16.0
INFO:__main__:车辆 206 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 18.0
INFO:__main__:车辆 443 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 55.0
INFO:__main__:车辆 426 (类型: 15.0) 在第 2 天未达到最小起运量: 最小起运量 80, 实际装载 76.8
INFO:__main__:车辆 520 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 31.200000000000003
INFO:__main__:车辆 533 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 20.3
INFO:__main__:车辆 397 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 16.2
INFO:__main__:车辆 531 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 21.6
INFO:__main__:车辆 179 (类型: 6.1) 在第 2 天未达到最小起运量: 最小起运量 35, 实际装载 7.2
INFO:__main__:车辆 424 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 72.60000000000001
INFO:__main__:车辆 247 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 12.0
INFO:__main__:车辆 394 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 26.4
INFO:__main__:车辆 399 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 7.5
INFO:__main__:车辆 153 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 32.5
INFO:__main__:车辆 521 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 31.200000000000003
INFO:__main__:车辆 313 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 10.5
INFO:__main__:车辆 403 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 5.8
INFO:__main__:车辆 324 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 7.2
INFO:__main__:车辆 90 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 26.0
INFO:__main__:车辆 159 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 8.399999999999999
INFO:__main__:车辆 298 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 19.5
INFO:__main__:车辆 235 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 26.6
INFO:__main__:车辆 537 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 5.1
INFO:__main__:车辆 114 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 16.799999999999997
INFO:__main__:车辆 157 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 30.0
INFO:__main__:车辆 406 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 24.0
INFO:__main__:车辆 415 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 69.7
INFO:__main__:车辆 68 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 26.0
INFO:__main__:车辆 94 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 22.8
INFO:__main__:车辆 47 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 19.5
INFO:__main__:车辆 158 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 33.599999999999994
INFO:__main__:车辆 237 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 11.7
INFO:__main__:车辆 400 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 7.5
INFO:__main__:车辆 86 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 15.6
INFO:__main__:车辆 252 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 6.8
INFO:__main__:车辆 356 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 11.2
INFO:__main__:车辆 459 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 50.4
INFO:__main__:车辆 469 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 12.0
INFO:__main__:车辆 236 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 14.3
INFO:__main__:车辆 401 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 14.0
INFO:__main__:车辆 461 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 2.0
INFO:__main__:车辆 70 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 31.5
INFO:__main__:车辆 253 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 33.6
INFO:__main__:车辆 473 (类型: 15.0) 在第 3 天未达到最小起运量: 最小起运量 80, 实际装载 28.0
INFO:__main__:车辆 536 (类型: 6.1) 在第 3 天未达到最小起运量: 最小起运量 35, 实际装载 14.0
INFO:__main__:检查库存流转约束...

============================================================
解决方案验证结果摘要
============================================================
需求满足约束: ✅ 通过

生产基地库存上限约束: ✅ 通过

车辆容量约束: ✅ 通过

库存流转约束: ✅ 通过

总违反数量: 0
解决方案状态: 可行
============================================================
(Problem2) PS D:\Gurobi_code\Problem2\ALNSCode>
