(base) PS D:\Gurobi_code\Problem2\ALNSCode> python main.py
0.0s 开始优化流程! / 2025-09-22 20:14:21.438234
0.0s Step 1: 加载数据...
0.0s Loading Data...
0.0s Data loading elapsed time: 0.03s
0.0s Step 1耗时: 0.03s
0.0s Step 2: 创建初始解...
0.0s Initializing the solution...
1.4s Initial Solution Objective: 8115.71
1.4s Vehicles Used in Initial Solution: 202
1.4s Initial Solution Cost: 208.06
1.4s Step 2耗时: 1.32s
1.4s Step 3: 设置ALNS算法...
1.4s 注册destroy算子...
1.4s 所有destroy算子注册完成
1.4s 注册repair算子...
1.4s 所有repair算子注册完成
1.4s Step 3耗时: 0.00s
1.4s Step 4: 配置算子选择机制...
1.4s Step 4耗时: 0.00s
1.4s Step 5: 配置接受准则...
1.4s Step 5耗时: 0.00s
1.4s Step 6: 配置停止准则...
1.4s 组合停止准则配置: 最大300次迭代 或 最大900秒运行时间
1.4s Step 6耗时: 0.00s
1.4s Step 7: 设置追踪器和回调函数...
1.4s Step 7耗时: 0.00s
1.4s Step 8: 运行ALNS算法...
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0093s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1005s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0110s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 正在构建特征和标签数据 ...
[OPLOG] tracker中无数据, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0064s
构建训练数据: 特征长度 1, 标签长度 1, 目标函数改进 1000000.0000
3.7s Iteration 1: New best feasible solution found!
3.7s Objective: 8115.71, Gap: 0.00%, Time: 0.25s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0120s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 1 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0260s
[OPLOG] 已保存实际训练数据: 特征值长度=2, 标签长度=2, 改进=1000000.0000
1.7s Found feasible solution with cost: 207.94
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0142s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1469s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1071s
2.1s Found feasible solution with cost: 207.85
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0148s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5108s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0164s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0236s
[OPLOG] local_search_repair: 0.4603s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0192s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0040s
5.4s Iteration 2: New best feasible solution found!
5.4s Objective: 7934.71, Gap: 0.00%, Time: 1.93s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0157s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 2 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1083s
[OPLOG] 计算的实际特征: [111.71428571428571, 2.10989010989011, 2.0, 38.333333333333336, 0.5567428469635193]
[OPLOG] 已保存实际训练数据: 特征值长度=3, 标签长度=3, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0277s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0049s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0143s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0156s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 3 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0040s
[OPLOG] 已保存实际训练数据: 特征值长度=4, 标签长度=4, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0163s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0032s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0139s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3608s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0201s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0377s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0195s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0125s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0189s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1620s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0160s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0219s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1114s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0171s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0183s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4497s
[OPLOG] local_search_repair: 0.8157s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0197s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1223s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0198s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1958s
[OPLOG] local_search_repair: 0.5990s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0185s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 44 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1398s
6.7s Found feasible solution with cost: 201.80
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0212s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4255s
[OPLOG] local_search_repair: 0.7102s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0191s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2090s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0202s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 4 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0380s
[OPLOG] 已保存实际训练数据: 特征值长度=5, 标签长度=5, 改进=1000000.0000
7.8s Found feasible solution with cost: 201.71
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0277s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0330s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0267s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1185s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0228s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 74 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2332s
8.4s Found feasible solution with cost: 195.63
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0317s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] local_search_repair: 0.2175s
8.8s Found feasible solution with cost: 194.73
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0260s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 5 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 70 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2038s
[OPLOG] 已保存实际训练数据: 特征值长度=6, 标签长度=6, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0240s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0265s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
11.3s Iteration 6: New best feasible solution found!
11.3s Objective: 5370.29, Gap: 0.00%, Time: 7.88s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0270s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] local_search_repair: 0.0101s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0329s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 19 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0651s
9.5s Found feasible solution with cost: 195.67
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0260s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0032s
11.7s Iteration 8: New best feasible solution found!
11.7s Objective: 5298.20, Gap: 0.00%, Time: 8.30s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0249s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0021s
[OPLOG] local_search_repair: 0.0220s
9.8s Found feasible solution with cost: 195.64
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0270s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2229s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0268s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1169s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0253s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0030s
12.5s Iteration 9: New best feasible solution found!
12.5s Objective: 5267.00, Gap: 0.00%, Time: 9.11s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0270s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0257s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0236s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 6 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2182s
[OPLOG] 计算的实际特征: [66.0, 2.183333333333333, 2.0, -24.333333333333332, 0.697397909818016]
[OPLOG] 已保存实际训练数据: 特征值长度=7, 标签长度=7, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0247s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0031s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0270s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3714s
[OPLOG] local_search_repair: 0.4413s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0247s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4336s
[OPLOG] local_search_repair: 0.5075s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0275s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 7 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5391s
[OPLOG] local_search_repair: 0.6291s
[OPLOG] 计算的实际特征: [85.94736842105263, 2.1446540880503147, 2.0, 53.6, 0.5575018389374723]
[OPLOG] 已保存实际训练数据: 特征值长度=8, 标签长度=8, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0253s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2237s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0260s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0390s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0392s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1287s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0243s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4255s
[OPLOG] local_search_repair: 0.4983s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0278s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1482s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0234s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0254s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 8 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 计算的实际特征: [86.09302325581395, 2.077396344181899, 2.0, 86.36190476190477, 0.5803974749325348]
[OPLOG] 已保存实际训练数据: 特征值长度=9, 标签长度=9, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0234s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0136s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0249s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0090s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0260s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3951s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0259s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4128s
[OPLOG] local_search_repair: 0.4878s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0238s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1518s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0256s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0101s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0331s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0327s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0272s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0039s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0278s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0576s
[OPLOG] local_search_repair: 0.1062s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0355s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0329s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0368s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0024s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0373s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 55 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 5: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1891s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0284s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 46 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1355s
16.7s Found feasible solution with cost: 191.55
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0320s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0020s
19.0s Iteration 17: New best feasible solution found!
19.0s Objective: 4761.69, Gap: 0.00%, Time: 15.56s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0284s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0295s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0293s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1188s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0312s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0048s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0318s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0010s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0292s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0332s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3479s
[OPLOG] local_search_repair: 0.4956s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0272s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2453s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0300s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0379s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0270s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 9 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1731s
[OPLOG] 计算的实际特征: [72.91666666666667, 2.2749706227967095, 2.0, 38.46666666666667, 0.6472087009431092]
[OPLOG] 已保存实际训练数据: 特征值长度=10, 标签长度=10, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0262s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 10 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1766s
[OPLOG] 计算的实际特征: [63.857142857142854, 2.363833992094862, 2.0, 37.27160493827161, 0.6497000073168946]
[OPLOG] 已保存实际训练数据: 特征值长度=11, 标签长度=11, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0303s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 43 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1237s
19.1s Found feasible solution with cost: 188.55
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0300s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 86 个未满足需求
[OPLOG] 批次 1/8 处理成功
[OPLOG] 批次 2/8 处理成功
[OPLOG] 批次 3/8 处理成功
[OPLOG] 批次 4/8 处理成功
[OPLOG] 批次 5/8 处理成功
[OPLOG] 批次 6/8 处理成功
[OPLOG] 批次 7/8 处理成功
[OPLOG] 批次 8/8 处理成功
[OPLOG] 迭代 2: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 5: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 6: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2698s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0319s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0208s
19.5s Found feasible solution with cost: 187.55
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0327s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 11 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0131s
[OPLOG] 已保存实际训练数据: 特征值长度=12, 标签长度=12, 改进=1000000.0000
21.8s Iteration 18: New best feasible solution found!
21.9s Objective: 4469.19, Gap: 0.00%, Time: 18.41s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0353s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0347s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0993s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1090s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0350s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2173s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0357s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0373s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0367s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0151s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0441s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 12 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 41 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1230s
[OPLOG] 已保存实际训练数据: 特征值长度=13, 标签长度=13, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0359s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0440s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1110s
[OPLOG] local_search_repair: 0.1537s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0359s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0035s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0375s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 26 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0795s
21.4s Found feasible solution with cost: 186.34
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0379s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0025s
[OPLOG] local_search_repair: 0.0525s
21.5s Found feasible solution with cost: 186.13
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0408s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0044s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0429s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0084s
24.0s Iteration 21: New best feasible solution found!
24.0s Objective: 3966.19, Gap: 0.00%, Time: 20.54s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0377s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 13 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3168s
[OPLOG] local_search_repair: 0.4235s
[OPLOG] 计算的实际特征: [85.0, 2.0933985330073352, 2.0, 52.54666666666667, 0.6038943395395231]
[OPLOG] 已保存实际训练数据: 特征值长度=14, 标签长度=14, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0452s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 14 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2150s
[OPLOG] 计算的实际特征: [44.0, 1.5, 2.0, -46.666666666666664, 0.7154570339090606]
[OPLOG] 已保存实际训练数据: 特征值长度=15, 标签长度=15, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0415s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0021s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1188s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 75 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 迭代 2: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 5: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 6: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2391s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0585s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0474s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0209s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0482s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2111s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0469s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 50 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1430s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0573s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0040s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0494s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2162s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0443s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0110s
[OPLOG] local_search_repair: 0.0285s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0573s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0458s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0545s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0565s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0472s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2687s
[OPLOG] local_search_repair: 0.3634s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0497s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3602s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0690s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 15 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0546s
[OPLOG] 计算的实际特征: [94.0, 2.3, 2.0, 43.5, 0.6176674589164638]
[OPLOG] 已保存实际训练数据: 特征值长度=16, 标签长度=16, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0578s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0785s
[OPLOG] local_search_repair: 0.0949s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0478s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4027s
[OPLOG] local_search_repair: 0.5073s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0533s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1167s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0560s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1297s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 16 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2189s
[OPLOG] 计算的实际特征: [60.0, 2.573469387755102, 2.0, -14.333333333333334, 0.7265087596134102]
[OPLOG] 已保存实际训练数据: 特征值长度=17, 标签长度=17, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0544s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0521s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 41 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1240s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0513s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2238s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0772s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1622s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0510s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3968s
[OPLOG] local_search_repair: 0.4681s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0560s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 17 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1810s
[OPLOG] local_search_repair: 0.2651s
[OPLOG] 计算的实际特征: [91.83333333333333, 2.079230769230769, 2.0, 68.0, 0.6081709672815181]
[OPLOG] 已保存实际训练数据: 特征值长度=18, 标签长度=18, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0464s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0010s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0439s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0402s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0529s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0480s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2766s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0504s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0100s
[OPLOG] local_search_repair: 0.0212s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0496s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0031s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0465s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0022s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0470s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 18 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0092s
[OPLOG] 已保存实际训练数据: 特征值长度=19, 标签长度=19, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0461s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0545s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0331s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1110s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0921s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0475s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0465s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0100s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0537s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 14 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0459s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0467s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2222s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0500s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0573s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0587s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0519s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0500s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0501s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0485s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 19 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] 已保存实际训练数据: 特征值长度=20, 标签长度=20, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0495s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0090s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0516s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3332s
[OPLOG] local_search_repair: 0.4993s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0485s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 56 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1709s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0511s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3330s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.1136s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2186s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0507s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0040s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0500s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2026s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0482s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 24 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0800s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0575s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1100s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0475s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0497s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3905s
[OPLOG] local_search_repair: 0.4596s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0461s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0480s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4263s
[OPLOG] local_search_repair: 0.5700s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0665s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 15 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0531s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0503s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3961s
[OPLOG] local_search_repair: 0.4658s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0530s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2412s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0565s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1945s
[OPLOG] local_search_repair: 0.3374s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0503s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0089s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0583s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 14 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0500s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0504s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6183s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.1261s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 40 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1183s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0644s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0523s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5831s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0619s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 20 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1098s
[OPLOG] local_search_repair: 0.2710s
[OPLOG] 已保存实际训练数据: 特征值长度=21, 标签长度=21, 改进=1000000.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0504s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 21 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 39 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1222s
[OPLOG] 已保存实际训练数据: 特征值长度=22, 标签长度=22, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0519s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0025s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0542s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 22 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 114 个未满足需求
[OPLOG] 批次 1/11 处理成功
[OPLOG] 批次 2/11 处理成功
[OPLOG] 批次 3/11 处理成功
[OPLOG] 批次 4/11 处理成功
[OPLOG] 批次 5/11 处理成功
[OPLOG] 批次 6/11 处理成功
[OPLOG] 批次 7/11 处理成功
[OPLOG] 批次 8/11 处理成功
[OPLOG] 批次 9/11 处理成功
[OPLOG] 批次 10/11 处理成功
[OPLOG] 批次 11/11 处理成功
[OPLOG] 迭代 2: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2766s
[OPLOG] 已保存实际训练数据: 特征值长度=23, 标签长度=23, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0543s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0090s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0610s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0530s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0045s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0526s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0160s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0489s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 23 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2534s
[OPLOG] 计算的实际特征: [82.5, 2.0828125, 2.0, 13.0, 0.7132333664753624]
[OPLOG] 已保存实际训练数据: 特征值长度=24, 标签长度=24, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0519s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0450s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0520s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 117 个未满足需求
[OPLOG] 批次 1/11 处理成功
[OPLOG] 批次 2/11 处理成功
[OPLOG] 批次 3/11 处理成功
[OPLOG] 批次 4/11 处理成功
[OPLOG] 批次 5/11 处理成功
[OPLOG] 批次 6/11 处理成功
[OPLOG] 批次 7/11 处理成功
[OPLOG] 批次 8/11 处理成功
[OPLOG] 批次 9/11 处理成功
[OPLOG] 批次 10/11 处理成功
[OPLOG] 批次 11/11 处理成功
[OPLOG] 迭代 2: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1855s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0532s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 24 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0020s
[OPLOG] 已保存实际训练数据: 特征值长度=25, 标签长度=25, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1174s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0534s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0114s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0526s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0960s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0508s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1566s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0550s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2156s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0494s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 无缓存模型，开始首次训练
[OPLOG] 自适应选择Ridge模型 (数据量: 25)
[Tracker] Cached ML model at iteration 41
[OPLOG] 模型训练完成, 已缓存到tracker
[OPLOG] 59 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4776s
[OPLOG] 计算的实际特征: [86.03333333333333, 2.0036966824644544, 2.0, 48.339393939393936, 0.5952924223285444]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=26, 标签长度=26, 改进=0.0000
[OPLOG] ML修复完成: 564次预测, 0次成功插入, 59个需求使用greedy修复
[OPLOG] learning_based_repair: 0.5946s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0517s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] local_search_repair: 0.0090s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0716s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 8 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0377s
43.4s Found feasible solution with cost: 184.22
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0565s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1806s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0549s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0155s
46.2s Iteration 43: New best feasible solution found!
46.2s Objective: 3910.48, Gap: 0.00%, Time: 42.77s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0546s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3416s
[OPLOG] local_search_repair: 0.4583s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0565s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1563s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0621s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 2 迭代
[OPLOG] 40 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3398s
[OPLOG] 计算的实际特征: [79.42105263157895, 2.3018963337547405, 2.0, 47.61764705882353, 0.6064232284786233]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=27, 标签长度=27, 改进=0.0000
[OPLOG] ML修复完成: 396次预测, 0次成功插入, 40个需求使用greedy修复
[OPLOG] learning_based_repair: 0.4108s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0573s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0225s
45.6s Found feasible solution with cost: 184.19
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0575s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 2 迭代
[OPLOG] 114 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5535s
[OPLOG] 计算的实际特征: [76.8641975308642, 2.107396664249457, 2.0, 60.023809523809526, 0.5754745069600402]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=28, 标签长度=28, 改进=0.0000
[OPLOG] ML修复完成: 1074次预测, 0次成功插入, 114个需求使用greedy修复
[OPLOG] learning_based_repair: 0.7069s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0651s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 2 迭代
[OPLOG] 13 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1231s
[OPLOG] 计算的实际特征: [81.4, 2.732275132275132, 2.0, 42.6, 0.6066286131518408]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=29, 标签长度=29, 改进=0.0000
[OPLOG] ML修复完成: 132次预测, 0次成功插入, 13个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1585s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0649s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3379s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0564s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2909s
[OPLOG] local_search_repair: 0.3658s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0591s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 2 迭代
[OPLOG] 38 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3208s
[OPLOG] 计算的实际特征: [91.25, 2.076290322580645, 2.0, 43.6, 0.6071939884554995]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=30, 标签长度=30, 改进=0.0000
[OPLOG] ML修复完成: 366次预测, 0次成功插入, 38个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3872s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0577s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0040s
[OPLOG] local_search_repair: 0.0108s
50.6s Iteration 44: New best feasible solution found!
50.6s Objective: 3873.48, Gap: 0.00%, Time: 47.14s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0600s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 3 迭代
[OPLOG] 2 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0190s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=31, 标签长度=31, 改进=1000000.0000
[OPLOG] ML修复完成: 24次预测, 0次成功插入, 2个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0401s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0604s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] local_search_repair: 0.0222s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0638s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0649s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 4 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0094s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=32, 标签长度=32, 改进=1000000.0000
[OPLOG] ML修复完成: 12次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0294s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0622s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1570s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0630s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 5 迭代
[OPLOG] 15 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1396s
[OPLOG] 计算的实际特征: [113.66666666666667, 2.083098591549296, 2.0, 42.44444444444444, 0.6033531108398714]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=33, 标签长度=33, 改进=0.0000
[OPLOG] ML修复完成: 132次预测, 0次成功插入, 15个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1746s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0657s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 24 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0757s
49.8s Found feasible solution with cost: 180.25
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0636s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 37 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1076s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0642s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2273s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1349s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0328s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0664s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 5 迭代
[OPLOG] 41 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3452s
[OPLOG] 计算的实际特征: [88.52941176470588, 2.135018963337547, 2.0, 44.677083333333336, 0.600004423891554]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=34, 标签长度=34, 改进=0.0000
[OPLOG] ML修复完成: 396次预测, 0次成功插入, 41个需求使用greedy修复
[OPLOG] learning_based_repair: 0.4153s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0645s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1908s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0626s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0025s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0772s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3990s
[OPLOG] local_search_repair: 0.4712s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0583s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6223s
[OPLOG] local_search_repair: 0.7650s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0671s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0040s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0762s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3415s
[OPLOG] local_search_repair: 0.4122s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0663s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0869s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.3195s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0794s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 5 迭代
[OPLOG] 72 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5712s
[OPLOG] 计算的实际特征: [88.31818181818181, 2.006073992269464, 2.0, 51.44444444444444, 0.5977011987585522]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=35, 标签长度=35, 改进=0.0000
[OPLOG] ML修复完成: 714次预测, 0次成功插入, 72个需求使用greedy修复
[OPLOG] learning_based_repair: 0.6830s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0654s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0100s
57.5s Iteration 47: New best feasible solution found!
57.5s Objective: 3669.78, Gap: 0.00%, Time: 54.03s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0613s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1427s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0637s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0043s
[OPLOG] local_search_repair: 0.0339s
55.8s Found feasible solution with cost: 180.16
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0636s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0042s
[OPLOG] local_search_repair: 0.0102s
58.5s Iteration 48: New best feasible solution found!
58.5s Objective: 3633.08, Gap: 0.00%, Time: 55.08s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0640s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0936s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0729s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1826s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0671s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0035s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0655s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3452s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0649s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0405s
[OPLOG] local_search_repair: 0.0529s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0690s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0031s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0696s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4482s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.1617s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 8 迭代
[OPLOG] 22 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1811s
[OPLOG] 计算的实际特征: [88.375, 2.4990654205607474, 2.0, 50.17777777777778, 0.6298914605256485]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=36, 标签长度=36, 改进=0.0000
[OPLOG] ML修复完成: 210次预测, 0次成功插入, 22个需求使用greedy修复
[OPLOG] learning_based_repair: 0.2268s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0682s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 37 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1157s
58.9s Found feasible solution with cost: 180.16
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0630s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5504s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0777s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0024s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0680s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] local_search_repair: 0.0492s
59.9s Found feasible solution with cost: 180.01
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0843s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 12 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0431s
60.1s Found feasible solution with cost: 179.89
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0631s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0385s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0669s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0033s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0652s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 8 迭代
[OPLOG] 61 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4934s
[OPLOG] 计算的实际特征: [82.3, 2.0964221824686944, 2.0, 52.187134502923975, 0.6194480594423979]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=37, 标签长度=37, 改进=0.0000
[OPLOG] ML修复完成: 588次预测, 0次成功插入, 61个需求使用greedy修复
[OPLOG] learning_based_repair: 0.5870s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0605s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0331s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0766s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2111s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0631s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0757s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0633s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3547s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1422s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 8 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0107s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=38, 标签长度=38, 改进=0.0000
[OPLOG] ML修复完成: 12次预测, 0次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0286s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0691s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 8 迭代
[OPLOG] 无未满足需求, 直接返回当前解
65.0s Iteration 50: New best feasible solution found!
65.0s Objective: 3304.68, Gap: 0.00%, Time: 61.55s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0736s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 9 迭代
[OPLOG] 18 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1845s
[OPLOG] 计算的实际特征: [102.625, 2.095945945945946, 2.0, 52.55555555555556, 0.6068594371949743]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=39, 标签长度=39, 改进=0.0000
[OPLOG] ML修复完成: 162次预测, 0次成功插入, 18个需求使用greedy修复
[OPLOG] learning_based_repair: 0.2224s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0653s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 20 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0612s
63.4s Found feasible solution with cost: 179.83
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.1514s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 9 迭代
[OPLOG] 40 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3158s
[OPLOG] 计算的实际特征: [83.83333333333333, 2.507065217391304, 2.0, 51.657407407407405, 0.6264521298968012]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=40, 标签长度=40, 改进=0.0000
[OPLOG] ML修复完成: 396次预测, 0次成功插入, 40个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3860s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0699s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0674s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0645s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0010s
67.1s Iteration 51: New best feasible solution found!
67.1s Objective: 3230.68, Gap: 0.00%, Time: 63.66s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0621s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1762s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0642s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2930s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0705s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1007s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0689s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1858s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0657s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0034s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0742s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 11 迭代
[OPLOG] 18 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1897s
[OPLOG] 计算的实际特征: [101.125, 2.117887931034483, 2.0, 55.62222222222222, 0.6052721707699382]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=41, 标签长度=41, 改进=0.0000
[OPLOG] ML修复完成: 162次预测, 0次成功插入, 18个需求使用greedy修复
[OPLOG] learning_based_repair: 0.2294s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0670s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0011s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0682s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3225s
[OPLOG] local_search_repair: 0.3951s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0635s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0015s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0635s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1834s
[OPLOG] local_search_repair: 0.2295s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0640s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1970s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2045s
[OPLOG] local_search_repair: 0.2496s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0626s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3527s
[OPLOG] local_search_repair: 0.4486s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0735s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1126s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0645s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0940s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0653s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0110s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0720s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1913s
[OPLOG] local_search_repair: 0.2368s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0728s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0691s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0687s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1055s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0708s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0060s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0693s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0665s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 15 迭代
[OPLOG] 18 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1596s
[OPLOG] 计算的实际特征: [95.8, 2.4619469026548675, 2.0, 45.1, 0.6211676969368797]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=42, 标签长度=42, 改进=0.0000
[OPLOG] ML修复完成: 156次预测, 0次成功插入, 18个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1967s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0651s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 117 个未满足需求
[OPLOG] 批次 1/11 处理成功
[OPLOG] 批次 2/11 处理成功
[OPLOG] 批次 3/11 处理成功
[OPLOG] 批次 4/11 处理成功
[OPLOG] 批次 5/11 处理成功
[OPLOG] 批次 6/11 处理成功
[OPLOG] 批次 7/11 处理成功
[OPLOG] 批次 8/11 处理成功
[OPLOG] 批次 9/11 处理成功
[OPLOG] 批次 10/11 处理成功
[OPLOG] 批次 11/11 处理成功
[OPLOG] 迭代 2: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1925s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1687s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 109 个未满足需求
[OPLOG] 批次 1/10 处理成功
[OPLOG] 批次 2/10 处理成功
[OPLOG] 批次 3/10 处理成功
[OPLOG] 批次 4/10 处理成功
[OPLOG] 批次 5/10 处理成功
[OPLOG] 批次 6/10 处理成功
[OPLOG] 批次 7/10 处理成功
[OPLOG] 批次 8/10 处理成功
[OPLOG] 批次 9/10 处理成功
[OPLOG] 批次 10/10 处理成功
[OPLOG] 迭代 2: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 5: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 6: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 7: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 8: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 9: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 10: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 1 个需求
[OPLOG] Smart Batch Repair 完成: 0.2629s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0705s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0850s
[OPLOG] local_search_repair: 0.1177s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0630s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0677s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0728s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0687s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0020s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0629s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0020s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0644s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3540s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0722s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 18 迭代
[OPLOG] 9 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0759s
[OPLOG] 计算的实际特征: [97.0, 2.0, 2.0, 46.833333333333336, 0.6304594312613419]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=43, 标签长度=43, 改进=0.0000
[OPLOG] ML修复完成: 78次预测, 0次成功插入, 9个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1029s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0667s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3732s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0647s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0045s
[OPLOG] local_search_repair: 0.0210s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0759s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 117 需求, 超时: 11.700000000000001s, 批次大小: 11
[OPLOG] 迭代 1: 剩余 16 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0572s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.1464s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0653s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 19 迭代
[OPLOG] 42 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4022s
[OPLOG] 计算的实际特征: [81.64, 1.9906220984215415, 2.0, 53.08695652173913, 0.6093478425294562]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=44, 标签长度=44, 改进=0.0000
[OPLOG] ML修复完成: 390次预测, 0次成功插入, 42个需求使用greedy修复
[OPLOG] learning_based_repair: 0.4702s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0740s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0205s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0717s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0446s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0814s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1916s
[OPLOG] local_search_repair: 0.2365s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0725s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1086s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0710s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3239s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0720s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0040s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0858s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 21 迭代
[OPLOG] 9 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0788s
[OPLOG] 计算的实际特征: [97.0, 2.0, 2.0, 46.833333333333336, 0.6305353817550695]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=45, 标签长度=45, 改进=0.0000
[OPLOG] ML修复完成: 84次预测, 0次成功插入, 9个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1074s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0739s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0307s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0703s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3410s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1814s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4735s
[OPLOG] local_search_repair: 0.5606s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0834s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 21 迭代
[OPLOG] 117 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4491s
[OPLOG] 计算的实际特征: [75.04347826086956, 2.13576627975605, 2.0, 61.74025974025974, 0.559371636578206]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=46, 标签长度=46, 改进=0.0000
[OPLOG] ML修复完成: 1098次预测, 0次成功插入, 117个需求使用greedy修复
[OPLOG] learning_based_repair: 0.6268s
[STOP] MaxIterations 触发停止条件 (运行时间: 76.65s)
78.0s Step 8耗时: 76.66s
78.0s 优化总耗时: 78.02s
78.0s Step 9: 处理结果...
78.0s Total iterations tracked: 62
78.0s Best objective found: 3230.6798
78.0s Final Gap: 3.32%
78.0s ALNS Final Gap: 3.32%
78.0s Best Heuristic Solution Objective: 3230.68
78.0s Vehicles Used in Best Solution: 178
78.0s Best Solution Cost: 179.83
78.1s ✓ 所有车辆的装载体积都满足容量约束
78.1s Step 9耗时: 0.08s
78.1s Step 10: 生成报告和图表...
79.3s Step 10耗时: 1.22s
***************************************************************************
                      优化完成! 2025-09-22 20:15:40.771155
***************************************************************************
====================================================================================================
***************************************************************************
                     The Vehicle Loading Plan is Done!
***************************************************************************
(base) PS D:\Gurobi_code\Problem2\ALNSCode> python check_solution.py
INFO:__main__:加载输入数据...
INFO:DataALNS:配置参数加载成功
INFO:DataALNS:成功加载 订单需求信息: 117 行数据
INFO:DataALNS:成功加载 生产基地库存容量上限: 3 行数据
INFO:DataALNS:成功加载 SKU体积信息: 36 行数据
INFO:DataALNS:成功加载 车辆类型信息: 2 行数据
INFO:DataALNS:成功加载 生产基地生产计划: 101 行数据
INFO:DataALNS:成功加载 生产基地期初库存: 36 行数据
INFO:DataALNS:数据完整性验证通过
INFO:DataALNS:数据加载和处理完成
INFO:__main__:加载输出数据...
INFO:OutputDataALNS:开始加载数据集: dataset_14
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_14\opt_result.csv, 形状: (178, 7)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_14\opt_details.csv, 形状: (178, 11)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_14\opt_summary.csv, 形状: (178, 9)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_14\non_fulfill.csv, 形状: (0, 3)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_14\sku_inv_left.csv, 形状: (324, 4)
INFO:OutputDataALNS:字典索引生成完成
INFO:OutputDataALNS:数据验证通过
INFO:OutputDataALNS:数据加载完成

数据统计:
输入数据 - 工厂: 3, 经销商: 6, SKU: 36
输出数据统计: {'total_deliveries': 149, 'total_vehicles_used': 178, 'unfulfilled_demands': 0, 'inventory_records': 324, 'total_quantity_shipped': 9178, 'unique_vehicles': 178}
INFO:__main__:开始解决方案验证...
INFO:__main__:检查订单满足情况...
INFO:__main__:检查生产基地库存上限约束...
INFO:__main__:检查车辆容量约束...
INFO:__main__:车辆 176 (类型: 15.2) 在第 1 天未达到最小起运量: 最小起运量 86, 实际装载 22.0
INFO:__main__:车辆 85 (类型: 15.2) 在第 1 天未达到最小起运量: 最小起运量 86, 实际装载 2.9
INFO:__main__:车辆 86 (类型: 16.1) 在第 1 天未达到最小起运量: 最小起运量 123, 实际装载 43.7
INFO:__main__:车辆 158 (类型: 15.2) 在第 1 天未达到最小起运量: 最小起运量 86, 实际装载 20.0
INFO:__main__:车辆 157 (类型: 15.2) 在第 1 天未达到最小起运量: 最小起运量 86, 实际装载 15.4
INFO:__main__:车辆 4 (类型: 16.1) 在第 1 天未达到最小起运量: 最小起运量 123, 实际装载 70.0
INFO:__main__:车辆 173 (类型: 15.2) 在第 1 天未达到最小起运量: 最小起运量 86, 实际装载 69.0
INFO:__main__:车辆 178 (类型: 15.2) 在第 1 天未达到最小起运量: 最小起运量 86, 实际装载 3.0
INFO:__main__:车辆 5 (类型: 16.1) 在第 1 天未达到最小起运量: 最小起运量 123, 实际装载 42.9
INFO:__main__:车辆 8 (类型: 16.1) 在第 1 天未达到最小起运量: 最小起运量 123, 实际装载 53.2
INFO:__main__:车辆 67 (类型: 16.1) 在第 1 天未达到最小起运量: 最小起运量 123, 实际装载 45.900000000000006
INFO:__main__:车辆 155 (类型: 15.2) 在第 1 天未达到最小起运量: 最小起运量 86, 实际装载 61.6
INFO:__main__:车辆 145 (类型: 15.2) 在第 1 天未达到最小起运量: 最小起运量 86, 实际装载 25.5
INFO:__main__:车辆 167 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 66.0
INFO:__main__:车辆 62 (类型: 16.1) 在第 2 天未达到最小起运量: 最小起运量 123, 实际装载 44.0
INFO:__main__:车辆 59 (类型: 16.1) 在第 2 天未达到最小起运量: 最小起运量 123, 实际装载 58.8
INFO:__main__:车辆 174 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 70.0
INFO:__main__:车辆 83 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 31.200000000000003
INFO:__main__:车辆 139 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 77.5
INFO:__main__:车辆 146 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 29.9
INFO:__main__:车辆 148 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 2.0
INFO:__main__:车辆 172 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 77.5
INFO:__main__:车辆 55 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 16.799999999999997
INFO:__main__:车辆 6 (类型: 16.1) 在第 2 天未达到最小起运量: 最小起运量 123, 实际装载 52.0
INFO:__main__:车辆 21 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 25.2
INFO:__main__:车辆 76 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 60.8
INFO:__main__:车辆 140 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 43.4
INFO:__main__:车辆 156 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 75.0
INFO:__main__:车辆 94 (类型: 16.1) 在第 2 天未达到最小起运量: 最小起运量 123, 实际装载 74.80000000000001
INFO:__main__:车辆 100 (类型: 16.1) 在第 2 天未达到最小起运量: 最小起运量 123, 实际装载 42.0
INFO:__main__:车辆 104 (类型: 16.1) 在第 2 天未达到最小起运量: 最小起运量 123, 实际装载 17.4
INFO:__main__:车辆 105 (类型: 16.1) 在第 2 天未达到最小起运量: 最小起运量 123, 实际装载 2.8
INFO:__main__:车辆 108 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 69.3
INFO:__main__:车辆 135 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 81.7
INFO:__main__:车辆 142 (类型: 15.2) 在第 2 天未达到最小起运量: 最小起运量 86, 实际装载 30.0
INFO:__main__:车辆 125 (类型: 16.1) 在第 3 天未达到最小起运量: 最小起运量 123, 实际装载 39.1
INFO:__main__:车辆 161 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 80.30000000000001
INFO:__main__:车辆 60 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 57.2
INFO:__main__:车辆 70 (类型: 16.1) 在第 3 天未达到最小起运量: 最小起运量 123, 实际装载 78.19999999999999
INFO:__main__:车辆 117 (类型: 16.1) 在第 3 天未达到最小起运量: 最小起运量 123, 实际装载 19.0
INFO:__main__:车辆 147 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 16.5
INFO:__main__:车辆 3 (类型: 16.1) 在第 3 天未达到最小起运量: 最小起运量 123, 实际装载 65.0
INFO:__main__:车辆 12 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 48.0
INFO:__main__:车辆 13 (类型: 16.1) 在第 3 天未达到最小起运量: 最小起运量 123, 实际装载 53.2
INFO:__main__:车辆 134 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 66.0
INFO:__main__:车辆 25 (类型: 16.1) 在第 3 天未达到最小起运量: 最小起运量 123, 实际装载 7.5
INFO:__main__:车辆 143 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 72.5
INFO:__main__:车辆 149 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 25.2
INFO:__main__:车辆 177 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 15.0
INFO:__main__:车辆 32 (类型: 16.1) 在第 3 天未达到最小起运量: 最小起运量 123, 实际装载 22.1
INFO:__main__:车辆 77 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 29.4
INFO:__main__:车辆 175 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 53.2
INFO:__main__:车辆 37 (类型: 16.1) 在第 3 天未达到最小起运量: 最小起运量 123, 实际装载 64.39999999999999
INFO:__main__:车辆 68 (类型: 16.1) 在第 3 天未达到最小起运量: 最小起运量 123, 实际装载 22.1
INFO:__main__:车辆 150 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 11.6
INFO:__main__:车辆 144 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 53.2
INFO:__main__:车辆 46 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 44.2
INFO:__main__:车辆 75 (类型: 15.2) 在第 3 天未达到最小起运量: 最小起运量 86, 实际装载 68.39999999999999
INFO:__main__:检查库存流转约束...

============================================================
解决方案验证结果摘要
============================================================
需求满足约束: ✅ 通过

生产基地库存上限约束: ✅ 通过

车辆容量约束: ✅ 通过

库存流转约束: ✅ 通过

总违反数量: 0
解决方案状态: 可行
============================================================
(base) PS D:\Gurobi_code\Problem2\ALNSCode>
