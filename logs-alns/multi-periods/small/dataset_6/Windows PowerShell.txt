(base) PS D:\Gurobi_code\Problem2\ALNSCode> python main.py
0.0s 开始优化流程! / 2025-09-22 17:55:22.660009
0.0s Step 1: 加载数据...
0.0s Loading Data...
0.0s Data loading elapsed time: 0.03s
0.0s Step 1耗时: 0.04s
0.0s Step 2: 创建初始解...
0.0s Initializing the solution...
0.1s Initial Solution Objective: 1855.87
0.1s Vehicles Used in Initial Solution: 99
0.1s Initial Solution Cost: 171.27
0.1s Step 2耗时: 0.09s
0.1s Step 3: 设置ALNS算法...
0.1s 注册destroy算子...
0.1s 所有destroy算子注册完成
0.1s 注册repair算子...
0.1s 所有repair算子注册完成
0.1s Step 3耗时: 0.01s
0.1s Step 4: 配置算子选择机制...
0.1s Step 4耗时: 0.00s
0.1s Step 5: 配置接受准则...
0.1s Step 5耗时: 0.00s
0.1s Step 6: 配置停止准则...
0.1s 组合停止准则配置: 最大300次迭代 或 最大900秒运行时间
0.1s Step 6耗时: 0.00s
0.1s Step 7: 设置追踪器和回调函数...
0.1s Step 7耗时: 0.00s
0.1s Step 8: 运行ALNS算法...
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0036s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0107s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0055s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
1.5s Iteration 1: New best feasible solution found!
1.5s Objective: 1855.87, Gap: 0.00%, Time: 0.04s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0010s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0118s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0070s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0339s
0.3s Found feasible solution with cost: 153.43
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0055s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 正在构建特征和标签数据 ...
[OPLOG] tracker中无数据, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 27 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0165s
构建训练数据: 特征长度 1, 标签长度 1, 目标函数改进 1000000.0000
1.7s Iteration 2: New best feasible solution found!
1.7s Objective: 919.25, Gap: 0.00%, Time: 0.17s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.1086s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0045s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0306s
[OPLOG] local_search_repair: 0.0356s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0054s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0052s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0066s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0244s
[OPLOG] local_search_repair: 0.0296s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0081s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0089s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0054s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0101s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0101s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0672s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0114s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 1 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0103s
[OPLOG] local_search_repair: 0.0181s
[OPLOG] 已保存实际训练数据: 特征值长度=2, 标签长度=2, 改进=1000000.0000
0.7s Found feasible solution with cost: 152.70
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0136s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0102s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0129s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0107s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0463s
[OPLOG] local_search_repair: 0.0516s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0152s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 2 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0080s
[OPLOG] local_search_repair: 0.0094s
[OPLOG] 计算的实际特征: [65.66666666666667, 1.5252873563218392, 2.0, 31.25, 0.7740948216021104]
[OPLOG] 已保存实际训练数据: 特征值长度=3, 标签长度=3, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0050s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0255s
[OPLOG] local_search_repair: 0.0306s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0137s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0076s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0128s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 3 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0426s
[OPLOG] 计算的实际特征: [83.0, 1.6, 2.0, 16.0, 0.7935984092885275]
[OPLOG] 已保存实际训练数据: 特征值长度=4, 标签长度=4, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0159s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0103s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0105s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 4 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0052s
[OPLOG] 已保存实际训练数据: 特征值长度=5, 标签长度=5, 改进=1000000.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0071s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 5 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0318s
[OPLOG] 计算的实际特征: [84.38461538461539, 1.852238805970149, 2.0, 58.51111111111111, 0.7837860106163678]
[OPLOG] 已保存实际训练数据: 特征值长度=6, 标签长度=6, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0103s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0470s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0050s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 6 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 已保存实际训练数据: 特征值长度=7, 标签长度=7, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0054s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0105s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0117s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0043s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0102s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0365s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0109s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0051s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0104s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0101s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0416s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0153s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 19 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0106s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0108s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0102s
[OPLOG] local_search_repair: 0.0305s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0102s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0091s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0106s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0146s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0068s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0407s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0152s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 7 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0030s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0105s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0104s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0151s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0153s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0040s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0102s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0244s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0158s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 7 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0312s
[OPLOG] local_search_repair: 0.0364s
[OPLOG] 计算的实际特征: [73.91666666666667, 2.0831715210355988, 2.0, 56.357142857142854, 0.7683776844070961]
[OPLOG] 已保存实际训练数据: 特征值长度=8, 标签长度=8, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0156s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0272s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0140s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0066s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0155s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0155s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0110s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0314s
[OPLOG] local_search_repair: 0.0420s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0106s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0054s
[OPLOG] local_search_repair: 0.0260s
2.0s Found feasible solution with cost: 149.52
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0158s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0106s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0104s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0155s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0264s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0210s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
3.5s Iteration 11: New best feasible solution found!
3.5s Objective: 628.55, Gap: 0.00%, Time: 2.05s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0667s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0163s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0151s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0263s
[OPLOG] local_search_repair: 0.0365s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0109s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 24 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0157s
2.4s Found feasible solution with cost: 147.42
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0157s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0105s
3.8s Iteration 13: New best feasible solution found!
3.8s Objective: 605.05, Gap: 0.00%, Time: 2.32s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0204s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0210s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0153s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0115s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0256s
[OPLOG] local_search_repair: 0.0362s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0153s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0264s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0209s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0051s
[OPLOG] local_search_repair: 0.0156s
2.7s Found feasible solution with cost: 147.33
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0153s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0106s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0161s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0067s
4.1s Iteration 14: New best feasible solution found!
4.1s Objective: 467.35, Gap: 0.00%, Time: 2.66s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0214s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0157s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0309s
[OPLOG] local_search_repair: 0.0323s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0205s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 8 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0421s
[OPLOG] 计算的实际特征: [38.0, 2.2, 2.0, 64.33333333333333, 0.8096569700141129]
[OPLOG] 已保存实际训练数据: 特征值长度=9, 标签长度=9, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0207s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0025s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0209s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0052s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0203s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0817s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 9 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 计算的实际特征: [109.0, 1.8, 2.0, 82.16666666666667, 0.7987416134838815]
[OPLOG] 已保存实际训练数据: 特征值长度=10, 标签长度=10, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0218s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0052s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0168s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0211s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 23 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0160s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0156s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0333s
[OPLOG] local_search_repair: 0.0421s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0223s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0156s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0235s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0207s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 10 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0055s
[OPLOG] 已保存实际训练数据: 特征值长度=11, 标签长度=11, 改进=1000000.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0205s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 11 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0294s
[OPLOG] 计算的实际特征: [64.66666666666667, 1.888529411764706, 2.0, 80.5, 0.8031233895073181]
[OPLOG] 已保存实际训练数据: 特征值长度=12, 标签长度=12, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0208s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0197s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0050s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0194s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 12 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0208s
[OPLOG] 计算的实际特征: [86.25, 1.7773584905660378, 2.0, 84.26666666666667, 0.768194503495843]
[OPLOG] 已保存实际训练数据: 特征值长度=13, 标签长度=13, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0260s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0208s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0269s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0093s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0182s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0275s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0209s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0314s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0207s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0246s
[OPLOG] local_search_repair: 0.0305s
3.9s Found feasible solution with cost: 145.16
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0196s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
5.4s Iteration 21: New best feasible solution found!
5.4s Objective: 362.95, Gap: 0.00%, Time: 3.91s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0239s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0155s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0259s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0210s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0055s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0247s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0394s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0264s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0051s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0251s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0518s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0208s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0407s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0251s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0470s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0218s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0026s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0255s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 22 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0157s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0181s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0209s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 7 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0053s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0206s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0206s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0173s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0172s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0830s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 13 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0054s
[OPLOG] 已保存实际训练数据: 特征值长度=14, 标签长度=14, 改进=1000000.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0154s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0498s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0188s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0022s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0213s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0262s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0155s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0054s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0196s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0231s
[OPLOG] local_search_repair: 0.0388s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0206s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0208s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0204s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0255s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0194s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0295s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0202s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 14 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0037s
[OPLOG] 已保存实际训练数据: 特征值长度=15, 标签长度=15, 改进=1000000.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0209s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0051s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0203s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0051s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0208s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0157s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0053s
[OPLOG] local_search_repair: 0.0155s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0229s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 19 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0122s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0238s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0221s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0208s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0360s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0206s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 15 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0015s
[OPLOG] 已保存实际训练数据: 特征值长度=16, 标签长度=16, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0206s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0210s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 16 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0105s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0841s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 8 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0101s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0259s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0259s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0218s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0157s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0304s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0105s
6.0s Found feasible solution with cost: 160.31
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0258s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0052s
[OPLOG] local_search_repair: 0.0083s
7.5s Iteration 35: New best feasible solution found!
7.5s Objective: 333.86, Gap: 0.00%, Time: 5.97s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0261s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0158s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0309s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0106s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0312s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0260s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0290s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0263s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0331s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0984s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0308s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0010s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0275s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0081s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0259s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0041s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0257s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0464s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0307s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0010s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0258s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0312s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0305s
[OPLOG] local_search_repair: 0.0460s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0260s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 16 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 已保存实际训练数据: 特征值长度=17, 标签长度=17, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0313s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0289s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 31 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0196s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0304s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 37 个未满足需求
[OPLOG] 批次 1/8 处理成功
[OPLOG] 批次 2/8 处理成功
[OPLOG] 批次 3/8 处理成功
[OPLOG] 批次 4/8 处理成功
[OPLOG] 批次 5/8 处理成功
[OPLOG] 批次 6/8 处理成功
[OPLOG] 批次 7/8 处理成功
[OPLOG] 批次 8/8 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0153s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0256s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0061s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0932s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0255s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0051s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0305s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0358s
[OPLOG] local_search_repair: 0.0529s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0259s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0030s
[OPLOG] local_search_repair: 0.0106s
7.4s Found feasible solution with cost: 146.82
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0310s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 44 个未满足需求
[OPLOG] 批次 1/9 处理成功
[OPLOG] 批次 2/9 处理成功
[OPLOG] 批次 3/9 处理成功
[OPLOG] 批次 4/9 处理成功
[OPLOG] 批次 5/9 处理成功
[OPLOG] 批次 6/9 处理成功
[OPLOG] 批次 7/9 处理成功
[OPLOG] 批次 8/9 处理成功
[OPLOG] 批次 9/9 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0204s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0153s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0250s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0205s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0207s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0103s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0205s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0023s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0149s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0117s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0183s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0217s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0161s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] local_search_repair: 0.0206s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0156s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0053s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0154s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0258s
[OPLOG] local_search_repair: 0.0311s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0205s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0053s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0210s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0383s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0181s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0158s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0207s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0203s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0259s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0054s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0210s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0464s
[OPLOG] local_search_repair: 0.0579s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0873s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0055s
[OPLOG] local_search_repair: 0.0152s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0222s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0217s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0034s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0229s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0509s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0158s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 17 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0485s
[OPLOG] 计算的实际特征: [95.5, 2.2, 2.0, 177.66666666666666, 0.8114040682062299]
[OPLOG] 已保存实际训练数据: 特征值长度=18, 标签长度=18, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0212s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0183s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0031s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0208s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0033s
[OPLOG] local_search_repair: 0.0051s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0185s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0206s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 20 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0113s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0201s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0155s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0183s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0021s
[OPLOG] local_search_repair: 0.0021s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0211s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 18 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0102s
[OPLOG] 已保存实际训练数据: 特征值长度=19, 标签长度=19, 改进=1000000.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0184s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0061s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0156s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 19 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0364s
[OPLOG] 已保存实际训练数据: 特征值长度=20, 标签长度=20, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0156s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 20 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 21 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0129s
[OPLOG] 已保存实际训练数据: 特征值长度=21, 标签长度=21, 改进=1000000.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0269s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 9 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0065s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0201s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0256s
[OPLOG] local_search_repair: 0.0409s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0208s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0131s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0224s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 21 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0474s
[OPLOG] 已保存实际训练数据: 特征值长度=22, 标签长度=22, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0974s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 8 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0258s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0255s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0011s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0256s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 19 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0106s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0303s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0054s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0228s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0101s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0266s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 22 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0142s
[OPLOG] 计算的实际特征: [82.0, 1.8, 2.0, 87.0, 0.7765432492441423]
[OPLOG] 已保存实际训练数据: 特征值长度=23, 标签长度=23, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0204s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 16 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0163s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0273s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0193s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0245s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 23 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0563s
[OPLOG] 计算的实际特征: [68.5, 2.0920863309352513, 2.0, 124.75, 0.8569443436633913]
[OPLOG] 已保存实际训练数据: 特征值长度=24, 标签长度=24, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0208s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0212s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0051s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0204s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0067s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0317s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 24 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0254s
[OPLOG] 已保存实际训练数据: 特征值长度=25, 标签长度=25, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0207s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0273s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0307s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0087s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0261s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0257s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 无缓存模型，开始首次训练
[OPLOG] 自适应选择Ridge模型 (数据量: 25)
[Tracker] Cached ML model at iteration 63
[OPLOG] 模型训练完成, 已缓存到tracker
[OPLOG] 8 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=34, 标签长度=34, 改进=0.0000
[OPLOG] ML修复完成: 90次预测, 8次成功插入, 8个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0452s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0821s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0264s
[OPLOG] local_search_repair: 0.0422s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0190s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 0 迭代
[OPLOG] 13 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0051s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=48, 标签长度=48, 改进=0.0000
[OPLOG] ML修复完成: 135次预测, 13次成功插入, 13个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0586s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0247s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0206s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0012s
[OPLOG] local_search_repair: 0.0156s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0206s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0207s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0203s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0028s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0255s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0216s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0213s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0074s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0315s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 18 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0148s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0297s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 7 迭代
[OPLOG] 7 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0025s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=56, 标签长度=56, 改进=0.0000
[OPLOG] ML修复完成: 63次预测, 7次成功插入, 7个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0317s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0218s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0210s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0244s
[OPLOG] local_search_repair: 0.0363s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0239s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0197s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0210s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0052s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0208s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0478s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0265s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0050s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0212s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0881s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0222s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0204s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0577s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0210s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0054s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0255s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] local_search_repair: 0.0152s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0258s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0258s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 12 迭代
[OPLOG] 42 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=99, 标签长度=99, 改进=0.0000
[OPLOG] ML修复完成: 459次预测, 42次成功插入, 42个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1897s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0287s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0137s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0297s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0104s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0327s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0140s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0206s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0204s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0288s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0162s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 14 迭代
[OPLOG] 18 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0020s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=118, 标签长度=118, 改进=0.0000
[OPLOG] ML修复完成: 180次预测, 18次成功插入, 18个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0926s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0211s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0069s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0190s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0589s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0233s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0280s
[OPLOG] local_search_repair: 0.0520s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0172s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0361s
[OPLOG] local_search_repair: 0.0562s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0208s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0319s
[OPLOG] local_search_repair: 0.0530s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0225s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0188s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0914s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0167s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0108s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0227s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0094s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0230s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0308s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0166s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0300s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0245s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0574s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0317s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0657s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0195s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0054s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0346s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0339s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0076s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0265s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0635s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0155s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 18 迭代
[OPLOG] 27 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0028s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=146, 标签长度=146, 改进=0.0000
[OPLOG] ML修复完成: 297次预测, 27次成功插入, 27个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1374s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0226s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0062s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0207s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0433s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0232s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0074s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0193s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0354s
[OPLOG] local_search_repair: 0.0596s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0244s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0107s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0254s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 20 迭代
[OPLOG] 19 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=166, 标签长度=166, 改进=0.0000
[OPLOG] ML修复完成: 207次预测, 19次成功插入, 19个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1087s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0243s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0060s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0277s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0284s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0308s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 15 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0104s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0226s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0887s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0074s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0191s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0281s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0188s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0013s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0154s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0160s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 23 迭代
[OPLOG] 1 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=168, 标签长度=168, 改进=0.0000
[OPLOG] ML修复完成: 18次预测, 1次成功插入, 1个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0127s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0224s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0743s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0287s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0030s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0276s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0138s
[OPLOG] local_search_repair: 0.0409s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0249s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0266s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0289s
[OPLOG] local_search_repair: 0.0585s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0331s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 25 迭代
[OPLOG] 20 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0015s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=189, 标签长度=189, 改进=0.0000
[OPLOG] ML修复完成: 207次预测, 20次成功插入, 20个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0914s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0245s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 7 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0050s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0143s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0392s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0170s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0226s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0195s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0239s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0000s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0182s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 27 迭代
[OPLOG] 23 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=213, 标签长度=213, 改进=0.0000
[OPLOG] ML修复完成: 225次预测, 23次成功插入, 23个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1270s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0226s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 48 需求, 超时: 10.0s, 批次大小: 5
[OPLOG] 迭代 1: 剩余 15 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0087s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0210s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0433s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0287s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 28 迭代
[OPLOG] 6 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0013s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=220, 标签长度=220, 改进=0.0000
[OPLOG] ML修复完成: 72次预测, 6次成功插入, 6个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0462s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0312s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0018s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0302s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0121s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0989s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0258s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0227s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0390s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0207s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0312s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0000s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0295s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0041s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0361s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0035s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0297s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 33 迭代
[OPLOG] 16 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0000s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=237, 标签长度=237, 改进=0.0000
[OPLOG] ML修复完成: 162次预测, 16次成功插入, 16个需求使用greedy修复
[OPLOG] learning_based_repair: 0.0893s
[STOP] MaxIterations 触发停止条件 (运行时间: 15.66s)
15.8s Step 8耗时: 15.67s
15.8s 优化总耗时: 15.81s
15.8s Step 9: 处理结果...
15.8s Total iterations tracked: 96
15.8s Best objective found: 333.8603
15.8s Final Gap: 65.67%
15.8s ALNS Final Gap: 66.46%
15.8s Best Heuristic Solution Objective: 326.25
15.8s Vehicles Used in Best Solution: 100
15.8s Best Solution Cost: 146.82
15.9s ✓ 所有车辆的装载体积都满足容量约束
15.9s Step 9耗时: 0.05s
15.9s Step 10: 生成报告和图表...
17.0s Step 10耗时: 1.13s
***************************************************************************
                      优化完成! 2025-09-22 17:55:39.657295
***************************************************************************
====================================================================================================
***************************************************************************
                     The Vehicle Loading Plan is Done!
***************************************************************************
(base) PS D:\Gurobi_code\Problem2\ALNSCode> python check_solution.py
INFO:__main__:加载输入数据...
INFO:DataALNS:配置参数加载成功
INFO:DataALNS:成功加载 订单需求信息: 48 行数据
INFO:DataALNS:成功加载 生产基地库存容量上限: 3 行数据
INFO:DataALNS:成功加载 SKU体积信息: 10 行数据
INFO:DataALNS:成功加载 车辆类型信息: 3 行数据
INFO:DataALNS:成功加载 生产基地生产计划: 29 行数据
INFO:DataALNS:成功加载 生产基地期初库存: 10 行数据
INFO:DataALNS:数据完整性验证通过
INFO:DataALNS:数据加载和处理完成
INFO:__main__:加载输出数据...
INFO:OutputDataALNS:开始加载数据集: dataset_6
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_6\opt_result.csv, 形状: (102, 7)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_6\opt_details.csv, 形状: (102, 11)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_6\opt_summary.csv, 形状: (100, 9)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_6\non_fulfill.csv, 形状: (0, 3)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_6\sku_inv_left.csv, 形状: (90, 4)
INFO:OutputDataALNS:字典索引生成完成
INFO:OutputDataALNS:数据验证通过
INFO:OutputDataALNS:数据加载完成

数据统计:
输入数据 - 工厂: 3, 经销商: 8, SKU: 10
输出数据统计: {'total_deliveries': 73, 'total_vehicles_used': 100, 'unfulfilled_demands': 0, 'inventory_records': 90, 'total_quantity_shipped': 3473, 'unique_vehicles': 100}
INFO:__main__:开始解决方案验证...
INFO:__main__:检查订单满足情况...
INFO:__main__:经销商 Z6274351 的 SKU G6172498053 配送超量: 需求 96, 实际配送 128, 超出 32
INFO:__main__:检查生产基地库存上限约束...
INFO:__main__:检查车辆容量约束...
INFO:__main__:车辆 46 (类型: 9.3) 在第 1 天未达到最小起运量: 最小起运量 41, 实际装载 19.200000000000003
INFO:__main__:车辆 48 (类型: 11.0) 在第 1 天未达到最小起运量: 最小起运量 79, 实际装载 77.7
INFO:__main__:车辆 98 (类型: 5.7) 在第 2 天未达到最小起运量: 最小起运量 25, 实际装载 4.800000000000001
INFO:__main__:车辆 76 (类型: 11.0) 在第 2 天未达到最小起运量: 最小起运量 79, 实际装载 19.8
INFO:__main__:车辆 94 (类型: 5.7) 在第 2 天未达到最小起运量: 最小起运量 25, 实际装载 23.4
INFO:__main__:车辆 96 (类型: 5.7) 在第 2 天未达到最小起运量: 最小起运量 25, 实际装载 16.2
INFO:__main__:车辆 80 (类型: 11.0) 在第 2 天未达到最小起运量: 最小起运量 79, 实际装载 77.4
INFO:__main__:车辆 99 (类型: 5.7) 在第 2 天未达到最小起运量: 最小起运量 25, 实际装载 6.6000000000000005
INFO:__main__:车辆 71 (类型: 11.0) 在第 3 天未达到最小起运量: 最小起运量 79, 实际装载 77.0
INFO:__main__:车辆 62 (类型: 11.0) 在第 3 天未达到最小起运量: 最小起运量 79, 实际装载 19.8
INFO:__main__:车辆 21 (类型: 11.0) 在第 3 天未达到最小起运量: 最小起运量 79, 实际装载 13.5
INFO:__main__:车辆 97 (类型: 5.7) 在第 3 天未达到最小起运量: 最小起运量 25, 实际装载 13.2
INFO:__main__:车辆 79 (类型: 11.0) 在第 3 天未达到最小起运量: 最小起运量 79, 实际装载 24.3
INFO:__main__:检查库存流转约束...

============================================================
解决方案验证结果摘要
============================================================
需求满足约束: ✅ 通过

生产基地库存上限约束: ✅ 通过

车辆容量约束: ✅ 通过

库存流转约束: ✅ 通过

总违反数量: 0
解决方案状态: 可行
============================================================
(base) PS D:\Gurobi_code\Problem2\ALNSCode>
