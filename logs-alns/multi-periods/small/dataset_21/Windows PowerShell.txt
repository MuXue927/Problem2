(Problem2) PS D:\Gurobi_code\Problem2\ALNSCode> python main.py
0.0s 开始优化流程! / 2025-09-23 00:46:27.991020
0.0s Step 1: 加载数据...
0.0s Loading Data...
0.0s Data loading elapsed time: 0.02s
0.2s Step 1耗时: 0.24s
0.2s Step 2: 创建初始解...
0.2s Initializing the solution...
1.5s Initial Solution Objective: 4304.87
1.6s Vehicles Used in Initial Solution: 340
1.6s Initial Solution Cost: 374.00
1.6s Step 2耗时: 1.31s
1.6s Step 3: 设置ALNS算法...
1.6s 注册destroy算子...
1.6s 所有destroy算子注册完成
1.6s 注册repair算子...
1.6s 所有repair算子注册完成
1.6s Step 3耗时: 0.00s
1.6s Step 4: 配置算子选择机制...
1.6s Step 4耗时: 0.00s
1.6s Step 5: 配置接受准则...
1.6s Step 5耗时: 0.00s
1.6s Step 6: 配置停止准则...
1.6s 组合停止准则配置: 最大300次迭代 或 最大900秒运行时间
1.6s Step 6耗时: 0.00s
1.6s Step 7: 设置追踪器和回调函数...
1.6s Step 7耗时: 0.00s
1.6s Step 8: 运行ALNS算法...
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0090s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0802s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0078s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0003s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0079s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0834s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0077s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 82 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1204s
4.6s Iteration 1: New best feasible solution found!
4.6s Objective: 4326.27, Gap: 0.00%, Time: 0.41s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0690s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0034s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0110s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0007s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0209s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1612s
[OPLOG] local_search_repair: 0.3622s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0105s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 正在构建特征和标签数据 ...
[OPLOG] tracker中无数据, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6656s
[OPLOG] local_search_repair: 0.8588s
构建训练数据: 特征长度 1, 标签长度 1, 目标函数改进 0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0098s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.4315s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0101s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5138s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0107s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0022s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0108s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0044s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0117s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0235s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0143s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 75 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2408s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0122s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2945s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0122s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5289s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0145s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0136s
[OPLOG] local_search_repair: 0.2659s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0126s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9568s
[OPLOG] local_search_repair: 1.1868s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0128s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0006s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0129s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 1 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0585s
[OPLOG] 计算的实际特征: [77.5, 1.6392857142857142, 2.0, np.float64(122.16666666666667), np.float64(0.6847993475952056)]
[OPLOG] 已保存实际训练数据: 特征值长度=2, 标签长度=2, 改进=0.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0149s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2232s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0229s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3272s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0220s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3316s
[OPLOG] local_search_repair: 0.5709s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0127s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0022s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0256s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 24 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0886s
9.2s Found feasible solution with cost: 367.60
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0164s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4650s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0147s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 2 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1462s
[OPLOG] 计算的实际特征: [66.16666666666667, 2.1933649289099524, 2.0, np.float64(65.33333333333333), np.float64(0.684980214396382)]
[OPLOG] 已保存实际训练数据: 特征值长度=3, 标签长度=3, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0154s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0043s
[OPLOG] local_search_repair: 0.2873s
10.3s Found feasible solution with cost: 363.90
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0152s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.5729s
[OPLOG] local_search_repair: 0.6310s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0173s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 3 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0034s
[OPLOG] local_search_repair: 0.0120s
[OPLOG] 已保存实际训练数据: 特征值长度=4, 标签长度=4, 改进=0.0000
13.7s Iteration 5: New best feasible solution found!
13.7s Objective: 4253.26, Gap: 0.00%, Time: 9.51s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0183s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 4 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5353s
[OPLOG] 计算的实际特征: [65.5, 1.7149999999999999, 2.0, np.float64(92.66666666666667), np.float64(0.7354702585214835)]
[OPLOG] 已保存实际训练数据: 特征值长度=5, 标签长度=5, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0169s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0039s
[OPLOG] local_search_repair: 0.0136s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0145s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1323s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0162s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1653s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0150s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 5 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0042s
[OPLOG] 计算的实际特征: [88.24137931034483, 1.9562170919400577, 2.0, np.float64(289.7816091954023), np.float64(0.6804579386857869)]
[OPLOG] 已保存实际训练数据: 特征值长度=6, 标签长度=6, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0174s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0164s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0657s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0163s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 71 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2336s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0164s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0032s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0173s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4778s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0156s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 74 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2513s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0183s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 6 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0035s
[OPLOG] 计算的实际特征: [77.17105263157895, 2.1011651616661813, 2.0, np.float64(161.1919191919192), np.float64(0.7030820269055563)]
[OPLOG] 已保存实际训练数据: 特征值长度=7, 标签长度=7, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0162s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7437s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0178s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 7 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0032s
[OPLOG] 计算的实际特征: [81.37333333333333, 2.091675946547884, 2.0, np.float64(157.15511551155114), np.float64(0.6961434861434862)]
[OPLOG] 已保存实际训练数据: 特征值长度=8, 标签长度=8, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0160s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0034s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0159s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0033s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0174s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6675s
[OPLOG] local_search_repair: 0.7185s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0173s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6877s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0164s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 8 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0043s
[OPLOG] 计算的实际特征: [52.0, 1.1, 2.0, np.float64(102.66666666666667), np.float64(0.6973960129285572)]
[OPLOG] 已保存实际训练数据: 特征值长度=9, 标签长度=9, 改进=0.0000
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0142s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 9 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6762s
[OPLOG] 计算的实际特征: [57.184615384615384, 2.0622516556291393, 2.0, np.float64(102.03947368421052), np.float64(0.6987191171401698)]
[OPLOG] 已保存实际训练数据: 特征值长度=10, 标签长度=10, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0164s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0040s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0171s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 10 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0129s
[OPLOG] local_search_repair: 0.0218s
[OPLOG] 计算的实际特征: [102.0, 1.1, 2.0, np.float64(91.66666666666667), np.float64(0.6982096223960129)]
[OPLOG] 已保存实际训练数据: 特征值长度=11, 标签长度=11, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0198s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0091s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0175s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0031s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0174s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6559s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0180s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7711s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0173s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5020s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0329s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0872s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0195s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6508s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0275s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2635s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0178s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 7 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0383s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0195s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2235s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0198s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0199s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0212s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0025s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0229s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0022s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0201s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0025s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0191s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1948s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0215s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 73 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 迭代 2: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2500s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0223s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0053s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0212s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2112s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0307s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0045s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0201s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0030s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0221s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6826s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0311s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 23 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0902s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0241s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 11 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0052s
[OPLOG] 计算的实际特征: [50.0, 2.0273972602739727, 2.0, np.float64(243.22222222222223), np.float64(0.7012171659186585)]
[OPLOG] 已保存实际训练数据: 特征值长度=12, 标签长度=12, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0216s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0025s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0222s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5102s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0230s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0037s
[OPLOG] local_search_repair: 0.0267s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0278s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0052s
[OPLOG] local_search_repair: 0.0161s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0230s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7666s
[OPLOG] local_search_repair: 0.8001s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0247s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2286s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0234s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4191s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0954s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4923s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0324s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 12 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2205s
[OPLOG] 计算的实际特征: [98.0, 2.2, 2.0, np.float64(93.0), np.float64(0.7000009172925838)]
[OPLOG] 已保存实际训练数据: 特征值长度=13, 标签长度=13, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0234s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0033s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0234s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0116s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0233s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 32 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1193s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0279s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1121s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0265s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0686s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0238s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0004s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0253s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 13 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0027s
[OPLOG] 计算的实际特征: [83.11666666666666, 2.102017358667605, 2.0, np.float64(301.95433789954336), np.float64(0.7043393198456488)]
[OPLOG] 已保存实际训练数据: 特征值长度=14, 标签长度=14, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0251s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0296s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0253s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 76 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2444s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0262s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0823s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0269s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0038s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0242s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2989s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0364s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0831s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0389s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3044s
[OPLOG] local_search_repair: 0.3192s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0253s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0028s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0254s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0847s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0259s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 64 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2036s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0375s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0816s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0245s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 14 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 76 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2388s
[OPLOG] 已保存实际训练数据: 特征值长度=15, 标签长度=15, 改进=1000000.0000
32.1s Found feasible solution with cost: 358.20
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0223s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0643s
[OPLOG] local_search_repair: 1.1130s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0245s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 114 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3349s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0241s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 6 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0340s
36.5s Iteration 19: New best feasible solution found!
36.5s Objective: 4031.66, Gap: 0.00%, Time: 32.29s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0346s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0032s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0251s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 15 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0038s
[OPLOG] 计算的实际特征: [107.0, 1.5516260162601627, 2.0, np.float64(103.26666666666667), np.float64(0.7035752567379073)]
[OPLOG] 已保存实际训练数据: 特征值长度=16, 标签长度=16, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0266s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1522s
[OPLOG] local_search_repair: 0.1810s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0255s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0029s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0377s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0895s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0249s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0332s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0391s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0640s
34.7s Found feasible solution with cost: 358.90
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0252s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0004s
37.5s Iteration 20: New best feasible solution found!
37.5s Objective: 4027.66, Gap: 0.00%, Time: 33.34s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0250s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0823s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0269s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4028s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0252s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0003s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0257s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4727s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0370s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2975s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0255s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2650s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0257s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0033s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0241s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7718s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0286s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1609s
[OPLOG] local_search_repair: 0.2228s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0251s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5546s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0375s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0676s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0248s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 16 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0443s
[OPLOG] 计算的实际特征: [82.74074074074075, 1.9998266897746966, 2.0, np.float64(99.32051282051282), np.float64(0.6967019045614364)]
[OPLOG] 已保存实际训练数据: 特征值长度=17, 标签长度=17, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0362s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0815s
40.1s Found feasible solution with cost: 357.30
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0249s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 119 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3299s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0256s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0030s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0331s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0027s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0378s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 17 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: greedy_repair
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2796s
[OPLOG] 计算的实际特征: [60.38461538461539, 2.0476603119584054, 2.0, np.float64(68.08771929824562), np.float64(0.6982824445787409)]
[OPLOG] 已保存实际训练数据: 特征值长度=18, 标签长度=18, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0280s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 96 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3024s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0384s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 21 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0824s
44.3s Iteration 23: New best feasible solution found!
44.3s Objective: 3917.56, Gap: 0.00%, Time: 40.11s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0293s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 62 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2028s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0289s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1590s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0271s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 18 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: local_search_repair
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0035s
[OPLOG] local_search_repair: 0.0807s
[OPLOG] 已保存实际训练数据: 特征值长度=19, 标签长度=19, 改进=0.0008
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0301s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0123s
45.2s Iteration 24: New best feasible solution found!
45.2s Objective: 3917.56, Gap: 0.00%, Time: 41.09s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0303s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0023s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0319s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0035s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0300s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6955s
[OPLOG] local_search_repair: 0.7680s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0292s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0036s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0291s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0335s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0327s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.8061s
[OPLOG] local_search_repair: 0.8460s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0314s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 19 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0031s
[OPLOG] 计算的实际特征: [80.54794520547945, 2.0367909238249595, 2.0, np.float64(198.14074074074074), np.float64(0.7103898989898989)]
[OPLOG] 已保存实际训练数据: 特征值长度=20, 标签长度=20, 改进=0.0000
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0312s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 11 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0522s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0308s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1651s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0344s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0008s
48.0s Iteration 26: New best feasible solution found!
48.0s Objective: 3915.56, Gap: 0.00%, Time: 43.87s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0329s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2011s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0303s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0037s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0336s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4873s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0412s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2955s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0308s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 20 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2979s
[OPLOG] 计算的实际特征: [69.33333333333333, 2.4726708074534165, 2.0, np.float64(202.8), np.float64(0.7127845229072223)]
[OPLOG] 已保存实际训练数据: 特征值长度=21, 标签长度=21, 改进=0.0000
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0307s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.8319s
[OPLOG] local_search_repair: 0.8702s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0335s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 21 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: infeasible_repair
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0046s
[OPLOG] 已保存实际训练数据: 特征值长度=22, 标签长度=22, 改进=0.0000
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0409s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2255s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0290s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5234s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0437s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 31 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1131s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0330s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0029s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0312s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7478s
[OPLOG] local_search_repair: 0.8122s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0303s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6658s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0308s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0680s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0315s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.8092s
[OPLOG] local_search_repair: 0.9048s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0334s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 22 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: smart_batch_repair
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0263s
[OPLOG] 已保存实际训练数据: 特征值长度=23, 标签长度=23, 改进=1000000.0000
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0345s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4955s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0329s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 23 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: inventory_balance_repair
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5347s
[OPLOG] 计算的实际特征: [93.5, 1.9506711409395971, 2.0, np.float64(78.38888888888889), np.float64(0.7730940188519374)]
[OPLOG] 已保存实际训练数据: 特征值长度=24, 标签长度=24, 改进=0.0000
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0363s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0056s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0330s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 61 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1987s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0335s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0034s
[OPLOG] local_search_repair: 0.0281s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0340s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2954s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0509s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 28 个未满足需求
[OPLOG] 批次 1/2 处理成功
[OPLOG] 批次 2/2 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1069s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0380s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4104s
[OPLOG] local_search_repair: 0.4724s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0367s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0745s
[OPLOG] local_search_repair: 0.0827s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0352s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3941s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0369s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 数据量不足 24 < 25, 随机选择一种修复算子 ...
[OPLOG] 随机选择修复算子: urgency_repair
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3880s
[OPLOG] 计算的实际特征: [71.75, 2.4051282051282055, 2.0, np.float64(135.83333333333334), np.float64(0.7133685411810411)]
[OPLOG] 已保存实际训练数据: 特征值长度=25, 标签长度=25, 改进=0.0000
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.1190s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3346s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0364s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 无缓存模型，开始首次训练
[OPLOG] 自适应选择Ridge模型 (数据量: 25)
[Tracker] Cached ML model at iteration 32
[OPLOG] 模型训练完成, 已缓存到tracker
[OPLOG] 11 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1144s
[OPLOG] 计算的实际特征: [67.33333333333333, 1.8546875, 2.0, np.float64(101.93333333333334), np.float64(0.7082186611642804)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=27, 标签长度=27, 改进=0.0000
[OPLOG] ML修复完成: 84次预测, 1次成功插入, 11个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1699s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0475s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2303s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0380s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0035s
[OPLOG] local_search_repair: 0.0126s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0367s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2429s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0407s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0048s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0344s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0023s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0375s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 1 迭代
[OPLOG] 199 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0797s
[OPLOG] 计算的实际特征: [61.038167938931295, 2.0241937880814387, 2.0, np.float64(148.1240740740741), np.float64(0.7155519693981233)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=28, 标签长度=28, 改进=0.0000
[OPLOG] ML修复完成: 1542次预测, 0次成功插入, 199个需求使用greedy修复
[OPLOG] learning_based_repair: 1.2631s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0355s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0039s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0348s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5258s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0362s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0677s
[OPLOG] local_search_repair: 0.0763s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0358s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1140s
[OPLOG] local_search_repair: 1.1654s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0357s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7179s
[OPLOG] local_search_repair: 0.7791s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0357s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0024s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0506s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0932s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0431s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 51 个未满足需求
[OPLOG] 批次 1/3 处理成功
[OPLOG] 批次 2/3 处理成功
[OPLOG] 批次 3/3 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.1821s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0373s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6729s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0366s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2029s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0385s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1392s
[OPLOG] local_search_repair: 1.2014s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0389s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7130s
[OPLOG] local_search_repair: 0.7732s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0372s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2882s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0418s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0037s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0383s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7623s
[OPLOG] local_search_repair: 0.8121s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0409s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0039s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0376s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5103s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0378s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6792s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0378s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 4 迭代
[OPLOG] 9 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1217s
[OPLOG] 计算的实际特征: [105.5, 2.7551020408163267, 2.0, np.float64(78.66666666666667), np.float64(0.7056453889787223)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=29, 标签长度=29, 改进=0.0000
[OPLOG] ML修复完成: 66次预测, 0次成功插入, 9个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1527s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0398s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0028s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0371s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0027s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0362s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2588s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0359s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0002s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0424s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 4 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0280s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0391s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0021s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0390s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9757s
[OPLOG] local_search_repair: 1.0301s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0467s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0050s
[OPLOG] local_search_repair: 0.0516s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0407s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 5 迭代
[OPLOG] 64 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7541s
[OPLOG] 计算的实际特征: [75.5, 2.121728240450845, 2.0, np.float64(145.1851851851852), np.float64(0.7019977133232167)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=30, 标签长度=30, 改进=0.0000
[OPLOG] ML修复完成: 480次预测, 0次成功插入, 64个需求使用greedy修复
[OPLOG] learning_based_repair: 0.8283s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0536s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3058s
[OPLOG] local_search_repair: 0.3720s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0561s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2627s
[OPLOG] local_search_repair: 0.2843s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0521s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.2299s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0417s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 3 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0245s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.1220s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.8146s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0413s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 6 迭代
[OPLOG] 80 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7364s
[OPLOG] 计算的实际特征: [76.62962962962963, 2.1121472392638037, 2.0, np.float64(102.11904761904762), np.float64(0.6982921302321934)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=33, 标签长度=33, 改进=0.0000
[OPLOG] ML修复完成: 618次预测, 2次成功插入, 80个需求使用greedy修复
[OPLOG] learning_based_repair: 0.8569s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0554s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1043s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0434s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5321s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0408s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5431s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0425s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7273s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0429s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0027s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0442s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0121s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0427s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1698s
[OPLOG] local_search_repair: 0.1914s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0448s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7849s
[OPLOG] local_search_repair: 0.8516s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0418s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5574s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0409s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0042s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0439s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 63 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2054s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0438s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 7 迭代
[OPLOG] 无未满足需求, 直接返回当前解
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0401s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.3260s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0449s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 8 迭代
[OPLOG] 6 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0925s
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=34, 标签长度=34, 改进=1000000.0000
[OPLOG] ML修复完成: 54次预测, 0次成功插入, 6个需求使用greedy修复
[OPLOG] learning_based_repair: 0.1200s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0411s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7442s
[OPLOG] local_search_repair: 0.8256s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0441s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0676s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0474s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2128s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0430s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0122s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0422s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5437s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0485s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6977s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0438s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4983s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0523s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 10 迭代
[OPLOG] 25 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3186s
[OPLOG] 计算的实际特征: [60.0, 2.4085, 2.0, np.float64(109.03333333333333), np.float64(0.7022243114388129)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=35, 标签长度=35, 改进=0.0000
[OPLOG] ML修复完成: 198次预测, 0次成功插入, 25个需求使用greedy修复
[OPLOG] learning_based_repair: 0.3614s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0421s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 198 个未满足需求
[OPLOG] 批次 1/11 处理成功
[OPLOG] 批次 2/11 处理成功
[OPLOG] 批次 3/11 处理成功
[OPLOG] 批次 4/11 处理成功
[OPLOG] 批次 5/11 处理成功
[OPLOG] 批次 6/11 处理成功
[OPLOG] 批次 7/11 处理成功
[OPLOG] 批次 8/11 处理成功
[OPLOG] 批次 9/11 处理成功
[OPLOG] 批次 10/11 处理成功
[OPLOG] 批次 11/11 处理成功
[OPLOG] 迭代 2: 剩余 5 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.4310s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0430s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 64 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2081s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0436s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2360s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0440s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7403s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0448s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0152s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0587s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4079s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0463s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 74 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2497s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0493s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0051s
[OPLOG] local_search_repair: 0.0440s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0468s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1118s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0525s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.4636s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.1284s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0021s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0461s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1425s
[OPLOG] local_search_repair: 1.2081s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0491s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2185s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0470s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.4312s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0477s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.8834s
[OPLOG] local_search_repair: 1.0122s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0483s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1950s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0489s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.3073s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0512s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0046s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0587s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0047s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0507s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2967s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0462s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.1408s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0502s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.1428s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0493s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4696s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0472s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.1646s
[OPLOG] local_search_repair: 0.2284s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0499s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0228s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0477s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 77 个未满足需求
[OPLOG] 批次 1/5 处理成功
[OPLOG] 批次 2/5 处理成功
[OPLOG] 批次 3/5 处理成功
[OPLOG] 批次 4/5 处理成功
[OPLOG] 批次 5/5 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2584s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0480s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.6922s
[OPLOG] local_search_repair: 0.7611s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0487s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.3760s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0613s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2642s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0491s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 118 个未满足需求
[OPLOG] 批次 1/7 处理成功
[OPLOG] 批次 2/7 处理成功
[OPLOG] 批次 3/7 处理成功
[OPLOG] 批次 4/7 处理成功
[OPLOG] 批次 5/7 处理成功
[OPLOG] 批次 6/7 处理成功
[OPLOG] 批次 7/7 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 5: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 6: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 7: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 8: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3908s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0485s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2012s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0457s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0031s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0482s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 13 迭代
[OPLOG] 100 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.8839s
[OPLOG] 计算的实际特征: [85.16666666666667, 1.9536377708978327, 2.0, np.float64(99.78947368421052), np.float64(0.6871781218426586)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=39, 标签长度=39, 改进=0.0000
[OPLOG] ML修复完成: 798次预测, 3次成功插入, 100个需求使用greedy修复
[OPLOG] learning_based_repair: 1.0389s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0455s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0027s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0516s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0041s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0487s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 65 个未满足需求
[OPLOG] 批次 1/4 处理成功
[OPLOG] 批次 2/4 处理成功
[OPLOG] 批次 3/4 处理成功
[OPLOG] 批次 4/4 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.2145s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0507s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0033s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.1229s
[OPLOG] 开始执行 learning_based_repair 算子
[OPLOG] 使用缓存模型, 距离上次训练 14 迭代
[OPLOG] 100 个需求ML插入失败, 使用greedy修复
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0618s
[OPLOG] 计算的实际特征: [78.34146341463415, 2.1484304932735423, 2.0, np.float64(111.52150537634408), np.float64(0.7044330430928368)]
[OPLOG] 已保存greedy修复的实际训练数据: 特征值长度=45, 标签长度=45, 改进=0.0000
[OPLOG] ML修复完成: 768次预测, 5次成功插入, 100个需求使用greedy修复
[OPLOG] learning_based_repair: 1.2218s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0416s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.0134s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0464s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.4902s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0452s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0037s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0429s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5304s
[OPLOG] 开始执行 shaw_removal 算子
[OPLOG] shaw_removal: 0.0465s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7557s
[OPLOG] local_search_repair: 0.8531s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0497s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 113 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 迭代 2: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3472s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0445s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0321s
[OPLOG] 开始执行 path_removal 算子
[OPLOG] path_removal: 0.0441s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0372s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0477s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.7078s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0541s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.0654s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0612s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.3527s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0482s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.5101s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0453s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.1402s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0442s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.9069s
[OPLOG] local_search_repair: 1.0409s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0477s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0124s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0434s
[OPLOG] 开始执行 local_search_repair 算子
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 1.0429s
[OPLOG] local_search_repair: 1.1533s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0446s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.0141s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0455s
[OPLOG] 开始执行 smart_batch_repair 算子
[OPLOG] 问题规模: 199 需求, 超时: 19.900000000000002s, 批次大小: 19
[OPLOG] 迭代 1: 剩余 110 个未满足需求
[OPLOG] 批次 1/6 处理成功
[OPLOG] 批次 2/6 处理成功
[OPLOG] 批次 3/6 处理成功
[OPLOG] 批次 4/6 处理成功
[OPLOG] 批次 5/6 处理成功
[OPLOG] 批次 6/6 处理成功
[OPLOG] 迭代 2: 剩余 2 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 3: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 4: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 5: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 6: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 7: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 迭代 8: 剩余 1 个未满足需求
[OPLOG] 批次 1/1 处理成功
[OPLOG] 所有需求已满足, 算法提前退出
[OPLOG] 开始最终强制装载
[OPLOG] 强制装载完成, 处理 0 个需求
[OPLOG] Smart Batch Repair 完成: 0.3462s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0446s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0029s
[OPLOG] 开始执行 worst_removal 算子
[OPLOG] worst_removal: 0.0440s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0003s
[OPLOG] 开始执行 random_removal 算子
[OPLOG] random_removal: 0.0478s
[OPLOG] 开始执行 urgency_repair 算子
[OPLOG] urgency_repair: 0.2408s
[OPLOG] 开始执行 periodic_shaw_removal 算子
[OPLOG] periodic_shaw_removal: 0.0552s
[OPLOG] 开始执行 greedy_repair 算子
[OPLOG] greedy_repair: 0.2375s
[OPLOG] 开始执行 infeasible_removal 算子
[OPLOG] infeasible_removal: 0.0455s
[OPLOG] 开始执行 inventory_balance_repair 算子
[OPLOG] inventory_balance_repair: 0.0021s
[OPLOG] 开始执行 surplus_inventory_removal 算子
[OPLOG] surplus_inventory_removal: 0.0455s
[OPLOG] 开始执行 infeasible_repair 算子
[OPLOG] infeasible_repair: 0.0031s
[STOP] MaxIterations 触发停止条件 (运行时间: 110.98s)
112.5s Step 8耗时: 110.99s
112.6s 优化总耗时: 112.55s
112.6s Step 9: 处理结果...
112.6s Total iterations tracked: 50
112.6s Best objective found: 3915.5561
112.6s Final Gap: 4.03%
112.6s ALNS Final Gap: 4.86%
112.6s Best Heuristic Solution Objective: 3881.66
112.6s Vehicles Used in Best Solution: 333
112.6s Best Solution Cost: 357.30
112.6s ✓ 所有车辆的装载体积都满足容量约束
112.6s Step 9耗时: 0.07s
112.6s Step 10: 生成报告和图表...
113.7s Step 10耗时: 1.05s
***************************************************************************
                      优化完成! 2025-09-23 00:48:21.657879
***************************************************************************
====================================================================================================
***************************************************************************
                     The Vehicle Loading Plan is Done!
***************************************************************************
(Problem2) PS D:\Gurobi_code\Problem2\ALNSCode> python check_solution.py
INFO:__main__:加载输入数据...
INFO:DataALNS:配置参数加载成功
INFO:DataALNS:成功加载 订单需求信息: 199 行数据
INFO:DataALNS:成功加载 生产基地库存容量上限: 2 行数据
INFO:DataALNS:成功加载 SKU体积信息: 21 行数据
INFO:DataALNS:成功加载 车辆类型信息: 2 行数据
INFO:DataALNS:成功加载 生产基地生产计划: 55 行数据
INFO:DataALNS:成功加载 生产基地期初库存: 21 行数据
INFO:DataALNS:数据完整性验证通过
INFO:DataALNS:数据加载和处理完成
INFO:__main__:加载输出数据...
INFO:OutputDataALNS:开始加载数据集: dataset_21
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_21\opt_result.csv, 形状: (333, 7)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_21\opt_details.csv, 形状: (333, 11)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_21\opt_summary.csv, 形状: (333, 9)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_21\non_fulfill.csv, 形状: (0, 3)
INFO:OutputDataALNS:成功加载文件: D:\Gurobi_code\Problem2\OutPut-ALNS\multiple-periods\small\dataset_21\sku_inv_left.csv, 形状: (126, 4)
INFO:OutputDataALNS:字典索引生成完成
INFO:OutputDataALNS:数据验证通过
INFO:OutputDataALNS:数据加载完成

数据统计:
输入数据 - 工厂: 2, 经销商: 16, SKU: 21
输出数据统计: {'total_deliveries': 231, 'total_vehicles_used': 333, 'unfulfilled_demands': 0, 'inventory_records': 126, 'total_quantity_shipped': 14801, 'unique_vehicles': 333}
INFO:__main__:开始解决方案验证...
INFO:__main__:检查订单满足情况...
INFO:__main__:检查生产基地库存上限约束...
INFO:__main__:检查车辆容量约束...
INFO:__main__:车辆 4 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 33.599999999999994
INFO:__main__:车辆 109 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 49.3
INFO:__main__:车辆 44 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 46.4
INFO:__main__:车辆 62 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 60.0
INFO:__main__:车辆 66 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 49.4
INFO:__main__:车辆 303 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 20.4
INFO:__main__:车辆 39 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 21.0
INFO:__main__:车辆 277 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 23.8
INFO:__main__:车辆 60 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 55.1
INFO:__main__:车辆 84 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 42.0
INFO:__main__:车辆 89 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 15.3
INFO:__main__:车辆 180 (类型: 12.5) 在第 1 天未达到最小起运量: 最小起运量 74, 实际装载 51.3
INFO:__main__:车辆 290 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 2.9
INFO:__main__:车辆 37 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 42.0
INFO:__main__:车辆 87 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 66.69999999999999
INFO:__main__:车辆 133 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 68.0
INFO:__main__:车辆 13 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 58.8
INFO:__main__:车辆 96 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 47.6
INFO:__main__:车辆 64 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 51.3
INFO:__main__:车辆 35 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 42.0
INFO:__main__:车辆 42 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 56.1
INFO:__main__:车辆 110 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 6.9
INFO:__main__:车辆 179 (类型: 12.5) 在第 1 天未达到最小起运量: 最小起运量 74, 实际装载 64.6
INFO:__main__:车辆 275 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 43.5
INFO:__main__:车辆 19 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 28.0
INFO:__main__:车辆 81 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 30.6
INFO:__main__:车辆 83 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 8.8
INFO:__main__:车辆 59 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 57.0
INFO:__main__:车辆 112 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 10.5
INFO:__main__:车辆 116 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 63.8
INFO:__main__:车辆 57 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 40.8
INFO:__main__:车辆 331 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 49.4
INFO:__main__:车辆 17 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 62.9
INFO:__main__:车辆 23 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 50.4
INFO:__main__:车辆 48 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 46.2
INFO:__main__:车辆 30 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 14.0
INFO:__main__:车辆 74 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 52.0
INFO:__main__:车辆 324 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 19.8
INFO:__main__:车辆 56 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 42.5
INFO:__main__:车辆 95 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 34.0
INFO:__main__:车辆 307 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 61.2
INFO:__main__:车辆 106 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 47.5
INFO:__main__:车辆 328 (类型: 17.6) 在第 1 天未达到最小起运量: 最小起运量 73, 实际装载 72.60000000000001
INFO:__main__:车辆 139 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 33.599999999999994
INFO:__main__:车辆 144 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 68.39999999999999
INFO:__main__:车辆 247 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 69.7
INFO:__main__:车辆 297 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 60.9
INFO:__main__:车辆 143 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 60.8
INFO:__main__:车辆 142 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 70.3
INFO:__main__:车辆 150 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 57.0
INFO:__main__:车辆 152 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 48.3
INFO:__main__:车辆 181 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 41.8
INFO:__main__:车辆 288 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 17.4
INFO:__main__:车辆 333 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 30.8
INFO:__main__:车辆 162 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 39.1
INFO:__main__:车辆 178 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 70.2
INFO:__main__:车辆 299 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 13.2
INFO:__main__:车辆 183 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 32.2
INFO:__main__:车辆 253 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 56.1
INFO:__main__:车辆 147 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 25.2
INFO:__main__:车辆 157 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 59.4
INFO:__main__:车辆 246 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 73.8
INFO:__main__:车辆 158 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 57.0
INFO:__main__:车辆 187 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 4.2
INFO:__main__:车辆 279 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 13.6
INFO:__main__:车辆 154 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 12.6
INFO:__main__:车辆 156 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 72.2
INFO:__main__:车辆 136 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 49.4
INFO:__main__:车辆 182 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 31.5
INFO:__main__:车辆 185 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 19.0
INFO:__main__:车辆 200 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 17.099999999999998
INFO:__main__:车辆 267 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 70.4
INFO:__main__:车辆 92 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 52.8
INFO:__main__:车辆 131 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 49.50000000000001
INFO:__main__:车辆 332 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 8.5
INFO:__main__:车辆 49 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 52.8
INFO:__main__:车辆 120 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 20.0
INFO:__main__:车辆 123 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 7.5
INFO:__main__:车辆 115 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 21.6
INFO:__main__:车辆 128 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 53.900000000000006
INFO:__main__:车辆 316 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 23.8
INFO:__main__:车辆 99 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 1.7
INFO:__main__:车辆 168 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 19.8
INFO:__main__:车辆 186 (类型: 12.5) 在第 2 天未达到最小起运量: 最小起运量 74, 实际装载 12.5
INFO:__main__:车辆 103 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 37.400000000000006
INFO:__main__:车辆 126 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 57.2
INFO:__main__:车辆 330 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 44.0
INFO:__main__:车辆 305 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 52.8
INFO:__main__:车辆 54 (类型: 17.6) 在第 2 天未达到最小起运量: 最小起运量 73, 实际装载 20.9
INFO:__main__:车辆 192 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 59.5
INFO:__main__:车辆 235 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 8.399999999999999
INFO:__main__:车辆 184 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 24.0
INFO:__main__:车辆 244 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 71.39999999999999
INFO:__main__:车辆 259 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 43.4
INFO:__main__:车辆 196 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 64.8
INFO:__main__:车辆 203 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 72.8
INFO:__main__:车辆 255 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 67.2
INFO:__main__:车辆 272 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 42.5
INFO:__main__:车辆 252 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 68.0
INFO:__main__:车辆 198 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 34.0
INFO:__main__:车辆 225 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 22.4
INFO:__main__:车辆 212 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 1.8
INFO:__main__:车辆 214 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 18.4
INFO:__main__:车辆 230 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 14.0
INFO:__main__:车辆 248 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 66.3
INFO:__main__:车辆 190 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 4.6
INFO:__main__:车辆 262 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 23.8
INFO:__main__:车辆 205 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 16.8
INFO:__main__:车辆 239 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 67.19999999999999
INFO:__main__:车辆 258 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 71.3
INFO:__main__:车辆 222 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 25.2
INFO:__main__:车辆 256 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 64.0
INFO:__main__:车辆 261 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 59.400000000000006
INFO:__main__:车辆 263 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 4.0
INFO:__main__:车辆 260 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 62.0
INFO:__main__:车辆 270 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 69.6
INFO:__main__:车辆 249 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 70.3
INFO:__main__:车辆 254 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 72.60000000000001
INFO:__main__:车辆 283 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 5.1
INFO:__main__:车辆 159 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 55.0
INFO:__main__:车辆 327 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 70.0
INFO:__main__:车辆 177 (类型: 12.5) 在第 3 天未达到最小起运量: 最小起运量 74, 实际装载 44.0
INFO:__main__:车辆 309 (类型: 17.6) 在第 3 天未达到最小起运量: 最小起运量 73, 实际装载 48.0
INFO:__main__:检查库存流转约束...

============================================================
解决方案验证结果摘要
============================================================
需求满足约束: ✅ 通过

生产基地库存上限约束: ✅ 通过

车辆容量约束: ✅ 通过

库存流转约束: ✅ 通过

总违反数量: 0
解决方案状态: 可行
============================================================
(Problem2) PS D:\Gurobi_code\Problem2\ALNSCode>
